{"version":3,"file":"svg-plant.esm.js","sources":["../node_modules/@babel/runtime/helpers/defineProperty.js","../src/util/util.ts","../src/Plant/plantPotSvg.ts","../src/util/bezierCurveBoundingBox.ts","../src/Plant/PlantBody.ts","../src/Plant/SvgPlant.ts","../src/Genera/BaseGenus.ts","../src/Genera/BushyPlantGenus.ts","../src/Genera/DragonTreeGenus.ts","../src/Genera/ZamiaGenus.ts","../src/Genera/PileaGenus.ts","../src/util/DevTools.ts","../src/main.ts"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import seedrandom from 'seedrandom';\r\nimport { attributeSet, pathDescriptionSegment, point, rngSeed } from '../types';\r\n\r\nconst html = {\r\n    node( tag: string, set?: attributeSet ): Element {\r\n        const node = document.createElement( tag );\r\n        html.attr( node, set );\r\n        return node;\r\n    },\r\n    nodeNS( tag: string, set: attributeSet, ns: string ): Element {\r\n        const node = document.createElementNS( ns, tag );\r\n        html.attr( node, set );\r\n        return node;\r\n    },\r\n    attr( node: Element, set: attributeSet = {} ): void {\r\n        for (let name in set) node.setAttribute( name, String( set[ name ] ) );\r\n    },\r\n\r\n    svg: {\r\n        root( set?: attributeSet ): SVGElement {\r\n            const svg = <SVGElement>html.svg.node( 'svg', set );\r\n            svg.setAttribute( 'xmlns', \"http://www.w3.org/2000/svg\" );\r\n            svg.setAttributeNS( \"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\" );\r\n            return svg;\r\n        },\r\n        node( tag: string, set?: attributeSet ): SVGElement {\r\n            const el = <SVGElement>html.nodeNS( tag, {}, \"http://www.w3.org/2000/svg\" );\r\n            html.attr( el, set );\r\n            return el;\r\n        },\r\n\r\n        compilePathDescription( points: pathDescriptionSegment[] ): string {\r\n            const d = [];\r\n\r\n            for (const p of points) {\r\n                if (p.length == 1) d.push( p );\r\n                else if (p.length == 2) d.push( p[0], p[1] );\r\n                else if (p.length == 3) d.push( p[0], p[1], p[2] );\r\n            }\r\n\r\n            return d.join( ' ' );\r\n        }\r\n    },\r\n};\r\n\r\nconst math = {\r\n    toRadians( degrees: number ): number {\r\n        return degrees * (Math.PI / 180);\r\n    },\r\n\r\n    fromAngle( point: point, angle: number, length: number, precision?:number ): point {\r\n        const a: point = [\r\n            Math.sin( math.toRadians( angle ) ) * length + point[0],\r\n            - Math.cos( math.toRadians( angle ) ) * length + point[1],\r\n        ];\r\n\r\n        if (precision) {\r\n            a[ 0 ] = Math.round( a[ 0 ] * precision );\r\n            a[ 1 ] = Math.round( a[ 1 ] * precision );\r\n        }\r\n\r\n        return a;\r\n    },\r\n\r\n    rectFromLine(\r\n        pointBottom: point, pointTop: point,\r\n        angleBottom: number, angleTop: number,\r\n        widthBottom: number, widthTop: number,\r\n        precision?: number\r\n    ): [ point, point, point, point ] {\r\n        widthBottom /= 2;\r\n        widthTop /= 2;\r\n        return [\r\n            math.fromAngle( pointBottom, angleBottom - 90, widthBottom, precision ),\r\n            math.fromAngle( pointTop, angleTop - 90, widthTop, precision ),\r\n            math.fromAngle( pointTop, angleTop + 90, widthTop, precision ),\r\n            math.fromAngle( pointBottom, angleBottom + 90, widthBottom, precision )\r\n        ];\r\n    },\r\n\r\n    pointOnLine( p1: point, p2: point, d: number ): point {\r\n        return [\r\n            p1[0] + d * (p2[0] - p1[0]),\r\n            p1[1] + d * (p2[1] - p1[1]),\r\n        ];\r\n    },\r\n\r\n    distance( p1: point, p2: point ): number {\r\n        const dx = p1[0] - p2[0];\r\n        const dy = p1[1] - p2[1];\r\n        return Math.sqrt( dx*dx + dy*dy );\r\n    }\r\n};\r\n\r\nconst plantHelper = {\r\n    rootPosAngle( rng: rng, xMax: number, maxAngle: number ) {\r\n        const x = rng.range( -xMax, xMax );\r\n        const f = Math.abs( x ) / xMax;\r\n        return {\r\n            x,\r\n            segmentAngle: maxAngle * f * (x < 0 ? -1 : 1),\r\n        };\r\n    },\r\n\r\n    segmentAngle( baseNode: node ): number {\r\n        if (baseNode.attr.segmentAngle !== undefined) return baseNode.attr.segmentAngle;\r\n        return baseNode.attr.angle;\r\n    },\r\n\r\n    nextAngle( rng: rng, pos: nodePos, prevNode: node, variance: number, alternate: boolean ): number {\r\n        if (pos.isOffshoot) return prevNode.attr.angle;\r\n\r\n        const pa = this.segmentAngle( prevNode );\r\n\r\n        if (alternate) {\r\n            const dir = pos.branchNum>0 ? 1 : prevNode.treeRoot.attr.x>=0 ? 1 : -1;\r\n            return pa + (prevNode.pos.num % 2 ? 1 : -1) * rng.range( 0, variance ) * dir;\r\n        }\r\n        else {\r\n            return pa + rng.range( -variance, variance );\r\n        }\r\n    },\r\n\r\n    archingBranchAngle( rng: rng, pos: nodePos, prevNode: node, variance: number, numAdjust: number ): number {\r\n        if (pos.isOffshoot) return prevNode.attr.angle;\r\n\r\n        const pa = plantHelper.segmentAngle( prevNode );\r\n        const base = prevNode.branchRoot.attr.branchArchAngle;\r\n        const f = numAdjust ? (1 - numAdjust) + numAdjust * (1 - pos.numFactor) : 1;\r\n\r\n        return pa + f * base + rng.range( -variance, variance );\r\n    },\r\n\r\n    repeat<T,U=number>(\r\n        { rng, cb, p=1, shuffle=true, steps, values, n }:\r\n        {\r\n            rng: rng,\r\n            cb: ( i: number | U ) => T,\r\n            steps?: { from: number, to: number, step: number },\r\n            values?: U[],\r\n            n?: number | [ number, number ],\r\n            p?: number, shuffle?: boolean\r\n        }\r\n    ): T[] {\r\n        const a: T[] = [];\r\n\r\n        if (p <= 0) return a;\r\n        const test = p < 1;\r\n\r\n        if (values !== undefined) {\r\n            for (let v of values) if (!test || rng.test( p )) {\r\n                a.push( cb( v ) );\r\n            }\r\n        }\r\n        else if (steps !== undefined) {\r\n            for (let i=steps.from; i<=steps.to; i+=steps.step) if (!test || rng.test( p )) {\r\n                a.push( cb( i ) );\r\n            }\r\n        }\r\n        else if (n !== undefined) {\r\n            if (Array.isArray( n )) n = rng.intRange( n[0], n[1] );\r\n\r\n            for (let i=0; i<n; i++) if (!test || rng.test( p )) {\r\n                a.push( cb( i ) );\r\n            }\r\n        }\r\n\r\n        if (shuffle) rng.shuffle( a );\r\n\r\n        return a;\r\n    }\r\n};\r\n\r\ninterface rng {\r\n    seed: string;\r\n    reset(): void;\r\n    random( v: number ): number;\r\n    test( p: number ): boolean;\r\n    test<T,U>( p: number, pass: T, fail: U ): T | U;\r\n    test<T,U>( p: number, pass?: T, fail?: U ): T | U | boolean;\r\n    range( v0: number, v1: number ): number;\r\n    intRange( v0: number, v1: number ): number;\r\n    ranges( ... ranges: Array<[ number, number, number? ]> ): number;\r\n    shuffle( a: Array<any> ): Array<any>;\r\n};\r\nconst rng = (seed: rngSeed): rng => {\r\n    const seedStr = (seed === undefined) ? (Math.random() + '').substring( 2 ) : String( seed );\r\n    let fn: seedrandom.prng;\r\n\r\n    const rng = {\r\n        get seed(): string {\r\n            return seedStr;\r\n        },\r\n        reset(): void {\r\n            fn = seedrandom( seedStr );\r\n        },\r\n\r\n        random( v=1 ): number {\r\n            return fn() * v;\r\n        },\r\n        test<T,U>( p=.5, pass?: T, fail?: U ): T | U | boolean {\r\n            const r = p >= 1 ? true : p <= 0 ? false : fn() < p;\r\n            if (r) return pass === undefined ? true : pass;\r\n            return fail === undefined ? false : fail;\r\n        },\r\n        range( v0: number, v1: number ): number {\r\n            if (v0==v1) return v0;\r\n            return v0 + fn() * ( v1 - v0 );\r\n        },\r\n        intRange( v0: number, v1: number ): number {\r\n            if (v0==v1) return v0;\r\n            return v0 + Math.floor( fn() * ( v1 - v0 + 1 ) );\r\n        },\r\n        ranges( ... ranges: Array<[ number, number, number? ]> ): number {\r\n            if (!ranges.length) return 0;\r\n\r\n            const ep = 1 / ranges.length;\r\n\r\n            ranges = [ ... ranges ];\r\n            const last = ranges.pop();\r\n\r\n            for (let r of ranges) {\r\n                const p = r[2] || ep;\r\n                if (rng.test( p )) return rng.range( r[0], r[1] );\r\n            }\r\n\r\n            return last ? rng.range( last[0], last[1] ) : 0;\r\n        },\r\n\r\n        shuffle( a: Array<any> ): Array<any> {\r\n            for (let i = a.length - 1; i > 0; i--) {\r\n                const j = Math.floor( fn() * (i + 1) );\r\n                const tmp = a[i];\r\n                a[i] = a[j];\r\n                a[j] = tmp;\r\n            }\r\n            return a;\r\n        }\r\n    };\r\n\r\n    rng.reset();\r\n\r\n    return rng;\r\n}\r\n\r\ninterface bboxData {\r\n    x0: number;\r\n    x1: number;\r\n    y0: number;\r\n    y1: number;\r\n    [propName: string]: any;\r\n};\r\nclass BBox {\r\n    x0: number;\r\n    x1: number;\r\n    y0: number;\r\n    y1: number;\r\n\r\n    constructor(data?: bboxData) {\r\n        if (data) {\r\n            this.x0 = data.x0;\r\n            this.x1 = data.x1;\r\n            this.y0 = data.y0;\r\n            this.y1 = data.y1;\r\n        }\r\n        else {\r\n            this.x0 = Infinity;\r\n            this.x1 = -Infinity;\r\n            this.y0 = Infinity;\r\n            this.y1 = -Infinity;\r\n        }\r\n    }\r\n\r\n    addX( v: number ): this {\r\n        if (v < this.x0) this.x0 = v;\r\n        if (v > this.x1) this.x1 = v;\r\n        return this;\r\n    }\r\n    addY( v: number ): this {\r\n        if (v < this.y0) this.y0 = v;\r\n        if (v > this.y1) this.y1 = v;\r\n        return this;\r\n    }\r\n    addPoint( x: number, y: number ): this {\r\n        this.addX( x );\r\n        this.addY( y );\r\n        return this;\r\n    }\r\n    addBBox( bbox: bboxData ): this {\r\n        this.addX( bbox.x0 );\r\n        this.addX( bbox.x1 );\r\n        this.addY( bbox.y0 );\r\n        this.addY( bbox.y1 );\r\n        return this;\r\n    }\r\n\r\n    expand( v: number ): this {\r\n        this.x0 -= v;\r\n        this.x1 += v;\r\n\r\n        this.y0 -= v;\r\n        this.y1 += v;\r\n\r\n        return this;\r\n    }\r\n\r\n    contains( bbox: bboxData, strict: boolean ): boolean {\r\n        if (strict) return this.x0 < bbox.x0 && this.x1 > bbox.x1 && this.y0 < bbox.y0 && this.y1 > bbox.y1;\r\n        return this.x0 <= bbox.x0 && this.x1 >= bbox.x1 && this.y0 <= bbox.y0 && this.y1 >= bbox.y1;\r\n    }\r\n    containedBy( bbox: bboxData, strict: boolean ): boolean {\r\n        if (strict) return this.x0 > bbox.x0 && this.x1 < bbox.x1 && this.y0 > bbox.y0 && this.y1 < bbox.y1;\r\n        return this.x0 >= bbox.x0 && this.x1 <= bbox.x1 && this.y0 >= bbox.y0 && this.y1 <= bbox.y1;\r\n    }\r\n    containsPoint( x: number, y: number, strict: boolean ): boolean {\r\n        if (strict) return !( x <= this.x0 || x >= this.x1 || y <= this.y0 || y >= this.y1 );\r\n        return !( x < this.x0 || x > this.x1 || y < this.y0 || y > this.y1 );\r\n    }\r\n\r\n    clone(): BBox {\r\n        return new BBox( this.data );\r\n    }\r\n\r\n    withPrecision( p: number ): BBox {\r\n        return new BBox({\r\n            x0: Math.round( this.x0 * p ),\r\n            x1: Math.round( this.x1 * p ),\r\n            y0: Math.round( this.y0 * p ),\r\n            y1: Math.round( this.y1 * p ),\r\n        });\r\n    }\r\n\r\n    get width(): number {\r\n        return this.x1 - this.x0;\r\n    }\r\n    get height(): number {\r\n        return this.y1 - this.y0;\r\n    }\r\n\r\n    get aspectRatio(): number {\r\n        if (!this.height) return 0;\r\n        return this.width / this.height;\r\n    }\r\n\r\n    get data(): bboxData {\r\n        return {\r\n            x0: this.x0,\r\n            x1: this.x1,\r\n            y0: this.y0,\r\n            y1: this.y1\r\n        };\r\n    }\r\n\r\n    get pointsArray(): [ point, point ] {\r\n        return [\r\n            [ this.x0, this.y0 ],\r\n            [ this.x1, this.y1 ],\r\n        ];\r\n    }\r\n\r\n    get viewBox(): string {\r\n        return `${this.x0} ${this.y0} ${this.width} ${this.height}`;\r\n    }\r\n}\r\n\r\ninterface nodePos {\r\n    num: number,\r\n    branchNum: number,\r\n\r\n    height: number,\r\n    offshootHeight: number,\r\n\r\n    isRoot: boolean,\r\n\r\n    isLast: boolean,\r\n    isLastBranch: boolean,\r\n\r\n    isOffshoot: boolean,\r\n\r\n    numFactor: number,\r\n    branchFactor: number,\r\n};\r\ninterface nodeAttr {\r\n    [key: string]: any,\r\n};\r\ninterface offshoot {\r\n    n: number,\r\n    attr?: nodeAttr,\r\n};\r\ninterface node {\r\n    pos: nodePos,\r\n    attr: nodeAttr,\r\n    offshoots: node[],\r\n\r\n    prev: node | null,\r\n    next: node | null,\r\n\r\n    branchRoot: node,\r\n    treeRoot: node,\r\n\r\n    offshootNum: number,\r\n};\r\ntype getNode = (pos: nodePos, prev: node | null, rootAttr: nodeAttr) => nodeAttr;\r\ntype getOffshoots = (node: node | null) => offshoot[];\r\nclass ProcTree {\r\n\r\n    maxBranchNum: number;\r\n    getNode: getNode;\r\n    getOffshoots: getOffshoots;\r\n\r\n    private roots: node[];\r\n\r\n    constructor( maxBranchNum: number, getNode: getNode, getOffshoots: getOffshoots ) {\r\n        this.maxBranchNum = maxBranchNum;\r\n        this.getNode = getNode;\r\n        this.getOffshoots = getOffshoots;\r\n\r\n        this.roots = [];\r\n    }\r\n\r\n    grow(): void {\r\n        const roots = this.getOffshoots( null );\r\n        for (let i in roots) this.growBranch( null, Number( i ), roots[ i ].n, roots[ i ].attr || {} );\r\n    }\r\n\r\n    growBranch( rootNode: node | null, offshootNum: number, segmentCount: number, attr: nodeAttr ): void {\r\n        const isTreeRoot = !rootNode;\r\n\r\n        let node = this.addNode( rootNode, true, offshootNum, segmentCount, attr );\r\n\r\n        if (isTreeRoot) this.roots.push( node );\r\n        const isLastBranch = this.maxBranchNum == node.pos.branchNum;\r\n\r\n        if (!isLastBranch && isTreeRoot) {\r\n            const offshoots = this.getOffshoots( node );\r\n            for (let i in offshoots) this.growBranch( node, Number( i ), offshoots[ i ].n, offshoots[ i ].attr || {} );\r\n        }\r\n\r\n        for (let i=0; i<segmentCount; i++) {\r\n            node = this.addNode( node, false, offshootNum, segmentCount, {} );\r\n            if (!isLastBranch) {\r\n                const offshoots = this.getOffshoots( node );\r\n                for (let i in offshoots) this.growBranch( node, Number( i ), offshoots[ i ].n, offshoots[ i ].attr || {} );\r\n            }\r\n        }\r\n    }\r\n\r\n    addNode( prev: node | null, isOffshoot: boolean, offshootNum: number, maxNum: number, rootAttr: nodeAttr ): node {\r\n        const pos = this.getPos( prev ? prev.pos : null, isOffshoot, maxNum );\r\n        const node: node = {\r\n            pos,\r\n            attr: { ... rootAttr, ... this.getNode( pos, prev, rootAttr ) },\r\n            offshoots: [],\r\n\r\n            prev: null,\r\n            next: null,\r\n\r\n            branchRoot: <node>{},\r\n            treeRoot: <node>{},\r\n\r\n            offshootNum: 0,\r\n        };\r\n\r\n        if (prev) {\r\n            node.prev = prev;\r\n            node.branchRoot = isOffshoot ? node : prev.pos.isOffshoot ? prev : prev.branchRoot;\r\n            node.treeRoot = prev.treeRoot ? prev.treeRoot : prev;\r\n\r\n            if (isOffshoot) {\r\n                prev.offshoots.push( node );\r\n                node.offshootNum = offshootNum;\r\n            }\r\n            else {\r\n                prev.next = node;\r\n            }\r\n\r\n        }\r\n        else {\r\n            node.branchRoot = node;\r\n            node.treeRoot = node;\r\n            node.offshootNum = offshootNum;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    getPos( prev: nodePos | null, isOffshoot: boolean, maxNum: number ): nodePos {\r\n        if (prev === null) return {\r\n            num: 0,\r\n            branchNum: 0,\r\n\r\n            height: 0,\r\n            offshootHeight: 0,\r\n\r\n            isRoot: true,\r\n\r\n            isLast: maxNum == 0,\r\n            isLastBranch: this.maxBranchNum == 0,\r\n\r\n            isOffshoot,\r\n\r\n            numFactor: 1,\r\n            branchFactor: 1,\r\n        };\r\n\r\n        const pos: nodePos = {\r\n            num: isOffshoot ? 0 : prev.num + 1,\r\n            branchNum: isOffshoot ? prev.branchNum + 1 : prev.branchNum,\r\n\r\n            height: isOffshoot ? prev.height : prev.height + 1,\r\n            offshootHeight: isOffshoot ? prev.num : prev.offshootHeight,\r\n\r\n            isRoot: false,\r\n\r\n            isLast: false,\r\n            isLastBranch: false,\r\n\r\n            isOffshoot,\r\n\r\n            numFactor: 0,\r\n            branchFactor: 0,\r\n        };\r\n\r\n        if (pos.num == maxNum) pos.isLast = true;\r\n        if (pos.branchNum == this.maxBranchNum) pos.isLastBranch = true;\r\n\r\n        pos.numFactor = maxNum ? (1 - pos.num / maxNum) : 1;\r\n        pos.branchFactor = this.maxBranchNum ? (1 - pos.branchNum / this.maxBranchNum) : 1;\r\n\r\n        return pos;\r\n    }\r\n\r\n    eachSegment( cb: (n0: node, n1: node) => void ): void {\r\n        for (let node of this.roots) this._each( node, cb );\r\n    }\r\n    _each( node: node | null, cb: (n0: node, n1: node) => void ): void {\r\n        // note: the treeRoot node can have offshoots\r\n        // other nodes that are branchRoots cannot have offshoots\r\n        while ( node ) {\r\n            if (node.pos.num > 0 && node.prev) cb( node.prev, node );\r\n            for (let offshootNode of node.offshoots) this._each( offshootNode.next, cb );\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    html,\r\n    math,\r\n    plantHelper,\r\n    rng, rng as rngInterface,\r\n    BBox,\r\n    ProcTree, nodePos, nodeAttr, offshoot, node\r\n};","import { html } from \"../util/util\";\r\nimport { attributeSet, pathDescriptionSegment } from '../types';\r\n\r\ninterface PlantPotCfg {\r\n    rimHeight: number,\r\n    rimLipOuter: number,\r\n    rimLipInner: number,\r\n    bottom: number,\r\n};\r\n\r\nfunction plantPotSvg( pathAttr: attributeSet ): SVGElement {\r\n    const baseCfg: PlantPotCfg = {\r\n        rimHeight: 20,\r\n        rimLipOuter: 2,\r\n        rimLipInner: 4,\r\n        bottom: 15,\r\n    };\r\n\r\n    const sw = pathAttr ? ('stroke-width' in pathAttr ? pathAttr[ 'stroke-width' ] : 2) : false;\r\n    if (sw) pathAttr[ 'stroke-width' ] = sw;\r\n\r\n    const pad = sw && typeof sw == 'number' ? sw / 2 : 0;\r\n\r\n    const getPoints = (cfg: PlantPotCfg): pathDescriptionSegment[] => {\r\n        return [\r\n            [ 'M', pad, pad ],\r\n            [ 'L', 100-pad, pad ],\r\n            [ 'L', 100-pad - cfg.rimLipOuter, cfg.rimHeight ],\r\n            [ 'L', 100-pad - cfg.rimLipInner, cfg.rimHeight ],\r\n            [ 'L', 100-pad - cfg.bottom, 100-pad ],\r\n            [ 'L', pad+cfg.bottom, 100-pad ],\r\n            [ 'L', pad+cfg.rimLipInner, cfg.rimHeight ],\r\n            [ 'L', pad+cfg.rimLipOuter, cfg.rimHeight ],\r\n            'Z',\r\n        ];\r\n    };\r\n\r\n    if (!pathAttr) pathAttr = {};\r\n    pathAttr.d = html.svg.compilePathDescription( getPoints( baseCfg ) );\r\n    const path = html.svg.node( 'path', pathAttr );\r\n\r\n    const svg = html.svg.root({\r\n        class: 'svg-plant-pot',\r\n        viewBox: '0 0 100 100',\r\n        preserveAspectRatio: 'xMidYMax meet',\r\n    });\r\n\r\n    svg.appendChild( path );\r\n\r\n    return svg;\r\n};\r\n\r\nexport { plantPotSvg };","// ripped from https://github.com/kfitfk/svg-boundings\r\n\r\ninterface bounds {\r\n  minX: number;\r\n  maxX: number;\r\n  minY: number;\r\n  maxY: number;\r\n};\r\n\r\n/**\r\n * expand the x-bounds, if the value lies outside the bounding box\r\n */\r\nfunction expandXBounds(bounds: bounds, value: number) {\r\n  if (bounds.minX > value) bounds.minX = value;\r\n  else if (bounds.maxX < value) bounds.maxX = value;\r\n}\r\n\r\n/**\r\n * expand the y-bounds, if the value lies outside the bounding box\r\n */\r\nfunction expandYBounds(bounds: bounds, value: number) {\r\n  if (bounds.minY > value) bounds.minY = value;\r\n  else if (bounds.maxY < value) bounds.maxY = value;\r\n}\r\n\r\n/**\r\n * Calculate the bezier value for one dimension at distance 't'\r\n */\r\nfunction calculateBezier(t: number, p0: number, p1: number, p2: number, p3: number) {\r\n  var mt = 1-t;\r\n  return (mt*mt*mt*p0) + (3*mt*mt*t*p1) + (3*mt*t*t*p2) + (t*t*t*p3);\r\n}\r\n\r\n/**\r\n * Calculate the bounding box for this bezier curve.\r\n * http://pomax.nihongoresources.com/pages/bezier/\r\n */\r\nfunction bezierCurveBoundingBox(\r\n  x1: number, y1: number,\r\n  cx1: number, cy1: number, cx2: number, cy2: number,\r\n  x2: number, y2: number\r\n) {\r\n  var bounds = {\r\n    minX: Math.min(x1, x2),\r\n    minY: Math.min(y1, y2),\r\n    maxX: Math.max(x1, x2),\r\n    maxY: Math.max(y1, y2),\r\n  };\r\n\r\n  var dcx0 = cx1 - x1;\r\n  var dcy0 = cy1 - y1;\r\n  var dcx1 = cx2 - cx1;\r\n  var dcy1 = cy2 - cy1;\r\n  var dcx2 = x2 - cx2;\r\n  var dcy2 = y2 - cy2;\r\n\r\n  if (cx1<bounds.minX || cx1>bounds.maxX || cx2<bounds.minX || cx2>bounds.maxX) {\r\n    // Just for better reading because we are doing middle school math here\r\n    var a = dcx0;\r\n    var b = dcx1;\r\n    var c = dcx2;\r\n\r\n    if (a+c !== 2*b) b += 0.0001;\r\n\r\n    var numerator = 2*(a - b);\r\n    var denominator = 2*(a - 2*b + c);\r\n    if (denominator === 0) denominator = 0.0001;\r\n    var quadroot = (2*b-2*a)*(2*b-2*a) - 2*a*denominator;\r\n    var root = Math.sqrt(quadroot);\r\n\r\n    var t1 =  (numerator + root) / denominator;\r\n    var t2 =  (numerator - root) / denominator;\r\n\r\n    if (0<t1 && t1<1) {\r\n      expandXBounds(bounds, calculateBezier(t1, x1, cx1, cx2, x2));\r\n    }\r\n    if (0<t2 && t2<1) {\r\n      expandXBounds(bounds, calculateBezier(t2, x1, cx1, cx2, x2));\r\n    }\r\n  }\r\n\r\n  if (cy1<bounds.minY || cy1>bounds.maxY || cy2<bounds.minY || cy2>bounds.maxY) {\r\n    a = dcy0;\r\n    b = dcy1;\r\n    c = dcy2;\r\n\r\n    if (a+c !== 2*b) b += 0.0001;\r\n\r\n    numerator = 2*(a - b);\r\n    denominator = 2*(a - 2*b + c);\r\n    if (denominator === 0) denominator = 0.0001;\r\n    quadroot = (2*b-2*a)*(2*b-2*a) - 2*a*denominator;\r\n    root = Math.sqrt(quadroot);\r\n\r\n    t1 =  (numerator + root) / denominator;\r\n    t2 =  (numerator - root) / denominator;\r\n\r\n    if (0<t1 && t1<1) {\r\n      expandYBounds(bounds, calculateBezier(t1, y1, cy1, cy2, y2));\r\n    }\r\n    if (0<t2 && t2<1) {\r\n      expandYBounds(bounds, calculateBezier(t2, y1, cy1, cy2, y2));\r\n    }\r\n  }\r\n\r\n  return {\r\n    x0: bounds.minX,\r\n    x1: bounds.maxX,\r\n    y0: bounds.minY,\r\n    y1: bounds.maxY,\r\n  };\r\n}\r\n\r\nexport { bezierCurveBoundingBox };","import { ProcTree, html, math, BBox, node, nodePos, nodeAttr, offshoot } from \"../util/util\";\r\nimport { bezierCurveBoundingBox } from \"../util/bezierCurveBoundingBox\";\r\nimport { point, attributeSet, leafCurvesHandles, leafDefinition, pathDescriptionSegment, Genus } from '../types';\r\n\r\nconst precision = 10000;\r\nfunction prc(v: number): number;\r\nfunction prc(v: point): point;\r\nfunction prc(v: number | point): number | point {\r\n    if (Array.isArray( v )) return [\r\n        Math.round( v[0] * precision ),\r\n        Math.round( v[1] * precision ),\r\n    ];\r\n\r\n    return Math.round( v * precision );\r\n}\r\n\r\ninterface PlantPart {\r\n    base: point;\r\n    top: point;\r\n\r\n    angle: number;\r\n    length: number;\r\n\r\n    ageOffset: number;\r\n    style: attributeSet;\r\n\r\n    bbox: BBox;\r\n\r\n    getPoints( age: number ): pathDescriptionSegment[] | undefined;\r\n};\r\nclass BranchSegment implements PlantPart {\r\n    base: point;\r\n    top: point;\r\n\r\n    bottomWidth: number;\r\n    topWidth: number;\r\n\r\n    angle: number;\r\n    bottomAngle: number;\r\n    topAngle: number;\r\n\r\n    length: number;\r\n\r\n    ageOffset: number;\r\n    style: attributeSet;\r\n\r\n    bbox: BBox;\r\n\r\n    constructor( base: point, style: attributeSet, n0: node, n1: node ) {\r\n        this.base = base;\r\n\r\n        this.bottomWidth = n0.attr.width;\r\n        this.topWidth = n1.attr.width;\r\n\r\n        this.angle = n0.attr.segmentAngle !== undefined ? n0.attr.segmentAngle : n0.attr.angle;\r\n        this.bottomAngle = n0.attr.angle;\r\n        this.topAngle = n1.attr.angle;\r\n\r\n        this.length = n0.attr.length;\r\n\r\n        this.top = math.fromAngle( this.base, this.angle, this.length );\r\n\r\n        this.ageOffset = n0.attr.totalLength;\r\n        this.style = style;\r\n\r\n        this.bbox = this.getBoundingBox();\r\n    }\r\n\r\n    getPoints( age: number ): pathDescriptionSegment[] | undefined {\r\n        const ageFactor = this.getAgeFactor( age );\r\n        if (!ageFactor) return;\r\n\r\n        let top = this.top;\r\n        if (ageFactor < 1) {\r\n            top = math.fromAngle( this.base, this.angle, this.length * ageFactor );\r\n        }\r\n\r\n        const r = math.rectFromLine(\r\n            this.base, top,\r\n            this.bottomAngle, this.topAngle,\r\n            this.bottomWidth, this.topWidth,\r\n            precision,\r\n        );\r\n\r\n        return [\r\n            'M', r[0],\r\n            'L', r[1],\r\n            'L', r[2],\r\n            'L', r[3],\r\n            'Z'\r\n        ];\r\n    }\r\n\r\n    private getBoundingBox(): BBox {\r\n        const points = math.rectFromLine(\r\n            this.base, this.top,\r\n            this.bottomAngle, this.topAngle,\r\n            this.bottomWidth, this.topWidth,\r\n            undefined\r\n        );\r\n\r\n        const bb = new BBox();\r\n        bb.addPoint( points[0][0], points[0][1] );\r\n        bb.addPoint( points[1][0], points[1][1] );\r\n        bb.addPoint( points[2][0], points[2][1] );\r\n        bb.addPoint( points[3][0], points[3][1] );\r\n\r\n        return bb;\r\n    }\r\n\r\n    private getAgeFactor( age: number ): number {\r\n        if (age <= this.ageOffset) return 0;\r\n        if (age >= this.ageOffset + this.length) return 1;\r\n        return (age - this.ageOffset) / this.length;\r\n    }\r\n\r\n    getOffsetPoint( x: number, y: number ): point {\r\n        if (!x) {\r\n            if (!y) return this.base;\r\n            if (y==1) return this.top;\r\n            return math.fromAngle( this.base, this.angle, this.length * y );\r\n        }\r\n\r\n        const dir = this.angle < 0 ? 1 : -1;\r\n\r\n        if (!y) {\r\n            return math.fromAngle( this.base, this.bottomAngle + 90*dir, this.bottomWidth/2 * x );\r\n        }\r\n\r\n        if (y==1) {\r\n            return math.fromAngle( this.top, this.topAngle + 90*dir, this.topWidth/2 * x );\r\n        }\r\n\r\n        const l1 = [\r\n            math.fromAngle( this.base, this.bottomAngle + 90*dir, this.bottomWidth/2 ),\r\n            math.fromAngle( this.top, this.topAngle + 90*dir, this.topWidth/2 )\r\n        ];\r\n        const l2 = [\r\n            math.fromAngle( this.base, this.bottomAngle + 90*dir, -this.bottomWidth/2 ),\r\n            math.fromAngle( this.top, this.topAngle + 90*dir, -this.topWidth/2 )\r\n        ];\r\n        const l3 = [\r\n            math.pointOnLine( l1[0], l1[1], y ),\r\n            math.pointOnLine( l2[0], l2[1], y ),\r\n        ];\r\n\r\n        x = 1 - (x/2 + .5);\r\n\r\n        return math.pointOnLine( l3[0], l3[1], x );\r\n    }\r\n}\r\nclass Leaf implements PlantPart {\r\n    base: point;\r\n    pBase: point;\r\n    top: point;\r\n\r\n    angle: number;\r\n    length: number;\r\n    handles: leafCurvesHandles;\r\n\r\n    ageOffset: number;\r\n    style: attributeSet;\r\n\r\n    bbox: BBox;\r\n\r\n    constructor( segment: BranchSegment, { angle, length, handles, style, xOffset, yOffset }: leafDefinition ) {\r\n        const base = segment.getOffsetPoint( xOffset, yOffset );\r\n        this.base = base;\r\n        this.pBase = prc( base );\r\n\r\n        this.angle = angle;\r\n        this.length = length;\r\n        this.handles = handles;\r\n\r\n        this.top = math.fromAngle( base, angle, length );\r\n\r\n        this.ageOffset = segment.ageOffset + segment.length * yOffset;\r\n\r\n        this.style = style;\r\n\r\n        this.bbox = this.getBoundingBox();\r\n    }\r\n\r\n    getPoints( age: number ): pathDescriptionSegment[] | undefined {\r\n        const ageFactor = this.getAgeFactor( age );\r\n        if (!ageFactor) return;\r\n\r\n        let top = this.top;\r\n        if (ageFactor < 1) {\r\n            top = math.fromAngle( this.base, this.angle, this.length * ageFactor );\r\n        }\r\n\r\n        const curves = this.getCurves({ top, ageFactor, precision });\r\n\r\n        top = prc( top );\r\n\r\n        return [\r\n            'M', this.pBase,\r\n            'C', curves.up[0], curves.up[1], top,\r\n            'C', curves.down[0], curves.down[1], this.pBase\r\n        ];\r\n    }\r\n\r\n    private getBoundingBox(): BBox {\r\n        const c = this.getCurves({ top: this.top, ageFactor: 1 });\r\n        const bb = new BBox(bezierCurveBoundingBox(\r\n            this.base[0], this.base[1],\r\n            c.up[0][0], c.up[0][1],\r\n            c.up[1][0], c.up[1][1],\r\n            this.top[0], this.top[1],\r\n        ));\r\n\r\n        bb.addBBox(bezierCurveBoundingBox(\r\n            this.top[0], this.top[1],\r\n            c.down[0][0], c.down[0][1],\r\n            c.down[1][0], c.down[1][1],\r\n            this.base[0], this.base[1],\r\n        ));\r\n\r\n        if (typeof this.style['stroke-width'] == 'number') bb.expand( this.style['stroke-width'] / 2 );\r\n\r\n        return bb;\r\n    }\r\n\r\n    private getCurves(\r\n        { top, ageFactor, precision }: { top: point; ageFactor: number; precision?: number; }\r\n    ): { up: [ point, point ], down: [ point, point ] } {\r\n        const bha = this.handles.bottomAngle;\r\n        const bhl = this.handles.bottomLength * ageFactor;\r\n        const tha = this.handles.topAngle;\r\n        const thl = this.handles.topLength * ageFactor;\r\n\r\n        return {\r\n            up: [\r\n                math.fromAngle( this.base, this.angle + bha, this.length * bhl, precision ),\r\n                math.fromAngle( top, this.angle + tha, this.length * thl, precision ),\r\n            ],\r\n            down: [\r\n                math.fromAngle( top, this.angle - tha, this.length * thl, precision ),\r\n                math.fromAngle( this.base, this.angle - bha, this.length * bhl, precision ),\r\n            ],\r\n        };\r\n    }\r\n\r\n    private getAgeFactor( age: number ): number {\r\n        if (age <= this.ageOffset) return 0;\r\n        if (age >= this.ageOffset + this.length) return 1;\r\n        return (age - this.ageOffset) / this.length;\r\n    }\r\n}\r\n\r\nclass Branches {\r\n    segments: BranchSegment[][];\r\n    leaves: Leaf[][];\r\n\r\n    constructor() {\r\n        this.segments = [];\r\n        this.leaves = [];\r\n    }\r\n\r\n    addSegment( branchNum: number, segment: BranchSegment ) {\r\n        let branch = this.segments[ branchNum ];\r\n        if (!branch) {\r\n            branch = [];\r\n            this.segments[ branchNum ] = branch;\r\n        }\r\n        branch.push( segment );\r\n    }\r\n    addLeaf( branchNum: number, leaf: Leaf ) {\r\n        let branch = this.leaves[ branchNum ];\r\n        if (!branch) {\r\n            branch = [];\r\n            this.leaves[ branchNum ] = branch;\r\n        }\r\n        branch.push( leaf );\r\n    }\r\n\r\n    getArray(): PlantPart[] {\r\n        let ret: PlantPart[] = [];\r\n        for (let i=0; i<this.segments.length; i++) {\r\n            ret = ret.concat( this.segments[ i ] || [] );\r\n            ret = ret.concat( this.sortLeaves( this.leaves[ i ] ) );\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    sortLeaves( a: Leaf[] ): Leaf[] {\r\n        if (!a) return [];\r\n\r\n        return a.sort((l0,l1) => {\r\n            if (l1.bbox.containsPoint( l0.base[0], l0.base[1], true )) {\r\n                return -1;\r\n            }\r\n\r\n            if (l0.bbox.containsPoint( l1.base[0], l1.base[1], true )) {\r\n                return 1;\r\n            }\r\n\r\n            const d0 = math.distance( l0.base, [0,0] );\r\n            const d1 = math.distance( l1.base, [0,0] );\r\n            return d1 - d0;\r\n        });\r\n    }\r\n}\r\n\r\nclass PlantBody {\r\n    genus: Genus;\r\n\r\n    bbox: BBox;\r\n    yFactor: number;\r\n\r\n    private parts: PlantPart[] | undefined;\r\n    private maxAge: number;\r\n\r\n    constructor( genus: Genus ) {\r\n        this.genus = genus;\r\n        this.bbox = new BBox;\r\n\r\n        this.maxAge = 0;\r\n        this.yFactor = 1;\r\n    }\r\n\r\n    private getTree() {\r\n        const getNodeAttr = ( pos: nodePos, prev: node | null, attr: nodeAttr ): nodeAttr => {\r\n            return {\r\n                width: this.genus.getNodeWidth( pos, prev, attr ),\r\n                angle: prev ? this.genus.getSegmentAngle( pos, prev, attr ) : 0,\r\n                length: pos.isLast ? (prev ? prev.attr.length : 0) : this.genus.getSegmentLength( pos, prev, attr ),\r\n                totalLength: prev ? ((pos.isOffshoot ? 0 : prev.attr.length) + prev.attr.totalLength) : 0,\r\n            };\r\n        };\r\n        const getOffshoots = (node: node | null): offshoot[] => {\r\n            if (node === null) return this.genus.getRoots();\r\n            return this.genus.getOffshoots( node );\r\n        };\r\n\r\n        return new ProcTree( this.genus.maxBranchNum, getNodeAttr, getOffshoots );\r\n    }\r\n\r\n    init(): void {\r\n        this.genus.reset();\r\n\r\n        const tree = this.getTree();\r\n        tree.grow();\r\n\r\n        this.bbox = new BBox({\r\n            x0: -this.genus.width/2,\r\n            x1: this.genus.width/2,\r\n            y0: -this.genus.height,\r\n            y1: 0,\r\n        });\r\n\r\n        const branches = new Branches;\r\n        const points = new Map;\r\n        let maxAge = 0;\r\n\r\n        const getBasePoint = (node: node): point => {\r\n            if (!node.prev) {\r\n                const p: point = [ node.attr.x || 0, 0 ];\r\n                this.bbox.addPoint( p[0], p[1] );\r\n                return p;\r\n            }\r\n            else if (node.pos.isOffshoot) {\r\n                const p = points.get( node.prev );\r\n                if (p) return p;\r\n\r\n                const rp: point = [ node.prev.attr.x || 0, 0 ];\r\n                points.set( node.prev, rp );\r\n                this.bbox.addPoint( rp[0], rp[1] );\r\n                return rp;\r\n            }\r\n\r\n            return points.get( node );\r\n        }\r\n\r\n        tree.eachSegment( (n0: node, n1: node): void => {\r\n\r\n            const base = getBasePoint( n0 );\r\n            const style = this.genus.getSegmentStyle( n0, n1 );\r\n            const s = new BranchSegment( base, style, n0, n1 );\r\n\r\n            points.set( n1, s.top );\r\n            this.bbox.addBBox( s.bbox );\r\n            branches.addSegment( n0.pos.branchNum, s );\r\n\r\n            this.genus.getLeaves( n0, n1 ).map( (cfg: leafDefinition): void => {\r\n                const leaf = new Leaf( s, cfg );\r\n\r\n                this.bbox.addBBox( leaf.bbox );\r\n                branches.addLeaf( n0.pos.branchNum, leaf );\r\n\r\n                if (leaf.ageOffset + leaf.length > maxAge) maxAge = leaf.ageOffset + leaf.length;\r\n            });\r\n\r\n            if (n1.attr.totalLength > maxAge) maxAge = n1.attr.totalLength;\r\n\r\n        });\r\n\r\n        this.parts = branches.getArray();\r\n        this.maxAge = maxAge;\r\n\r\n        // make sure the plant is centered\r\n        const bboxX = Math.max( Math.abs( this.bbox.x0 ), Math.abs( this.bbox.x1 ) );\r\n        this.bbox.x0 = -bboxX;\r\n        this.bbox.x1 = bboxX;\r\n\r\n        this.yFactor = (this.bbox.height / -this.bbox.y0) || 1;\r\n    }\r\n\r\n    private render( age: number, colors=true, svg: SVGElement ): void {\r\n        age *= this.maxAge;\r\n\r\n        if (this.parts) for (const p of this.parts) {\r\n            const points = p.getPoints( age );\r\n            if (!points) continue;\r\n\r\n            let style = {} as attributeSet, add = {} as attributeSet;\r\n\r\n            if (colors) {\r\n                style = p.style;\r\n                add = {};\r\n                if (typeof style['stroke-width'] == 'number') add['stroke-width'] = prc( style['stroke-width'] );\r\n            }\r\n\r\n            const set = Object.assign( {}, style, add, {\r\n                d: html.svg.compilePathDescription( points ),\r\n            });\r\n            svg.appendChild( html.svg.node( 'path', set ) );\r\n        }\r\n    }\r\n\r\n    getSvg( age: number, colors: boolean ): SVGElement {\r\n        if (this.parts === undefined) this.init();\r\n\r\n        const svg = html.svg.root({\r\n            class: 'svg-plant-body',\r\n            viewBox: this.bbox.withPrecision( precision ).viewBox,\r\n            preserveAspectRatio: 'xMidYMax meet',\r\n        });\r\n\r\n        this.render( age, colors, svg );\r\n\r\n        return svg;\r\n    }\r\n}\r\n\r\nexport { PlantBody };","import { plantPotSvg } from \"./plantPotSvg\";\r\nimport { PlantBody } from \"./PlantBody\";\r\nimport { html } from \"../util/util\";\r\nimport { attributeSet, Genus } from '../types';\r\n\r\ninterface SvgPlantCfg {\r\n    color: boolean,\r\n    age: number,\r\n    potSize: number,\r\n    potPathAttr: attributeSet,\r\n};\r\ninterface SvgPlantCfgArg {\r\n    color?: boolean,\r\n    age?: number,\r\n    potSize?: number,\r\n    potPathAttr?: attributeSet,\r\n};\r\n\r\ninterface PlantAnimation {\r\n    fromAge: number,\r\n    toAge: number,\r\n    ageSpan: number,\r\n    currentAge: number,\r\n\r\n    durationMs: number,\r\n\r\n    nextAnimationFrame: undefined | number,\r\n\r\n    paused: boolean,\r\n};\r\n\r\nclass SvgPlant {\r\n    body: PlantBody;\r\n    private cfg: SvgPlantCfg;\r\n\r\n    private _svgElement: SVGElement | null;\r\n    private _potSvgElement: SVGElement | null;\r\n    private _bodySvgElement: SVGElement | null;\r\n\r\n    private animation: PlantAnimation | null;\r\n\r\n    constructor( genus: Genus, cfg?: SvgPlantCfgArg ) {\r\n        this.cfg = {\r\n            color: true,\r\n            age: 1,\r\n            potSize: .3,\r\n            potPathAttr: { fill: '#fc7', stroke: '#da5' },\r\n        };\r\n\r\n        if (typeof cfg == 'object') {\r\n            if (cfg.color !== undefined) this.color = cfg.color;\r\n            if (cfg.age !== undefined) this.age = cfg.age;\r\n            if (cfg.potSize !== undefined) this.potSize = cfg.potSize;\r\n            if (cfg.potPathAttr !== undefined) this.potPathAttr = cfg.potPathAttr;\r\n        }\r\n\r\n        this.body = new PlantBody( genus );\r\n\r\n        this._svgElement = null;\r\n        this._potSvgElement = null;\r\n        this._bodySvgElement = null;\r\n\r\n        this.animation = null;\r\n    }\r\n\r\n    get seed(): string {\r\n        return this.body.genus.rngSeed;\r\n    }\r\n\r\n    get color(): boolean { return this.cfg.color; }\r\n    set color( v: boolean ) {\r\n        v = !!v;\r\n        if (v != this.cfg.color) {\r\n            this.cfg.color = v;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    get age(): number { return this.cfg.age; }\r\n    set age( v: number ) {\r\n        v = Math.max( 0, Math.min( v, 1 ));\r\n        if (v != this.cfg.age) {\r\n            this.cfg.age = v;\r\n            this.update( true, false );\r\n        }\r\n    }\r\n\r\n    get potSize(): number { return this.cfg.potSize; }\r\n    set potSize( v: number ) {\r\n        v = Math.max( 0, Math.min( v, 1 ));\r\n        if (v != this.cfg.potSize) {\r\n            this.cfg.potSize = v;\r\n            this.update( false, true );\r\n        }\r\n    }\r\n\r\n    get potPathAttr(): attributeSet { return this.cfg.potPathAttr; }\r\n    set potPathAttr( v: attributeSet ) {\r\n        if (v !== this.cfg.potPathAttr) {\r\n            this.cfg.potPathAttr = v;\r\n            this.update( false, true );\r\n        }\r\n    }\r\n\r\n    update( body=true, pot=true ) {\r\n        if (body) this._bodySvgElement = null;\r\n        if (pot) this._potSvgElement = null;\r\n        this.updateSvgElement();\r\n    }\r\n\r\n    get svgElement(): SVGElement {\r\n        if (!this._svgElement) {\r\n            this._svgElement = this.getSvgElement();\r\n        }\r\n        return this._svgElement;\r\n    }\r\n    updateSvgElement(): void {\r\n        const svg = this._svgElement;\r\n        if (!svg) return;\r\n\r\n        svg.innerHTML = this.getSvgElement().innerHTML;\r\n    }\r\n    getSvgElement(): SVGElement {\r\n        const svg = html.svg.root({\r\n            class: 'svg-plant',\r\n            viewBox: '0 0 1 1',\r\n            preserveAspectRatio: 'xMidYMax meet',\r\n        });\r\n\r\n        const place = ( el: Element, x: number, y: number, w: number, h: number ) => {\r\n            el.setAttribute( 'x', String( x ) );\r\n            el.setAttribute( 'y', String( y ) );\r\n            el.setAttribute( 'width', String( w ) );\r\n            el.setAttribute( 'height', String( h ) );\r\n        };\r\n\r\n        const pot = this.potSvgElement;\r\n        const body = this.bodySvgElement;\r\n\r\n        if (this.cfg.potSize >= 1 && pot !== null) {\r\n            svg.appendChild( pot );\r\n            place( pot, 0, 0, 1, 1 );\r\n        }\r\n        else if (this.cfg.potSize <= 0 && body !== null) {\r\n            svg.appendChild( body );\r\n            place( body, 0, 0, 1, 1 );\r\n        }\r\n        else if (pot && body) {\r\n            svg.appendChild( pot );\r\n            place( pot, 0, 1 - this.cfg.potSize, 1, this.cfg.potSize );\r\n            svg.appendChild( body );\r\n\r\n            // with high contrast there is a slight gap visible, between pot and plant.\r\n            // without color this is way more noticable, and the slight overlap is invisible.\r\n            const overlap = this.cfg.color ? 0 : .001;\r\n\r\n            let height;\r\n            const bodyHeight = 1 - this.cfg.potSize;\r\n\r\n            if (this.body.yFactor > 1) {\r\n                // this means the plant has points \"below the fold\"\r\n                // or: points that overlap the potsize area\r\n                // so the height of \"1 - this._cfg.potSize\" needs to be expanded accordingly\r\n\r\n                const wrapperAR = 1 / bodyHeight;\r\n                const aboveFoldBodyAR = this.body.bbox.width / -this.body.bbox.y0;\r\n                if (wrapperAR < aboveFoldBodyAR) {\r\n                    // the plantbody is scaled down, to fit the viewbox's width\r\n                    // the yFactor now needs to be applied only to the plants scaled down height\r\n                    // not the full available area of \"1 - this._cfg.potSize\"\r\n\r\n                    const scaledBodyHeight = -this.body.bbox.y0 / this.body.bbox.width;\r\n                    height = bodyHeight + (scaledBodyHeight * this.body.yFactor - scaledBodyHeight);\r\n                }\r\n                else {\r\n                    height = bodyHeight * this.body.yFactor;\r\n                }\r\n            }\r\n            else {\r\n                height = bodyHeight;\r\n            }\r\n\r\n            place( body, 0, 0, 1, height + overlap );\r\n\r\n        }\r\n\r\n        return svg;\r\n    }\r\n\r\n    get potSvgElement(): SVGElement | null {\r\n        if (this.cfg.potSize == 0) return null;\r\n\r\n        if (!this._potSvgElement) {\r\n            this._potSvgElement = this.getPotSvgElement();\r\n        }\r\n        return this._potSvgElement;\r\n    }\r\n    getPotSvgElement(): SVGElement {\r\n        if (!this.cfg.color) return plantPotSvg({});\r\n        return plantPotSvg( this.cfg.potPathAttr );\r\n    }\r\n\r\n    get bodySvgElement(): SVGElement | null {\r\n        if (this.cfg.potSize == 1) return null;\r\n\r\n        if (!this._bodySvgElement) {\r\n            this._bodySvgElement = this.getBodySvgElement();\r\n        }\r\n        return this._bodySvgElement;\r\n    }\r\n    getBodySvgElement(): SVGElement {\r\n        return this.body.getSvg( this.cfg.age, this.cfg.color );\r\n    }\r\n\r\n    animate( fromAge=0, toAge=1, durationMs=3000 ) {\r\n        this.cancelAnimation();\r\n\r\n        this.animation = {\r\n            fromAge,\r\n            toAge,\r\n            ageSpan: toAge - fromAge,\r\n            currentAge: fromAge,\r\n\r\n            durationMs,\r\n\r\n            nextAnimationFrame: undefined,\r\n\r\n            paused: true,\r\n        };\r\n\r\n        this.resumeAnimation();\r\n    }\r\n    pauseAnimation() {\r\n        if (this.animation) {\r\n            if (this.animation.nextAnimationFrame !== undefined) {\r\n                cancelAnimationFrame( this.animation.nextAnimationFrame );\r\n            }\r\n            this.animation.paused = true;\r\n        }\r\n    }\r\n    cancelAnimation() {\r\n        this.pauseAnimation();\r\n        this.animation = null;\r\n    }\r\n    resumeAnimation() {\r\n        const a = this.animation;\r\n        if (!a || !a.paused) return;\r\n        a.paused = false;\r\n\r\n        this.age = a.currentAge;\r\n\r\n        const acl = (t: number): number => t<0 ? 0 : t>1 ? 1 : Math.sin( (t - .5) * Math.PI ) * .5 + .5;\r\n        const aclInv = (t: number): number => t<0 ? 0 : t>1 ? 1 : Math.asin( t * 2 - 1 ) / Math.PI + .5;\r\n\r\n        let t0: number;\r\n        const upd = (ts: number) => {\r\n            if (!t0) {\r\n                const f = (a.currentAge - a.fromAge) / a.ageSpan;\r\n                t0 = ts - aclInv( f ) * a.durationMs;\r\n                a.nextAnimationFrame = requestAnimationFrame( upd );\r\n            }\r\n            else {\r\n                const f = acl( Math.min( 1, (ts - t0) / a.durationMs ) );\r\n\r\n                if (f < 1) {\r\n                    this.cfg.age = a.fromAge + f * a.ageSpan;\r\n                    a.currentAge = this.cfg.age;\r\n\r\n                    this._bodySvgElement = null;\r\n                    this.updateSvgElement();\r\n\r\n                    a.nextAnimationFrame = requestAnimationFrame( upd );\r\n                }\r\n                else {\r\n                    this.age = a.toAge;\r\n                    this.animation = null;\r\n                }\r\n            }\r\n        };\r\n\r\n        a.nextAnimationFrame = requestAnimationFrame( upd );\r\n    }\r\n}\r\n\r\nexport { SvgPlant };","import { rng, nodePos, nodeAttr, offshoot, node } from \"../util/util\";\r\nimport { rngSeed, attributeSet, leafCurvesHandles, leafDefinition, Genus } from '../types';\r\n\r\nclass BaseGenus implements Genus {\r\n\r\n    rng: rng;\r\n    width: number;\r\n    height: number;\r\n    maxBranchNum: number;\r\n\r\n    segmentStyle: attributeSet;\r\n    leafStyle: attributeSet;\r\n    leafCurveHandles: leafCurvesHandles;\r\n\r\n    constructor( rngSeed?: rngSeed ) {\r\n        this.rng = rng( rngSeed );\r\n\r\n        this.width = 4;\r\n        this.height = 4;\r\n        this.maxBranchNum = 1;\r\n\r\n        this.segmentStyle = {\r\n            fill: '#161',\r\n            stroke: '#041',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 60,\r\n            bottomLength: .6,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    static get genusName(): string {\r\n        const cn = this.name;\r\n        return cn.substring( 0, cn.length - 5 );\r\n    }\r\n    get genusName(): string {\r\n        const cn = this.constructor.name;\r\n        return cn.substring( 0, cn.length - 5 );\r\n    }\r\n    get rngSeed(): string {\r\n        return this.rng.seed;\r\n    }\r\n    reset(): void {\r\n        this.rng.reset();\r\n    }\r\n\r\n    getRoots(): offshoot[] {\r\n        return [\r\n            {\r\n                n: 3,\r\n                attr: { x: 0, segmentAngle: 0 }\r\n            },\r\n        ];\r\n    }\r\n    getOffshoots( node: node ): offshoot[] {\r\n        if (node.pos.isLast || node.pos.num==0) return [];\r\n\r\n        return [\r\n            {\r\n                n: 1,\r\n                attr: { segmentAngle: node.attr.angle - 60 }\r\n            },\r\n            {\r\n                n: 1,\r\n                attr: { segmentAngle: node.attr.angle + 60 }\r\n            },\r\n        ];\r\n    }\r\n\r\n    getNodeWidth( _pos: nodePos, _prev: node | null, _attr: nodeAttr ): number {\r\n        return .1;\r\n    }\r\n    getSegmentLength( _pos: nodePos, _prev: node | null, _attr: nodeAttr ) {\r\n        return 1;\r\n    }\r\n    getSegmentAngle( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        if (pos.isOffshoot) return prev.attr.angle;\r\n        return prev.attr.segmentAngle !== undefined ? prev.attr.segmentAngle : prev.attr.angle;\r\n    }\r\n\r\n    getSegmentStyle( _n0: node, _n1: node ): attributeSet {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0: node, n1: node ): leafDefinition[] {\r\n        if (!n1.pos.isLast) return [];\r\n\r\n        return [\r\n            {\r\n                angle: n1.attr.angle,\r\n                length: 1,\r\n                handles: this.leafCurveHandles,\r\n                style: this.leafStyle,\r\n\r\n                xOffset: 0,\r\n                yOffset: .95,\r\n            }\r\n        ];\r\n    }\r\n};\r\n\r\nexport { BaseGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper, node, nodePos, nodeAttr } from \"../util/util\";\r\nimport { rngSeed, Genus, leafDefinition } from '../types';\r\n\r\nclass BushyPlantGenus extends BaseGenus implements Genus {\r\n\r\n    constructor( rngSeed?: rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 6.1;\r\n        this.height = 6.6;\r\n        this.maxBranchNum = 3;\r\n\r\n        this.segmentStyle = {\r\n            fill: '#400',\r\n            stroke: '#931',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 60,\r\n            bottomLength: .6,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return [\r\n            {\r\n                n: this.rng.intRange( 4, 6 ),\r\n                attr: plantHelper.rootPosAngle( this.rng, .5, 6 ),\r\n            },\r\n        ];\r\n    }\r\n    getOffshoots( node: node ) {\r\n        if (node.pos.isLast || node.pos.num==0) return [];\r\n\r\n        const p = .5 * (.5 + .5 * node.pos.numFactor) * (.5 + .5 * node.pos.branchFactor);\r\n        const a = [];\r\n\r\n        const getNodeCount = () => 4 - node.pos.branchNum - this.rng.test( .6, 1, 0 );\r\n\r\n        if (this.rng.test( p )) a.push({\r\n            n: getNodeCount(),\r\n            attr: {\r\n                segmentAngle: node.attr.angle + this.rng.range( 25, 60 ),\r\n            }\r\n        });\r\n\r\n        if (this.rng.test( p )) a.push({\r\n            n: getNodeCount(),\r\n            attr: {\r\n                segmentAngle: node.attr.angle + this.rng.range( -60, -25 ),\r\n            }\r\n        });\r\n\r\n        return a;\r\n    }\r\n\r\n    getNodeWidth( pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (pos.isOffshoot && prev) return prev.attr.width;\r\n        return .1 * (.1 + .9 * pos.branchFactor);\r\n    }\r\n    getSegmentLength( pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (!prev) return 1;\r\n        if (!pos.isOffshoot && pos.branchNum>0) return prev.attr.length * .75;\r\n        if (!pos.isOffshoot) return prev.attr.length;\r\n\r\n        const f = .2 + .8 * (prev.branchRoot.prev ? prev.branchRoot.prev.pos.numFactor : 1);\r\n        return prev.attr.length * f;\r\n    }\r\n    getSegmentAngle( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        if (pos.branchNum>0) return plantHelper.nextAngle( this.rng, pos, prev, 16, true );\r\n        return plantHelper.nextAngle( this.rng, pos, prev, 8, true );\r\n    }\r\n\r\n    getSegmentStyle( _n0: node, _n1: node ) {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0: node, n1: node ) {\r\n        if (n1.pos.branchNum==0 && n1.pos.num<2) return [];\r\n\r\n        const leaves: leafDefinition[] = [];\r\n\r\n        const addLeaf = (avf: number) => {\r\n            leaves.push({\r\n                angle: n1.attr.angle + (avf ? (avf * this.rng.range( 20, 40 )) : this.rng.range( -10, 10 )),\r\n                length: this.rng.range( .5, .75 ),\r\n                handles: this.leafCurveHandles,\r\n                style: this.leafStyle,\r\n\r\n                xOffset: avf ? -avf * this.rng.range( 0, .5) : 0,\r\n                yOffset: avf ? this.rng.range( .3, .7 ) : .95,\r\n            });\r\n        };\r\n\r\n        if (n1.pos.isLast && this.rng.test( .5 )) addLeaf( 0 );\r\n\r\n        if (this.rng.test( .5 )) addLeaf( 1 );\r\n        if (this.rng.test( .5 )) addLeaf( -1 );\r\n\r\n        return leaves;\r\n    }\r\n};\r\n\r\nexport { BushyPlantGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper, node, offshoot, nodePos, nodeAttr } from \"../util/util\";\r\nimport { Genus, rngSeed, leafDefinition } from '../types';\r\n\r\nclass DragonTreeGenus extends BaseGenus implements Genus {\r\n\r\n    constructor( rngSeed?: rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 10.3;\r\n        this.height = 8.6;\r\n        this.maxBranchNum = 1;\r\n\r\n        this.segmentStyle = {\r\n            fill: '#400',\r\n            stroke: '#931',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 30,\r\n            bottomLength: .2,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return [\r\n            {\r\n                n: this.rng.intRange( 2, 4 ),\r\n                attr: plantHelper.rootPosAngle( this.rng, .5, 6 ),\r\n            },\r\n        ];\r\n    }\r\n    getOffshoots( node: node ) {\r\n        if (!node.pos.isLast) return [];\r\n\r\n        const p = .75;\r\n        const steps = { from: -60, to: 60, step: 30 };\r\n        const makeOffshoot = (angle: number): offshoot => {\r\n            return {\r\n                n: 2,\r\n                attr: {\r\n                    segmentAngle: node.attr.angle + angle + this.rng.range( -10, 10 ),\r\n                }\r\n            };\r\n        };\r\n        const offshoots = plantHelper.repeat({ rng: this.rng, steps, p, cb: makeOffshoot });\r\n\r\n        if (!offshoots.length) offshoots.push({\r\n            n: 2,\r\n            attr: {\r\n                segmentAngle: this.rng.range( -60, 60 ),\r\n            }\r\n        });\r\n\r\n        return offshoots;\r\n    }\r\n\r\n    getNodeWidth( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        if (pos.isOffshoot && prev) return prev.attr.width;\r\n        if (pos.branchNum == 1) return this.rng.range( .2, .3 );\r\n        return this.rng.range( .4, .6 );\r\n    }\r\n    getSegmentLength( pos: nodePos, _prev: node, _attr: nodeAttr ) {\r\n        if (pos.branchNum == 1) return this.rng.range( .2, .8 );\r\n        return this.rng.range( .5, 1.5 );\r\n    }\r\n    getSegmentAngle( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        return plantHelper.nextAngle( this.rng, pos, prev, 8, true );\r\n    }\r\n\r\n    getSegmentStyle( _n0: node, _n1: node ) {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0: node, n1: node ) {\r\n        if (!n1.pos.isLast || n1.pos.branchNum != 1) return [];\r\n\r\n        const steps = { from: -75, to: 75, step: 10 };\r\n        const p = .5;\r\n        const makeLeaf = (angle: number): leafDefinition => {\r\n            const av = this.rng.range( -5, 5 );\r\n            const sv = this.rng.range( -.7, .7 );\r\n\r\n            return {\r\n                angle: n1.attr.angle + angle + av,\r\n                length: 3.5 + sv,\r\n                handles: this.leafCurveHandles,\r\n                style: this.leafStyle,\r\n\r\n                xOffset: this.rng.range( -.2, .2 ),\r\n                yOffset: this.rng.range( .8, .95 ),\r\n            };\r\n        };\r\n        return plantHelper.repeat({ rng: this.rng, steps, p, cb: makeLeaf });\r\n    }\r\n};\r\n\r\nexport { DragonTreeGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper, node, nodePos, nodeAttr } from \"../util/util\";\r\nimport { Genus, rngSeed } from '../types';\r\n\r\nclass ZamiaGenus extends BaseGenus implements Genus {\r\n\r\n    constructor( rngSeed?: rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 3.6;\r\n        this.height = 3.5;\r\n        this.maxBranchNum = 0;\r\n\r\n        this.segmentStyle = {\r\n            stroke: '#041',\r\n            fill: '#161',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .01,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 24,\r\n            bottomLength: .6,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return plantHelper.repeat({\r\n            rng: this.rng,\r\n            n: [ 1, 3 ],\r\n            cb: () => {\r\n                return {\r\n                    n: this.rng.intRange( 5, 7 ),\r\n                    attr: {\r\n                        ... plantHelper.rootPosAngle( this.rng, .25, 15 ),\r\n                        branchArchAngle: this.rng.ranges([ -30, -5 ], [ 5, 30 ]),\r\n                    }\r\n                };\r\n            }\r\n        });\r\n    }\r\n    getOffshoots( _node: node ) {\r\n        return [];\r\n    }\r\n\r\n    getNodeWidth( _pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (!prev) return .1;\r\n        return prev.attr.width * .8;\r\n    }\r\n    getSegmentLength( _pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (!prev) return this.rng.range( .4, 1 );\r\n        return prev.attr.length * this.rng.range( .6, .9 );\r\n    }\r\n    getSegmentAngle( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        return plantHelper.archingBranchAngle( this.rng, pos, prev, 5, .6 );\r\n    }\r\n\r\n    getSegmentStyle() {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0: node, n1: node ) {\r\n        const length = n1.treeRoot.attr.length * 1.2 * (.5 + .5 * Math.sin( Math.PI * n1.pos.numFactor ));\r\n        const angles = n1.pos.isLast ? [ -70, -30, 30, 70 ] : [ -70, 70 ];\r\n\r\n        return plantHelper.repeat({\r\n            rng: this.rng,\r\n            values: angles,\r\n            p: .89,\r\n            cb: angle => {\r\n                const av = this.rng.range( -6, 6 );\r\n                const lv = this.rng.range( -.1, .1 );\r\n                const lf = Math.abs( angle ) < 70 ? .9 : 1;\r\n\r\n                return {\r\n                    angle: n1.attr.angle + angle + av,\r\n                    length: length * lf + lv,\r\n                    handles: this.leafCurveHandles,\r\n                    style: this.leafStyle,\r\n\r\n                    xOffset: 0,\r\n                    yOffset: 1,\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport { ZamiaGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper, node, offshoot, nodePos, nodeAttr } from \"../util/util\";\r\nimport { Genus, rngSeed, attributeSet } from '../types';\r\n\r\nclass PileaGenus extends BaseGenus implements Genus {\r\n\r\n    offshootSegmentStyle: attributeSet;\r\n    branchSegmentStyle: attributeSet;\r\n\r\n    constructor( rngSeed?: rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 4.6;\r\n        this.height = 4.1;\r\n        this.maxBranchNum = 1;\r\n\r\n        this.segmentStyle = {\r\n            stroke: '#931',\r\n            fill: '#400',\r\n            'stroke-width': .0075,\r\n        };\r\n        this.offshootSegmentStyle = {\r\n            stroke: '#931',\r\n            fill: '#400',\r\n            'stroke-width': .0075,\r\n        };\r\n        this.branchSegmentStyle = {\r\n            stroke: '#041',\r\n            fill: '#161',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 80,\r\n            bottomLength: 1,\r\n            topAngle: 100,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return [{\r\n            n: this.rng.intRange( 0, 3 ),\r\n            attr: plantHelper.rootPosAngle( this.rng, .25, 8 ),\r\n        }];\r\n    }\r\n    getOffshoots( node: node ) {\r\n        if (node.pos.isLast) return plantHelper.repeat({\r\n            rng: this.rng,\r\n            n: [ 1, 12 ],\r\n            cb: (): offshoot => {\r\n                return {\r\n                    n: this.rng.intRange( 3, 6 ),\r\n                    attr: {\r\n                        segmentAngle: node.attr.angle + this.rng.range( -40, 40 ),\r\n                        branchArchAngle: this.rng.ranges([ -40, -5 ], [ 5, 40 ]),\r\n                    }\r\n                };\r\n            }\r\n        });\r\n\r\n        if (node.pos.num) return plantHelper.repeat({\r\n            rng: this.rng,\r\n            n: [ 0, 4 ],\r\n            cb: (): offshoot => {\r\n                return {\r\n                    n: this.rng.intRange( 2, 3 ),\r\n                    attr: {\r\n                        segmentAngle: node.attr.angle + this.rng.ranges([ -80, -40 ], [ 40, 80 ]),\r\n                        branchArchAngle: this.rng.ranges([ -40, -5 ], [ 5, 40 ]),\r\n                    }\r\n                };\r\n            }\r\n        });\r\n\r\n        return [];\r\n    }\r\n\r\n    getNodeWidth( pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (pos.branchNum == 0) return this.rng.range( .1, .3 );\r\n        if (pos.isOffshoot && prev !== null) return prev.attr.width;\r\n        return this.rng.range( .05, .1 );\r\n    }\r\n    getSegmentLength( pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (!prev) return this.rng.range( .6, 1.2 );\r\n        if (pos.branchNum == 0) return prev.attr.length * .9;\r\n        if (pos.isOffshoot) return this.rng.range( .1, .2 );\r\n        if (pos.num == 1) {\r\n            if (prev.branchRoot.pos.isLast) return this.rng.range( .6, 1.2 );\r\n            return this.rng.range( .3, .6 );\r\n        }\r\n        return prev.attr.length * .75;\r\n    }\r\n    getSegmentAngle( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        if (pos.branchNum == 0) return this.rng.range( -8, 8 );\r\n        return plantHelper.archingBranchAngle( this.rng, pos, prev, 5, .1 );\r\n    }\r\n\r\n    getSegmentStyle( n0: node, _n1: node ) {\r\n        if (n0.pos.branchNum == 0) return this.segmentStyle;\r\n        if (n0.pos.isOffshoot) return this.offshootSegmentStyle;\r\n        return this.branchSegmentStyle;\r\n    }\r\n\r\n    getLeaves( n0: node, n1: node ) {\r\n        if (!n1.pos.isLast || n1.pos.branchNum != 1) return [];\r\n\r\n        const length = (n1.treeRoot.attr.length || 1) * this.rng.range( .4, 1.5 );\r\n        const angle = plantHelper.segmentAngle( n0 ) + this.rng.range( -8, 8 );\r\n\r\n        return [{\r\n            angle,\r\n            length,\r\n            handles: this.leafCurveHandles,\r\n            style: this.leafStyle,\r\n\r\n            xOffset: 0,\r\n            yOffset: .96,\r\n        }];\r\n    }\r\n};\r\n\r\nexport { PileaGenus };","import { SvgPlant } from \"../Plant/SvgPlant\";\r\nimport { PlantBody } from \"../Plant/PlantBody\";\r\nimport { GenusConstructor } from '../types';\r\n\r\nconst testPlantBodySize = (genus: GenusConstructor, n=1000) => {\r\n    const widths: number[] = [];\r\n    const heights: number[] = [];\r\n\r\n    for (let i=0; i<n; i++) {\r\n        const p = (new SvgPlant( new genus )).body;\r\n        p.genus.width = 0;\r\n        p.genus.height = 0;\r\n        p.init();\r\n\r\n        widths.push( p.bbox.width );\r\n        heights.push( p.bbox.height );\r\n    }\r\n\r\n    widths.sort( (a,b) => a - b );\r\n    heights.sort( (a,b) => a - b );\r\n\r\n    return ( q=50 ) => {\r\n        const i = Math.max( 0, Math.min( n-1, Math.round( q / 100 * (n-1) ) ) );\r\n        return {\r\n            width: widths[ i ],\r\n            height: heights[ i ],\r\n        };\r\n    };\r\n};\r\n\r\nconst findSeed = (genus: GenusConstructor, test: (p: PlantBody) => boolean, timeoutMs=10*1000) => {\r\n    let cancel = false, n = 0, seed;\r\n    const t0 = Date.now();\r\n\r\n    const to = setTimeout(() => {\r\n        cancel = true;\r\n    }, timeoutMs );\r\n\r\n    while (true) {\r\n        const p = (new SvgPlant( new genus )).body;\r\n        p.genus.width = 0;\r\n        p.genus.height = 0;\r\n        p.init();\r\n        n++;\r\n\r\n        if (test( p )) {\r\n            clearTimeout( to );\r\n            seed = p.genus.rngSeed;\r\n            console.log( 'Seed found!', seed );\r\n            break;\r\n        }\r\n\r\n        if (cancel) {\r\n            console.log( 'No seed was found' );\r\n            break;\r\n        }\r\n    }\r\n\r\n    const t = ((Date.now() - t0) / 1000 ).toFixed( 2 );\r\n    console.log( 'findSeed finished after ' + t + ' seconds and ' + n + ' tries.' );\r\n\r\n    return seed;\r\n};\r\n\r\nconst testPerformance = (genus: GenusConstructor, durationMs=10*1000) => {\r\n    const t0 = Date.now();\r\n    let n = 0;\r\n\r\n    while (true) {\r\n        const p = (new SvgPlant( new genus )).body;\r\n        p.genus.width = 0;\r\n        p.genus.height = 0;\r\n        p.init();\r\n        n++;\r\n\r\n        if (Date.now() - t0 > durationMs) break;\r\n    }\r\n\r\n    const ms = Date.now() - t0;\r\n    const s = ms / 1000;\r\n\r\n    console.group( genus.name + ' Performance Test' );\r\n    console.log( 'created ' + n + ' plants in ' + s.toFixed( 2 ) + ' seconds' );\r\n    console.log( (n/s).toFixed(2) + ' plants/sec' );\r\n    console.log( (ms/n).toFixed(2) + ' ms/plant' );\r\n    console.groupEnd();\r\n\r\n    return;\r\n}\r\n\r\nexport {\r\n    testPlantBodySize,\r\n    findSeed,\r\n    testPerformance,\r\n}","\r\nimport { SvgPlant } from './Plant/SvgPlant';\r\nimport { BaseGenus } from './Genera/BaseGenus';\r\nimport { BushyPlantGenus } from './Genera/BushyPlantGenus';\r\nimport { DragonTreeGenus } from './Genera/DragonTreeGenus';\r\nimport { ZamiaGenus } from './Genera/ZamiaGenus';\r\nimport { PileaGenus } from './Genera/PileaGenus';\r\nimport * as DevTools from './util/DevTools';\r\nimport { plantHelper } from './util/util';\r\n\r\nconst Genera = {\r\n    'BushyPlant': BushyPlantGenus,\r\n    'DragonTree': DragonTreeGenus,\r\n    'Zamia': ZamiaGenus,\r\n    'Pilea': PileaGenus,\r\n};\r\n\r\nexport {\r\n    SvgPlant,\r\n    Genera,\r\n    BaseGenus, BushyPlantGenus, DragonTreeGenus, ZamiaGenus, PileaGenus,\r\n\r\n    plantHelper,\r\n    DevTools,\r\n};"],"names":["html","node","tag","set","document","createElement","attr","nodeNS","ns","createElementNS","name","setAttribute","String","svg","root","setAttributeNS","el","compilePathDescription","points","d","p","length","push","join","math","toRadians","degrees","Math","PI","fromAngle","point","angle","precision","a","sin","cos","round","rectFromLine","pointBottom","pointTop","angleBottom","angleTop","widthBottom","widthTop","pointOnLine","p1","p2","distance","dx","dy","sqrt","plantHelper","rootPosAngle","rng","xMax","maxAngle","x","range","f","abs","segmentAngle","baseNode","undefined","nextAngle","pos","prevNode","variance","alternate","isOffshoot","pa","dir","branchNum","treeRoot","num","archingBranchAngle","numAdjust","base","branchRoot","branchArchAngle","numFactor","repeat","cb","shuffle","steps","values","n","test","v","i","from","to","step","Array","isArray","intRange","seed","seedStr","random","substring","fn","reset","seedrandom","pass","fail","r","v0","v1","floor","ranges","ep","last","pop","j","tmp","BBox","constructor","data","x0","x1","y0","y1","Infinity","addX","addY","addPoint","y","addBBox","bbox","expand","contains","strict","containedBy","containsPoint","clone","withPrecision","width","height","aspectRatio","pointsArray","viewBox","ProcTree","maxBranchNum","getNode","getOffshoots","roots","grow","growBranch","Number","rootNode","offshootNum","segmentCount","isTreeRoot","addNode","isLastBranch","offshoots","prev","maxNum","rootAttr","getPos","next","offshootHeight","isRoot","isLast","branchFactor","eachSegment","_each","offshootNode","plantPotSvg","pathAttr","baseCfg","rimHeight","rimLipOuter","rimLipInner","bottom","sw","pad","getPoints","cfg","path","class","preserveAspectRatio","appendChild","expandXBounds","bounds","value","minX","maxX","expandYBounds","minY","maxY","calculateBezier","t","p0","p3","mt","bezierCurveBoundingBox","cx1","cy1","cx2","cy2","x2","y2","min","max","dcx0","dcy0","dcx1","dcy1","dcx2","dcy2","b","c","numerator","denominator","quadroot","t1","t2","prc","BranchSegment","style","n0","n1","bottomWidth","topWidth","bottomAngle","topAngle","top","ageOffset","totalLength","getBoundingBox","age","ageFactor","getAgeFactor","bb","getOffsetPoint","l1","l2","l3","Leaf","segment","handles","xOffset","yOffset","pBase","curves","getCurves","up","down","bha","bhl","bottomLength","tha","thl","topLength","Branches","segments","leaves","addSegment","branch","addLeaf","leaf","getArray","ret","concat","sortLeaves","sort","l0","d0","d1","PlantBody","genus","maxAge","yFactor","getTree","getNodeAttr","getNodeWidth","getSegmentAngle","getSegmentLength","getRoots","init","tree","branches","Map","getBasePoint","get","rp","getSegmentStyle","s","getLeaves","map","parts","bboxX","render","colors","add","Object","assign","getSvg","SvgPlant","color","potSize","potPathAttr","fill","stroke","body","_svgElement","_potSvgElement","_bodySvgElement","animation","rngSeed","update","pot","updateSvgElement","svgElement","getSvgElement","innerHTML","place","w","h","potSvgElement","bodySvgElement","overlap","bodyHeight","wrapperAR","aboveFoldBodyAR","scaledBodyHeight","getPotSvgElement","getBodySvgElement","animate","fromAge","toAge","durationMs","cancelAnimation","ageSpan","currentAge","nextAnimationFrame","paused","resumeAnimation","pauseAnimation","cancelAnimationFrame","acl","aclInv","asin","t0","upd","ts","requestAnimationFrame","BaseGenus","segmentStyle","leafStyle","leafCurveHandles","genusName","cn","_pos","_prev","_attr","_n0","_n1","BushyPlantGenus","getNodeCount","avf","DragonTreeGenus","makeOffshoot","makeLeaf","av","sv","ZamiaGenus","_node","angles","lv","lf","PileaGenus","offshootSegmentStyle","branchSegmentStyle","testPlantBodySize","widths","heights","q","findSeed","timeoutMs","cancel","Date","now","setTimeout","clearTimeout","console","log","toFixed","testPerformance","ms","group","groupEnd","Genera"],"mappings":"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"}