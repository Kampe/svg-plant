{"version":3,"file":"svg-plant.min.umd.js","sources":["../node_modules/json-stringify-safe/stringify.js","../node_modules/random-seed/index.js","../src/util/util.js","../src/Plant/plantPotSvg.js","../src/util/bezierCurveBoundingBox.js","../src/Plant/PlantBody.js","../src/Plant/SvgPlant.js","../src/Genera/BaseGenus.js","../src/Genera/BushyPlantGenus.js","../src/Genera/DragonTreeGenus.js","../src/Genera/ZamiaGenus.js","../src/Genera/PileaGenus.js","../src/util/DevTools.js","../src/main.js"],"sourcesContent":["exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","/*\n * random-seed\n * https://github.com/skratchdot/random-seed\n *\n * This code was originally written by Steve Gibson and can be found here:\n *\n * https://www.grc.com/otg/uheprng.htm\n *\n * It was slightly modified for use in node, to pass jshint, and a few additional\n * helper functions were added.\n *\n * Copyright (c) 2013 skratchdot\n * Dual Licensed under the MIT license and the original GRC copyright/license\n * included below.\n */\n/*\t============================================================================\n\t\t\t\t\t\t\t\t\tGibson Research Corporation\n\t\t\t\tUHEPRNG - Ultra High Entropy Pseudo-Random Number Generator\n\t============================================================================\n\tLICENSE AND COPYRIGHT:  THIS CODE IS HEREBY RELEASED INTO THE PUBLIC DOMAIN\n\tGibson Research Corporation releases and disclaims ALL RIGHTS AND TITLE IN\n\tTHIS CODE OR ANY DERIVATIVES. Anyone may be freely use it for any purpose.\n\t============================================================================\n\tThis is GRC's cryptographically strong PRNG (pseudo-random number generator)\n\tfor JavaScript. It is driven by 1536 bits of entropy, stored in an array of\n\t48, 32-bit JavaScript variables.  Since many applications of this generator,\n\tincluding ours with the \"Off The Grid\" Latin Square generator, may require\n\tthe deteriministic re-generation of a sequence of PRNs, this PRNG's initial\n\tentropic state can be read and written as a static whole, and incrementally\n\tevolved by pouring new source entropy into the generator's internal state.\n\t----------------------------------------------------------------------------\n\tENDLESS THANKS are due Johannes Baagoe for his careful development of highly\n\trobust JavaScript implementations of JS PRNGs.  This work was based upon his\n\tJavaScript \"Alea\" PRNG which is based upon the extremely robust Multiply-\n\tWith-Carry (MWC) PRNG invented by George Marsaglia. MWC Algorithm References:\n\thttp://www.GRC.com/otg/Marsaglia_PRNGs.pdf\n\thttp://www.GRC.com/otg/Marsaglia_MWC_Generators.pdf\n\t----------------------------------------------------------------------------\n\tThe quality of this algorithm's pseudo-random numbers have been verified by\n\tmultiple independent researchers. It handily passes the fermilab.ch tests as\n\twell as the \"diehard\" and \"dieharder\" test suites.  For individuals wishing\n\tto further verify the quality of this algorithm's pseudo-random numbers, a\n\t256-megabyte file of this algorithm's output may be downloaded from GRC.com,\n\tand a Microsoft Windows scripting host (WSH) version of this algorithm may be\n\tdownloaded and run from the Windows command prompt to generate unique files\n\tof any size:\n\tThe Fermilab \"ENT\" tests: http://fourmilab.ch/random/\n\tThe 256-megabyte sample PRN file at GRC: https://www.GRC.com/otg/uheprng.bin\n\tThe Windows scripting host version: https://www.GRC.com/otg/wsh-uheprng.js\n\t----------------------------------------------------------------------------\n\tQualifying MWC multipliers are: 187884, 686118, 898134, 1104375, 1250205,\n\t1460910 and 1768863. (We use the largest one that's < 2^21)\n\t============================================================================ */\n'use strict';\nvar stringify = require('json-stringify-safe');\n\n/*\t============================================================================\nThis is based upon Johannes Baagoe's carefully designed and efficient hash\nfunction for use with JavaScript.  It has a proven \"avalanche\" effect such\nthat every bit of the input affects every bit of the output 50% of the time,\nwhich is good.\tSee: http://baagoe.com/en/RandomMusings/hash/avalanche.xhtml\n============================================================================\n*/\nvar Mash = function () {\n\tvar n = 0xefc8249d;\n\tvar mash = function (data) {\n\t\tif (data) {\n\t\t\tdata = data.toString();\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tn += data.charCodeAt(i);\n\t\t\t\tvar h = 0.02519603282416938 * n;\n\t\t\t\tn = h >>> 0;\n\t\t\t\th -= n;\n\t\t\t\th *= n;\n\t\t\t\tn = h >>> 0;\n\t\t\t\th -= n;\n\t\t\t\tn += h * 0x100000000; // 2^32\n\t\t\t}\n\t\t\treturn (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n\t\t} else {\n\t\t\tn = 0xefc8249d;\n\t\t}\n\t};\n\treturn mash;\n};\n\nvar uheprng = function (seed) {\n\treturn (function () {\n\t\tvar o = 48; // set the 'order' number of ENTROPY-holding 32-bit values\n\t\tvar c = 1; // init the 'carry' used by the multiply-with-carry (MWC) algorithm\n\t\tvar p = o; // init the 'phase' (max-1) of the intermediate variable pointer\n\t\tvar s = new Array(o); // declare our intermediate variables array\n\t\tvar i; // general purpose local\n\t\tvar j; // general purpose local\n\t\tvar k = 0; // general purpose local\n\n\t\t// when our \"uheprng\" is initially invoked our PRNG state is initialized from the\n\t\t// browser's own local PRNG. This is okay since although its generator might not\n\t\t// be wonderful, it's useful for establishing large startup entropy for our usage.\n\t\tvar mash = new Mash(); // get a pointer to our high-performance \"Mash\" hash\n\n\t\t// fill the array with initial mash hash values\n\t\tfor (i = 0; i < o; i++) {\n\t\t\ts[i] = mash(Math.random());\n\t\t}\n\n\t\t// this PRIVATE (internal access only) function is the heart of the multiply-with-carry\n\t\t// (MWC) PRNG algorithm. When called it returns a pseudo-random number in the form of a\n\t\t// 32-bit JavaScript fraction (0.0 to <1.0) it is a PRIVATE function used by the default\n\t\t// [0-1] return function, and by the random 'string(n)' function which returns 'n'\n\t\t// characters from 33 to 126.\n\t\tvar rawprng = function () {\n\t\t\tif (++p >= o) {\n\t\t\t\tp = 0;\n\t\t\t}\n\t\t\tvar t = 1768863 * s[p] + c * 2.3283064365386963e-10; // 2^-32\n\t\t\treturn s[p] = t - (c = t | 0);\n\t\t};\n\n\t\t// this EXPORTED function is the default function returned by this library.\n\t\t// The values returned are integers in the range from 0 to range-1. We first\n\t\t// obtain two 32-bit fractions (from rawprng) to synthesize a single high\n\t\t// resolution 53-bit prng (0 to <1), then we multiply this by the caller's\n\t\t// \"range\" param and take the \"floor\" to return a equally probable integer.\n\t\tvar random = function (range) {\n\t\t\treturn Math.floor(range * (rawprng() + (rawprng() * 0x200000 | 0) * 1.1102230246251565e-16)); // 2^-53\n\t\t};\n\n\t\t// this EXPORTED function 'string(n)' returns a pseudo-random string of\n\t\t// 'n' printable characters ranging from chr(33) to chr(126) inclusive.\n\t\trandom.string = function (count) {\n\t\t\tvar i;\n\t\t\tvar s = '';\n\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\ts += String.fromCharCode(33 + random(94));\n\t\t\t}\n\t\t\treturn s;\n\t\t};\n\n\t\t// this PRIVATE \"hash\" function is used to evolve the generator's internal\n\t\t// entropy state. It is also called by the EXPORTED addEntropy() function\n\t\t// which is used to pour entropy into the PRNG.\n\t\tvar hash = function () {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\tfor (i = 0; i < args.length; i++) {\n\t\t\t\tfor (j = 0; j < o; j++) {\n\t\t\t\t\ts[j] -= mash(args[i]);\n\t\t\t\t\tif (s[j] < 0) {\n\t\t\t\t\t\ts[j] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// this EXPORTED \"clean string\" function removes leading and trailing spaces and non-printing\n\t\t// control characters, including any embedded carriage-return (CR) and line-feed (LF) characters,\n\t\t// from any string it is handed. this is also used by the 'hashstring' function (below) to help\n\t\t// users always obtain the same EFFECTIVE uheprng seeding key.\n\t\trandom.cleanString = function (inStr) {\n\t\t\tinStr = inStr.replace(/(^\\s*)|(\\s*$)/gi, ''); // remove any/all leading spaces\n\t\t\tinStr = inStr.replace(/[\\x00-\\x1F]/gi, ''); // remove any/all control characters\n\t\t\tinStr = inStr.replace(/\\n /, '\\n'); // remove any/all trailing spaces\n\t\t\treturn inStr; // return the cleaned up result\n\t\t};\n\n\t\t// this EXPORTED \"hash string\" function hashes the provided character string after first removing\n\t\t// any leading or trailing spaces and ignoring any embedded carriage returns (CR) or Line Feeds (LF)\n\t\trandom.hashString = function (inStr) {\n\t\t\tinStr = random.cleanString(inStr);\n\t\t\tmash(inStr); // use the string to evolve the 'mash' state\n\t\t\tfor (i = 0; i < inStr.length; i++) { // scan through the characters in our string\n\t\t\t\tk = inStr.charCodeAt(i); // get the character code at the location\n\t\t\t\tfor (j = 0; j < o; j++) { //\t\"mash\" it into the UHEPRNG state\n\t\t\t\t\ts[j] -= mash(k);\n\t\t\t\t\tif (s[j] < 0) {\n\t\t\t\t\t\ts[j] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// this EXPORTED function allows you to seed the random generator.\n\t\trandom.seed = function (seed) {\n\t\t\tif (typeof seed === 'undefined' || seed === null) {\n\t\t\t\tseed = Math.random();\n\t\t\t}\n\t\t\tif (typeof seed !== 'string') {\n\t\t\t\tseed = stringify(seed, function (key, value) {\n\t\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\t\treturn (value).toString();\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t}\n\t\t\trandom.initState();\n\t\t\trandom.hashString(seed);\n\t\t};\n\n\t\t// this handy exported function is used to add entropy to our uheprng at any time\n\t\trandom.addEntropy = function ( /* accept zero or more arguments */ ) {\n\t\t\tvar args = [];\n\t\t\tfor (i = 0; i < arguments.length; i++) {\n\t\t\t\targs.push(arguments[i]);\n\t\t\t}\n\t\t\thash((k++) + (new Date().getTime()) + args.join('') + Math.random());\n\t\t};\n\n\t\t// if we want to provide a deterministic startup context for our PRNG,\n\t\t// but without directly setting the internal state variables, this allows\n\t\t// us to initialize the mash hash and PRNG's internal state before providing\n\t\t// some hashing input\n\t\trandom.initState = function () {\n\t\t\tmash(); // pass a null arg to force mash hash to init\n\t\t\tfor (i = 0; i < o; i++) {\n\t\t\t\ts[i] = mash(' '); // fill the array with initial mash hash values\n\t\t\t}\n\t\t\tc = 1; // init our multiply-with-carry carry\n\t\t\tp = o; // init our phase\n\t\t};\n\n\t\t// we use this (optional) exported function to signal the JavaScript interpreter\n\t\t// that we're finished using the \"Mash\" hash function so that it can free up the\n\t\t// local \"instance variables\" is will have been maintaining.  It's not strictly\n\t\t// necessary, of course, but it's good JavaScript citizenship.\n\t\trandom.done = function () {\n\t\t\tmash = null;\n\t\t};\n\n\t\t// if we called \"uheprng\" with a seed value, then execute random.seed() before returning\n\t\tif (typeof seed !== 'undefined') {\n\t\t\trandom.seed(seed);\n\t\t}\n\n\t\t// Returns a random integer between 0 (inclusive) and range (exclusive)\n\t\trandom.range = function (range) {\n\t\t\treturn random(range);\n\t\t};\n\n\t\t// Returns a random float between 0 (inclusive) and 1 (exclusive)\n\t\trandom.random = function () {\n\t\t\treturn random(Number.MAX_VALUE - 1) / Number.MAX_VALUE;\n\t\t};\n\n\t\t// Returns a random float between min (inclusive) and max (exclusive)\n\t\trandom.floatBetween = function (min, max) {\n\t\t\treturn random.random() * (max - min) + min;\n\t\t};\n\n\t\t// Returns a random integer between min (inclusive) and max (inclusive)\n\t\trandom.intBetween = function (min, max) {\n\t\t\treturn Math.floor(random.random() * (max - min + 1)) + min;\n\t\t};\n\n\t\t// when our main outer \"uheprng\" function is called, after setting up our\n\t\t// initial variables and entropic state, we return an \"instance pointer\"\n\t\t// to the internal anonymous function which can then be used to access\n\t\t// the uheprng's various exported functions.  As with the \".done\" function\n\t\t// above, we should set the returned value to 'null' once we're finished\n\t\t// using any of these functions.\n\t\treturn random;\n\t}());\n};\n\n// Modification for use in node:\nuheprng.create = function (seed) {\n\treturn new uheprng(seed);\n};\nmodule.exports = uheprng;\n","import RNG from 'random-seed';\r\n\r\nconst html = {\r\n    node( tag, set ) {\r\n        const node = document.createElement( tag );\r\n        html.attr( node, set );\r\n        return node;\r\n    },\r\n    nodeNS( tag, set, ns ) {\r\n        const node = document.createElementNS( ns, tag );\r\n        html.attr( node, set );\r\n        return node;\r\n    },\r\n    attr( node, set ) {\r\n        for (let name in set) node.setAttribute( name, set[ name ] );\r\n    },\r\n\r\n    svg: {\r\n        root( set ) {\r\n            const svg = html.svg.node( 'svg', set );\r\n            svg.setAttribute( 'xmlns', \"http://www.w3.org/2000/svg\" );\r\n            svg.setAttributeNS( \"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\" );\r\n            return svg;\r\n        },\r\n        node( tag, set ) {\r\n            const el = html.nodeNS( tag, {}, \"http://www.w3.org/2000/svg\" );\r\n            html.attr( el, set );\r\n            return el;\r\n        },\r\n        stroke({ color='#000', w=1, opacity=1, cap='square', join='miter', dash='', nss=false },set={}) {\r\n            set['stroke'] = color;\r\n            set['stroke-width'] = w;\r\n            set['stroke-linecap'] = cap;\r\n            set['stroke-linejoin'] = join;\r\n            if (dash) set['stroke-dasharray'] = dash;\r\n            if (opacity < 1) set['stroke-opacity'] = opacity;\r\n            if (nss) set['vector-effect'] = 'non-scaling-stroke';\r\n\r\n            return set;\r\n        },\r\n\r\n        compilePathDescription( points ) {\r\n            const d = [];\r\n\r\n            for (const p of points) {\r\n                if (p.length == 1) d.push( p );\r\n                else if (p.length == 2) d.push( p[0], p[1] );\r\n                else if (p.length == 3) d.push( p[0], p[1], p[2] );\r\n            }\r\n\r\n            return d.join( ' ' );\r\n        }\r\n    },\r\n};\r\n\r\nconst math = {\r\n    toRadians( degrees ) {\r\n        return degrees * (Math.PI / 180);\r\n    },\r\n\r\n    fromAngle( angle, length=1, tx=0, ty=0, svgCommand, precision ) {\r\n        const a = [\r\n            Math.sin( math.toRadians( angle ) ) * length + tx,\r\n            - Math.cos( math.toRadians( angle ) ) * length + ty,\r\n        ];\r\n\r\n        if (precision) {\r\n            a[ 0 ] = Math.round( a[ 0 ] * precision );\r\n            a[ 1 ] = Math.round( a[ 1 ] * precision );\r\n        }\r\n\r\n        if (svgCommand) a.unshift( svgCommand );\r\n\r\n        return a;\r\n    },\r\n\r\n    rectFromLine( p1, p2, a1, a2, w1, w2, precision ) {\r\n        w1 /= 2;\r\n        w2 /= 2;\r\n        return [\r\n            math.fromAngle( a1 - 90, w1, p1[0], p1[1], 'M', precision ),\r\n            math.fromAngle( a2 - 90, w2, p2[0], p2[1], 'L', precision ),\r\n            math.fromAngle( a2 + 90, w2, p2[0], p2[1], 'L', precision ),\r\n            math.fromAngle( a1 + 90, w1, p1[0], p1[1], 'L', precision ),\r\n            'Z',\r\n        ];\r\n    },\r\n\r\n    pointOnLine( p1, p2, d ) {\r\n        return [\r\n            p1[0] + d * (p2[0] - p1[0]),\r\n            p1[1] + d * (p2[1] - p1[1]),\r\n        ];\r\n    },\r\n\r\n    distance( p1, p2 ) {\r\n        return Math.sqrt( (p1[0]-p2[0])**2 + (p1[1]-p2[1])**2 );\r\n    }\r\n};\r\n\r\nconst plantHelper = {\r\n    rootPosAngle( rng, xMax, maxAngle ) {\r\n        const x = rng.range( -xMax, xMax );\r\n        const f = Math.abs( x ) / xMax;\r\n        return {\r\n            x,\r\n            segmentAngle: maxAngle * f * (x < 0 ? -1 : 1),\r\n        };\r\n    },\r\n\r\n    segmentAngle( baseNode ) {\r\n        if (baseNode.attr.segmentAngle !== undefined) return baseNode.attr.segmentAngle;\r\n        return baseNode.attr.angle;\r\n    },\r\n\r\n    nextAngle( rng, pos, prevNode, variance, alternate ) {\r\n        if (pos.isOffshoot) return prevNode.attr.angle;\r\n\r\n        const pa = this.segmentAngle( prevNode );\r\n\r\n        if (alternate) {\r\n            const dir = pos.branchNum>0 ? 1 : prevNode.treeRoot.attr.x>=0 ? 1 : -1;\r\n            return pa + (prevNode.pos.num % 2 ? 1 : -1) * rng.range( 0, variance ) * dir;\r\n        }\r\n        else {\r\n            return pa + rng.range( -variance, variance );\r\n        }\r\n    },\r\n\r\n    archingBranchAngle( rng, pos, prevNode, variance, numAdjust ) {\r\n        if (pos.isOffshoot) return prevNode.attr.angle;\r\n\r\n        const pa = plantHelper.segmentAngle( prevNode );\r\n        const base = prevNode.branchRoot.attr.branchArchAngle;\r\n        const f = numAdjust ? (1 - numAdjust) + numAdjust * (1 - pos.numFactor) : 1;\r\n\r\n        return pa + f * base + rng.range( -variance, variance );\r\n    },\r\n\r\n    repeat( rng, n, p, cb, shuffle=true ) {\r\n        const a = [];\r\n\r\n        if (typeof p == 'function') {\r\n            cb = p;\r\n            p = 1;\r\n        }\r\n\r\n        if (p <= 0) return a;\r\n        const test = p < 1;\r\n\r\n        if (Array.isArray( n )) {\r\n            for (let i of n) if (!test || rng.test( p )) {\r\n                a.push( cb( i ) );\r\n            }\r\n        }\r\n        else if (typeof n == 'object') {\r\n            for (let i=n.from; i<=n.to; i+=n.step) if (!test || rng.test( p )) {\r\n                a.push( cb( i ) );\r\n            }\r\n        }\r\n        else {\r\n            if (p > 1 && p > n) n = rng.intRange( n, p );\r\n\r\n            for (let i=0; i<n; i++) if (!test || rng.test( p )) {\r\n                a.push( cb( i ) );\r\n            }\r\n        }\r\n\r\n        if (shuffle) rng.shuffle( a );\r\n\r\n        return a;\r\n    }\r\n};\r\n\r\nconst rng = seed => {\r\n    if (seed === undefined) seed = (Math.random() + '').substring( 2 ) * 1;\r\n    let fn;\r\n\r\n    const rng = {\r\n        get seed() {\r\n            return seed;\r\n        },\r\n        reset() {\r\n            fn = (new RNG( seed )).random;\r\n        },\r\n\r\n        random( v=1 ) {\r\n            return fn() * v;\r\n        },\r\n        test( p=.5, pass=true, fail=false ) {\r\n            if (p >= 1) return pass;\r\n            if (p <= 0) return fail;\r\n            return fn() < p ? pass : fail;\r\n        },\r\n        range( v0, v1 ) {\r\n            if (v0==v1) return v0;\r\n            return v0 + fn() * ( v1 - v0 );\r\n        },\r\n        intRange( v0, v1 ) {\r\n            if (v0==v1) return v0;\r\n            return v0 + Math.floor( fn() * ( v1 - v0 + 1 ) );\r\n        },\r\n        ranges( ... ranges ) {\r\n            const ep = 1 / ranges.length;\r\n\r\n            ranges = [ ... ranges ];\r\n            const last = ranges.pop();\r\n\r\n            for (let r of ranges) {\r\n                const p = r[2] || ep;\r\n                if (rng.test( p )) return rng.range( r[0], r[1] );\r\n            }\r\n\r\n            return rng.range( last[0], last[1] );\r\n        },\r\n\r\n        shuffle( a ) {\r\n            for (let i = a.length - 1; i > 0; i--) {\r\n                const j = Math.floor( fn() * (i + 1) );\r\n                const tmp = a[i];\r\n                a[i] = a[j];\r\n                a[j] = tmp;\r\n            }\r\n            return a;\r\n        }\r\n    };\r\n\r\n    rng.reset();\r\n\r\n    return rng;\r\n}\r\n\r\nclass BBox {\r\n    constructor({ x0, x1, y0, y1 }={}) {\r\n        this.x0 = Infinity;\r\n        this.x1 = -Infinity;\r\n        this.y0 = Infinity;\r\n        this.y1 = -Infinity;\r\n\r\n        if (x0 !== undefined) this.x0 = x0;\r\n        if (x1 !== undefined) this.x1 = x1;\r\n        if (y0 !== undefined) this.y0 = y0;\r\n        if (y1 !== undefined) this.y1 = y1;\r\n    }\r\n\r\n    addX( v ) {\r\n        if (v < this.x0) this.x0 = v;\r\n        if (v > this.x1) this.x1 = v;\r\n        return this;\r\n    }\r\n    addY( v ) {\r\n        if (v < this.y0) this.y0 = v;\r\n        if (v > this.y1) this.y1 = v;\r\n        return this;\r\n    }\r\n    addPoint( x, y ) {\r\n        this.addX( x );\r\n        this.addY( y );\r\n        return this;\r\n    }\r\n    addBBox( bbox ) {\r\n        this.addX( bbox.x0 );\r\n        this.addX( bbox.x1 );\r\n        this.addY( bbox.y0 );\r\n        this.addY( bbox.y1 );\r\n        return this;\r\n    }\r\n\r\n    expand( v ) {\r\n        this.x0 -= v;\r\n        this.x1 += v;\r\n\r\n        this.y0 -= v;\r\n        this.y1 += v;\r\n\r\n        return this;\r\n    }\r\n\r\n    contains( bbox, strict ) {\r\n        if (strict) return this.x0 < bbox.x0 && this.x1 > bbox.x1 && this.y0 < bbox.y0 && this.y1 > bbox.y1;\r\n        return this.x0 <= bbox.x0 && this.x1 >= bbox.x1 && this.y0 <= bbox.y0 && this.y1 >= bbox.y1;\r\n    }\r\n    containedBy( bbox, strict ) {\r\n        if (strict) return this.x0 > bbox.x0 && this.x1 < bbox.x1 && this.y0 > bbox.y0 && this.y1 < bbox.y1;\r\n        return this.x0 >= bbox.x0 && this.x1 <= bbox.x1 && this.y0 >= bbox.y0 && this.y1 <= bbox.y1;\r\n    }\r\n    containsPoint( x, y, strict ) {\r\n        if (strict) return !( x <= this.x0 || x >= this.x1 || y <= this.y0 || y >= this.y1 );\r\n        return !( x < this.x0 || x > this.x1 || y < this.y0 || y > this.y1 );\r\n    }\r\n\r\n    clone() {\r\n        return new BBox( this.data );\r\n    }\r\n\r\n    withPrecision( p ) {\r\n        return new BBox({\r\n            x0: Math.round( this.x0 * p ),\r\n            x1: Math.round( this.x1 * p ),\r\n            y0: Math.round( this.y0 * p ),\r\n            y1: Math.round( this.y1 * p ),\r\n        });\r\n    }\r\n\r\n    get width() {\r\n        return this.x1 - this.x0;\r\n    }\r\n    get height() {\r\n        return this.y1 - this.y0;\r\n    }\r\n\r\n    get aspectRatio() {\r\n        return this.width / this.height;\r\n    }\r\n\r\n    get data() {\r\n        return {\r\n            x0: this.x0,\r\n            x1: this.x1,\r\n            y0: this.y0,\r\n            y1: this.y1\r\n        };\r\n    }\r\n\r\n    get pointsArray() {\r\n        return [\r\n            [ this.x0, this.y0 ],\r\n            [ this.x1, this.y1 ],\r\n        ];\r\n    }\r\n\r\n    get viewBox() {\r\n        return `${this.x0} ${this.y0} ${this.width} ${this.height}`;\r\n    }\r\n}\r\n\r\nclass ProcTree {\r\n\r\n    constructor( maxBranchNum, getNode, getOffshoots ) {\r\n        this.maxBranchNum = maxBranchNum;\r\n        this.getNode = getNode;\r\n        this.getOffshoots = getOffshoots;\r\n\r\n        this.roots = [];\r\n    }\r\n\r\n    grow() {\r\n        const roots = this.getOffshoots( null );\r\n        for (let i in roots) this.growBranch( null, i, roots[ i ].n, roots[ i ].attr );\r\n    }\r\n\r\n    growBranch( rootNode, offshootNum, segmentCount, attr ) {\r\n        const isTreeRoot = !rootNode;\r\n\r\n        let node = this.addNode( rootNode, true, offshootNum, segmentCount, attr );\r\n\r\n        if (isTreeRoot) this.roots.push( node );\r\n        const isLastBranch = this.maxBranchNum == node.pos.branchNum;\r\n\r\n        if (!isLastBranch && isTreeRoot) {\r\n            const offshoots = this.getOffshoots( node );\r\n            for (let i in offshoots) this.growBranch( node, i, offshoots[ i ].n, offshoots[ i ].attr );\r\n        }\r\n\r\n        for (let i=0; i<segmentCount; i++) {\r\n            node = this.addNode( node, false, offshootNum, segmentCount );\r\n            if (!isLastBranch) {\r\n                const offshoots = this.getOffshoots( node );\r\n                for (let i in offshoots) this.growBranch( node, i, offshoots[ i ].n, offshoots[ i ].attr );\r\n            }\r\n        }\r\n    }\r\n\r\n    addNode( prev, isOffshoot, offshootNum, maxNum, rootAttr ) {\r\n        const pos = this.getPos( prev ? prev.pos : null, isOffshoot, maxNum );\r\n        const node = {\r\n            pos,\r\n            attr: { ... (rootAttr||{}), ... (this.getNode( pos, prev, rootAttr )||{}) },\r\n            offshoots: [],\r\n\r\n            prev: null,\r\n            next: null,\r\n\r\n            branchRoot: null,\r\n            treeRoot: null,\r\n        };\r\n\r\n        if (prev) {\r\n            node.prev = prev;\r\n            node.branchRoot = isOffshoot ? node : prev.isOffshoot ? prev : prev.branchRoot;\r\n            node.treeRoot = prev.treeRoot ? prev.treeRoot : prev;\r\n\r\n            if (isOffshoot) {\r\n                prev.offshoots.push( node );\r\n                node.offshootNum = offshootNum;\r\n            }\r\n            else {\r\n                prev.next = node;\r\n            }\r\n\r\n        }\r\n        else {\r\n            node.branchRoot = node;\r\n            node.treeRoot = node;\r\n            node.offshootNum = offshootNum;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    getPos( prev, isOffshoot, maxNum ) {\r\n        if (!prev) return {\r\n            num: 0,\r\n            branchNum: 0,\r\n\r\n            height: 0,\r\n            offshootHeight: 0,\r\n\r\n            isRoot: true,\r\n\r\n            isLast: maxNum == 0,\r\n            isLastBranch: this.maxBranchNum == 0,\r\n\r\n            isOffshoot,\r\n\r\n            numFactor: 1,\r\n            branchFactor: 1,\r\n        };\r\n\r\n        const pos = {\r\n            num: isOffshoot ? 0 : prev.num + 1,\r\n            branchNum: isOffshoot ? prev.branchNum + 1 : prev.branchNum,\r\n\r\n            height: isOffshoot ? prev.height : prev.height + 1,\r\n            offshootHeight: isOffshoot ? prev.num : prev.offshootHeight,\r\n\r\n            isRoot: false,\r\n\r\n            isLast: false,\r\n            isLastBranch: false,\r\n\r\n            isOffshoot,\r\n        };\r\n\r\n        if (pos.num == maxNum) pos.isLast = true;\r\n        if (pos.branchNum == this.maxBranchNum) pos.isLastBranch = true;\r\n\r\n        pos.numFactor = maxNum ? (1 - pos.num / maxNum) : 1;\r\n        pos.branchFactor = this.maxBranchNum ? (1 - pos.branchNum / this.maxBranchNum) : 1;\r\n\r\n        return pos;\r\n    }\r\n\r\n    eachSegment( cb ) {\r\n        for (let node of this.roots) this._each( node, cb );\r\n    }\r\n    _each( node, cb ) {\r\n        // note: the treeRoot node can have offshoots\r\n        // other nodes that are branchRoots cannot have offshoots\r\n        while ( node ) {\r\n            if (node.pos.num > 0) cb( node.prev, node );\r\n            for (let offshootNode of node.offshoots) this._each( offshootNode.next, cb );\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    html,\r\n    math,\r\n    plantHelper,\r\n    rng,\r\n    BBox,\r\n    ProcTree,\r\n};","import { html } from \"../util/util\";\r\n\r\nconst plantPotSvg = pathAttr => {\r\n    const baseCfg = {\r\n        rimHeight: 20,\r\n        rimLipOuter: 2,\r\n        rimLipInner: 4,\r\n        bottom: 15,\r\n    };\r\n\r\n    const sw = pathAttr ? ('stroke-width' in pathAttr ? pathAttr[ 'stroke-width' ] : 2) : false;\r\n    if (sw) pathAttr[ 'stroke-width' ] = sw;\r\n\r\n    const pad = sw ? sw / 2 : 0;\r\n\r\n    const getPoints = cfg => {\r\n        return [\r\n            [ 'M', pad, pad ],\r\n            [ 'L', 100-pad, pad ],\r\n            [ 'L', 100-pad - cfg.rimLipOuter, cfg.rimHeight ],\r\n            [ 'L', 100-pad - cfg.rimLipInner, cfg.rimHeight ],\r\n            [ 'L', 100-pad - cfg.bottom, 100-pad ],\r\n            [ 'L', pad+cfg.bottom, 100-pad ],\r\n            [ 'L', pad+cfg.rimLipInner, cfg.rimHeight ],\r\n            [ 'L', pad+cfg.rimLipOuter, cfg.rimHeight ],\r\n            'Z',\r\n        ];\r\n    };\r\n\r\n    if (!pathAttr) pathAttr = {};\r\n    pathAttr.d = html.svg.compilePathDescription( getPoints( baseCfg ) );\r\n    const path = html.svg.node( 'path', pathAttr );\r\n\r\n    const svg = html.svg.root({\r\n        class: 'svg-plant-pot',\r\n        viewBox: '0 0 100 100',\r\n        preserveAspectRatio: 'xMidYMax meet',\r\n    });\r\n\r\n    svg.appendChild( path );\r\n\r\n    return svg;\r\n};\r\n\r\nexport { plantPotSvg };","// ripped from https://github.com/kfitfk/svg-boundings\r\n\r\nvar MIN_X = 'minX';\r\nvar MAX_X = 'maxX';\r\nvar MIN_Y = 'minY';\r\nvar MAX_Y = 'maxY';\r\n\r\n/**\r\n * expand the x-bounds, if the value lies outside the bounding box\r\n */\r\nfunction expandXBounds(bounds, value) {\r\n  if (bounds[MIN_X] > value) bounds[MIN_X] = value;\r\n  else if (bounds[MAX_X] < value) bounds[MAX_X] = value;\r\n}\r\n\r\n/**\r\n * expand the y-bounds, if the value lies outside the bounding box\r\n */\r\nfunction expandYBounds(bounds, value) {\r\n  if (bounds[MIN_Y] > value) bounds[MIN_Y] = value;\r\n  else if (bounds[MAX_Y] < value) bounds[MAX_Y] = value;\r\n}\r\n\r\n/**\r\n * Calculate the bezier value for one dimension at distance 't'\r\n */\r\nfunction calculateBezier(t, p0, p1, p2, p3) {\r\n  var mt = 1-t;\r\n  return (mt*mt*mt*p0) + (3*mt*mt*t*p1) + (3*mt*t*t*p2) + (t*t*t*p3);\r\n}\r\n\r\n/**\r\n * Calculate the bounding box for this bezier curve.\r\n * http://pomax.nihongoresources.com/pages/bezier/\r\n */\r\nfunction bezierCurveBoundingBox(x1, y1, cx1, cy1, cx2, cy2, x2, y2) {\r\n  var bounds = {};\r\n  bounds[MIN_X] = Math.min(x1, x2);\r\n  bounds[MIN_Y] = Math.min(y1, y2);\r\n  bounds[MAX_X] = Math.max(x1, x2);\r\n  bounds[MAX_Y] = Math.max(y1, y2);\r\n\r\n  var dcx0 = cx1 - x1;\r\n  var dcy0 = cy1 - y1;\r\n  var dcx1 = cx2 - cx1;\r\n  var dcy1 = cy2 - cy1;\r\n  var dcx2 = x2 - cx2;\r\n  var dcy2 = y2 - cy2;\r\n\r\n  if (cx1<bounds[MIN_X] || cx1>bounds[MAX_X] || cx2<bounds[MIN_X] || cx2>bounds[MAX_X]) {\r\n    // Just for better reading because we are doing middle school math here\r\n    var a = dcx0;\r\n    var b = dcx1;\r\n    var c = dcx2;\r\n\r\n    if (a+c !== 2*b) b += 0.0001;\r\n\r\n    var numerator = 2*(a - b);\r\n    var denominator = 2*(a - 2*b + c);\r\n    if (denominator === 0) denominator = 0.0001;\r\n    var quadroot = (2*b-2*a)*(2*b-2*a) - 2*a*denominator;\r\n    var root = Math.sqrt(quadroot);\r\n\r\n    var t1 =  (numerator + root) / denominator;\r\n    var t2 =  (numerator - root) / denominator;\r\n\r\n    if (0<t1 && t1<1) {\r\n      expandXBounds(bounds, calculateBezier(t1, x1, cx1, cx2, x2));\r\n    }\r\n    if (0<t2 && t2<1) {\r\n      expandXBounds(bounds, calculateBezier(t2, x1, cx1, cx2, x2));\r\n    }\r\n  }\r\n\r\n  if (cy1<bounds[MIN_Y] || cy1>bounds[MAX_Y] || cy2<bounds[MIN_Y] || cy2>bounds[MAX_Y]) {\r\n    a = dcy0;\r\n    b = dcy1;\r\n    c = dcy2;\r\n\r\n    if (a+c !== 2*b) b += 0.0001;\r\n\r\n    numerator = 2*(a - b);\r\n    denominator = 2*(a - 2*b + c);\r\n    if (denominator === 0) denominator = 0.0001;\r\n    quadroot = (2*b-2*a)*(2*b-2*a) - 2*a*denominator;\r\n    root = Math.sqrt(quadroot);\r\n\r\n    t1 =  (numerator + root) / denominator;\r\n    t2 =  (numerator - root) / denominator;\r\n\r\n    if (0<t1 && t1<1) {\r\n      expandYBounds(bounds, calculateBezier(t1, y1, cy1, cy2, y2));\r\n    }\r\n    if (0<t2 && t2<1) {\r\n      expandYBounds(bounds, calculateBezier(t2, y1, cy1, cy2, y2));\r\n    }\r\n  }\r\n\r\n  return {\r\n    x0: bounds[MIN_X],\r\n    x1: bounds[MAX_X],\r\n    y0: bounds[MIN_Y],\r\n    y1: bounds[MAX_Y],\r\n  };\r\n}\r\n\r\nexport { bezierCurveBoundingBox };","import { ProcTree, html, math, BBox } from \"../util/util\";\r\nimport { bezierCurveBoundingBox } from \"../util/bezierCurveBoundingBox\";\r\n\r\nconst precision = 10000;\r\nconst prc = v => {\r\n    if (v.length) return [\r\n        Math.round( v[0] * precision ),\r\n        Math.round( v[1] * precision ),\r\n    ];\r\n\r\n    return Math.round( v * precision );\r\n}\r\n\r\nclass BranchSegment {\r\n    constructor( base, style, n0, n1 ) {\r\n        this.base = base;\r\n\r\n        this.bottomWidth = n0.attr.width;\r\n        this.topWidth = n1.attr.width;\r\n\r\n        this.angle = n0.attr.segmentAngle !== undefined ? n0.attr.segmentAngle : n0.attr.angle;\r\n        this.bottomAngle = n0.attr.angle;\r\n        this.topAngle = n1.attr.angle;\r\n\r\n        this.length = n0.attr.length;\r\n\r\n        this.top = math.fromAngle( this.angle, this.length, this.base[0], this.base[1] );\r\n\r\n        this.ageOffset = n0.attr.totalLength;\r\n        this.branchNum = n0.pos.branchNum;\r\n\r\n        this.style = style;\r\n\r\n        this.bbox = this.getBoundingBox();\r\n    }\r\n\r\n    getPoints( age ) {\r\n        const ageFactor = this.getAgeFactor( age );\r\n        if (!ageFactor) return;\r\n\r\n        let top = this.top;\r\n        if (ageFactor < 1) {\r\n            top = math.fromAngle( this.angle, this.length * ageFactor, this.base[0], this.base[1] );\r\n        }\r\n\r\n        return math.rectFromLine(\r\n            this.base, top,\r\n            this.bottomAngle, this.topAngle,\r\n            this.bottomWidth, this.topWidth,\r\n            precision,\r\n        );\r\n    }\r\n\r\n    getBoundingBox() {\r\n        const points = math.rectFromLine(\r\n            this.base, this.top,\r\n            this.bottomAngle, this.topAngle,\r\n            this.bottomWidth, this.topWidth,\r\n            false\r\n        );\r\n\r\n        const bb = new BBox();\r\n        bb.addPoint( points[0][1], points[0][2] );\r\n        bb.addPoint( points[1][1], points[1][2] );\r\n        bb.addPoint( points[2][1], points[2][2] );\r\n        bb.addPoint( points[3][1], points[3][2] );\r\n\r\n        return bb;\r\n    }\r\n\r\n    getAgeFactor( age ) {\r\n        if (age <= this.ageOffset) return 0;\r\n        if (age >= this.ageOffset + this.length) return 1;\r\n        return (age - this.ageOffset) / this.length;\r\n    }\r\n\r\n    getOffsetPoint( x, y ) {\r\n        if (!x) {\r\n            if (!y) return this.base;\r\n            if (y==1) return this.top;\r\n            return math.fromAngle( this.angle, this.length * y, this.base[0], this.base[1] );\r\n        }\r\n\r\n        const dir = this.angle < 0 ? 1 : -1;\r\n\r\n        if (!y) {\r\n            return math.fromAngle( this.bottomAngle + 90*dir, this.bottomWidth/2 * x, this.base[0], this.base[1] );\r\n        }\r\n\r\n        if (y==1) {\r\n            return math.fromAngle( this.topAngle + 90*dir, this.topWidth/2 * x, this.top[0], this.top[1] );\r\n        }\r\n\r\n        const l1 = [\r\n            math.fromAngle( this.bottomAngle + 90*dir, this.bottomWidth/2, this.base[0], this.base[1] ),\r\n            math.fromAngle( this.topAngle + 90*dir, this.topWidth/2, this.top[0], this.top[1] )\r\n        ];\r\n        const l2 = [\r\n            math.fromAngle( this.bottomAngle + 90*dir, -this.bottomWidth/2, this.base[0], this.base[1] ),\r\n            math.fromAngle( this.topAngle + 90*dir, -this.topWidth/2, this.top[0], this.top[1] )\r\n        ];\r\n        const l3 = [\r\n            math.pointOnLine( l1[0], l1[1], y ),\r\n            math.pointOnLine( l2[0], l2[1], y ),\r\n        ];\r\n\r\n        x = 1 - (x/2 + .5);\r\n\r\n        return math.pointOnLine( l3[0], l3[1], x );\r\n    }\r\n}\r\n\r\nclass Leaf {\r\n    constructor( segment, { angle, length, handles, style, xOffset, yOffset } ) {\r\n        const base = segment.getOffsetPoint( xOffset, yOffset );\r\n        this.base = base;\r\n        this.pBase = prc( base );\r\n\r\n        this.angle = angle;\r\n        this.length = length;\r\n        this.handles = handles;\r\n\r\n        this.top = math.fromAngle( angle, length, base[0], base[1] );\r\n\r\n        this.ageOffset = segment.ageOffset + segment.length * yOffset;\r\n\r\n        this.style = style;\r\n\r\n        this.bbox = this.getBoundingBox();\r\n    }\r\n\r\n    getPoints( age ) {\r\n        const ageFactor = this.getAgeFactor( age );\r\n        if (!ageFactor) return;\r\n\r\n        let top = this.top;\r\n        if (ageFactor < 1) {\r\n            top = math.fromAngle( this.angle, this.length * ageFactor, this.base[0], this.base[1] );\r\n        }\r\n\r\n        const curves = this.getCurves( top, ageFactor, precision );\r\n\r\n        top = prc( top );\r\n\r\n        return [\r\n            'M', this.pBase,\r\n            'C', curves.up[0], curves.up[1], top,\r\n            'C', curves.down[0], curves.down[1], this.pBase\r\n        ];\r\n    }\r\n\r\n    getBoundingBox() {\r\n        const c = this.getCurves( this.top, 1, false );\r\n        const bb = new BBox(bezierCurveBoundingBox(\r\n            this.base[0], this.base[1],\r\n            c.up[0][0], c.up[0][1],\r\n            c.up[1][0], c.up[1][1],\r\n            this.top[0], this.top[1],\r\n        ));\r\n\r\n        bb.addBBox(bezierCurveBoundingBox(\r\n            this.top[0], this.top[1],\r\n            c.down[0][0], c.down[0][1],\r\n            c.down[1][0], c.down[1][1],\r\n            this.base[0], this.base[1],\r\n        ));\r\n\r\n        if (this.style['stroke-width']) bb.expand( this.style['stroke-width'] / 2 );\r\n\r\n        return bb;\r\n    }\r\n\r\n    getCurves( top, ageFactor, precision ) {\r\n        const bha = this.handles.bottomAngle;\r\n        const bhl = this.handles.bottomLength * ageFactor;\r\n        const tha = this.handles.topAngle;\r\n        const thl = this.handles.topLength * ageFactor;\r\n\r\n        return {\r\n            up: [\r\n                math.fromAngle( this.angle + bha, this.length * bhl, this.base[0], this.base[1], '', precision ),\r\n                math.fromAngle( this.angle + tha, this.length * thl, top[0], top[1], '', precision ),\r\n            ],\r\n            down: [\r\n                math.fromAngle( this.angle - tha, this.length * thl, top[0], top[1], '', precision ),\r\n                math.fromAngle( this.angle - bha, this.length * bhl, this.base[0], this.base[1], '', precision ),\r\n            ],\r\n        };\r\n    }\r\n\r\n    getAgeFactor( age ) {\r\n        if (age <= this.ageOffset) return 0;\r\n        if (age >= this.ageOffset + this.length) return 1;\r\n        return (age - this.ageOffset) / this.length;\r\n    }\r\n}\r\n\r\nclass Branches {\r\n    constructor() {\r\n        this.segments = [];\r\n        this.leaves = [];\r\n    }\r\n\r\n    addSegment( branchNum, segment ) {\r\n        let branch = this.segments[ branchNum ];\r\n        if (!branch) {\r\n            branch = [];\r\n            this.segments[ branchNum ] = branch;\r\n        }\r\n        branch.push( segment );\r\n    }\r\n    addLeaf( branchNum, leaf ) {\r\n        let branch = this.leaves[ branchNum ];\r\n        if (!branch) {\r\n            branch = [];\r\n            this.leaves[ branchNum ] = branch;\r\n        }\r\n        branch.push( leaf );\r\n    }\r\n\r\n    getArray() {\r\n        let ret = [];\r\n        for (let i=0; i<this.segments.length; i++) {\r\n            ret = ret.concat( this.segments[ i ] || [] );\r\n            ret = ret.concat( this.sortLeaves( this.leaves[ i ] ) );\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    sortLeaves( a ) {\r\n        if (!a) return [];\r\n\r\n        return a.sort((l0,l1) => {\r\n            if (l1.bbox.containsPoint( l0.base[0], l0.base[1], true )) {\r\n                return -1;\r\n            }\r\n\r\n            if (l0.bbox.containsPoint( l1.base[0], l1.base[1], true )) {\r\n                return 1;\r\n            }\r\n\r\n            const d0 = math.distance( l0.base, [0,0] );\r\n            const d1 = math.distance( l1.base, [0,0] );\r\n            return d1 - d0;\r\n        });\r\n    }\r\n}\r\n\r\nclass PlantBody {\r\n    constructor( genus ) {\r\n        this.genus = genus;\r\n    }\r\n\r\n    init() {\r\n        this.genus.reset();\r\n\r\n        const tree = this.getTree();\r\n        tree.grow();\r\n\r\n        this.bbox = new BBox({\r\n            x0: -this.genus.width/2,\r\n            x1: this.genus.width/2,\r\n            y0: -this.genus.height,\r\n            y1: 0,\r\n        });\r\n\r\n        const branches = new Branches;\r\n        const points = new Map();\r\n        let maxAge = 0;\r\n\r\n        const getBasePoint = node => {\r\n            if (!node.prev) {\r\n                const p = [ node.attr.x || 0, 0 ];\r\n                this.bbox.addPoint( p[0], p[1] );\r\n                return p;\r\n            }\r\n            else if (node.pos.isOffshoot) {\r\n                const p = points.get( node.prev );\r\n                if (p) return p;\r\n\r\n                const rp = [ node.prev.attr.x || 0, 0 ];\r\n                points.set( node.prev, rp );\r\n                this.bbox.addPoint( rp[0], rp[1] );\r\n                return rp;\r\n            }\r\n\r\n            return points.get( node );\r\n        }\r\n\r\n        tree.eachSegment( (n0,n1) => {\r\n\r\n            const base = getBasePoint( n0 );\r\n            const style = this.genus.getSegmentStyle( n0, n1 );\r\n            const s = new BranchSegment( base, style, n0, n1 );\r\n\r\n            points.set( n1, s.top );\r\n            this.bbox.addBBox( s.bbox );\r\n            branches.addSegment( n0.pos.branchNum, s );\r\n\r\n            this.genus.getLeaves( n0, n1 ).map( (cfg, i) => {\r\n                const leaf = new Leaf( s, cfg );\r\n\r\n                this.bbox.addBBox( leaf.bbox );\r\n                branches.addLeaf( n0.pos.branchNum, leaf );\r\n\r\n                if (leaf.ageOffset + leaf.length > maxAge) maxAge = leaf.ageOffset + leaf.length;\r\n            });\r\n\r\n            if (n1.attr.totalLength > maxAge) maxAge = n1.attr.totalLength;\r\n\r\n        });\r\n\r\n        this.parts = branches.getArray();\r\n        this.maxAge = maxAge;\r\n\r\n        // make sure the plant is centered\r\n        const bboxX = Math.max( Math.abs( this.bbox.x0 ), Math.abs( this.bbox.x1 ) );\r\n        this.bbox.x0 = -bboxX;\r\n        this.bbox.x1 = bboxX;\r\n\r\n        this.yFactor = (this.bbox.height / -this.bbox.y0) || 1;\r\n    }\r\n\r\n    getTree() {\r\n        const getNodeAttr = ( pos, prev, attr ) => {\r\n            return {\r\n                width: this.genus.getNodeWidth( pos, prev, attr ),\r\n                angle: prev ? this.genus.getSegmentAngle( pos, prev, attr ) : 0,\r\n                length: pos.isLast ? (prev ? prev.attr.length : 0) : this.genus.getSegmentLength( pos, prev, attr ),\r\n                totalLength: prev ? ((pos.isOffshoot ? 0 : prev.attr.length) + prev.attr.totalLength) : 0,\r\n            };\r\n        };\r\n        const getOffshoots = node => {\r\n            if (!node) return this.genus.getRoots();\r\n            return this.genus.getOffshoots( node );\r\n        };\r\n\r\n        return new ProcTree( this.genus.maxBranchNum, getNodeAttr, getOffshoots );\r\n    }\r\n\r\n    render( age, colors=true, svg ) {\r\n        age *= this.maxAge;\r\n\r\n        for (const p of this.parts) {\r\n            const points = p.getPoints( age );\r\n            if (!points) continue;\r\n\r\n            let style = {}, add = {};\r\n\r\n            if (colors) {\r\n                style = p.style;\r\n                add = {};\r\n                if (style['stroke-width']) add['stroke-width'] = prc( style['stroke-width'] );\r\n            }\r\n\r\n            const set = Object.assign( {}, style, add, {\r\n                d: html.svg.compilePathDescription( points ),\r\n            });\r\n            svg.appendChild( html.svg.node( 'path', set ) );\r\n        }\r\n    }\r\n\r\n    getSvg( age, colors ) {\r\n        if (!this.segments) this.init();\r\n\r\n        const svg = html.svg.root({\r\n            class: 'svg-plant-body',\r\n            viewBox: this.bbox.withPrecision( precision ).viewBox,\r\n            preserveAspectRatio: 'xMidYMax meet',\r\n        });\r\n\r\n        this.render( age, colors, svg );\r\n\r\n        return svg;\r\n    }\r\n}\r\n\r\nexport { PlantBody };","import { plantPotSvg } from \"./plantPotSvg\";\r\nimport { PlantBody } from \"./PlantBody\";\r\nimport { html } from \"../util/util\";\r\n\r\nclass SvgPlant {\r\n\r\n    constructor( genus, cfg ) {\r\n        this._cfg = {\r\n            color: true,\r\n            age: 1,\r\n            potSize: .3,\r\n            potPathAttr: { fill: '#fc7', stroke: '#da5' },\r\n        };\r\n        if (typeof cfg == 'object') {\r\n            for (let key in this._cfg) {\r\n                if (key in cfg) this[ key ] = cfg[ key ];\r\n            }\r\n        }\r\n\r\n        this.body = new PlantBody( genus );\r\n    }\r\n\r\n    get seed() {\r\n        return this.body.genus.rngSeed;\r\n    }\r\n\r\n    get color() { return this._cfg.color; }\r\n    set color( v ) {\r\n        v = !!v;\r\n        if (v != this._cfg.color) {\r\n            this._cfg.color = v;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    get age() { return this._cfg.age; }\r\n    set age( v ) {\r\n        v = Math.max( 0, Math.min( v, 1 ));\r\n        if (v != this._cfg.age) {\r\n            this._cfg.age = v;\r\n            this.update( true, false );\r\n        }\r\n    }\r\n\r\n    get potSize() { return this._cfg.potSize; }\r\n    set potSize( v ) {\r\n        v = Math.max( 0, Math.min( v, 1 ));\r\n        if (v != this._cfg.potSize) {\r\n            this._cfg.potSize = v;\r\n            this.update( false, true );\r\n        }\r\n    }\r\n\r\n    get potPathAttr() { return this._cfg.potPathAttr; }\r\n    set potPathAttr( v ) {\r\n        if (v != this._cfg.potPathAttr) {\r\n            this._cfg.potPathAttr = v;\r\n            this.update( false, true );\r\n        }\r\n    }\r\n\r\n    update( body=true, pot=true ) {\r\n        if (body) this._bodySvgElement = null;\r\n        if (pot) this._potSvgElement = null;\r\n        this.updateSvgElement();\r\n    }\r\n\r\n    get svgElement() {\r\n        if (!this._svgElement) {\r\n            this._svgElement = this.getSvgElement();\r\n        }\r\n        return this._svgElement;\r\n    }\r\n    updateSvgElement() {\r\n        const svg = this._svgElement;\r\n        if (!svg) return;\r\n\r\n        svg.innerHTML = this.getSvgElement().innerHTML;\r\n    }\r\n    getSvgElement() {\r\n        const svg = html.svg.root({\r\n            class: 'svg-plant',\r\n            viewBox: '0 0 1 1',\r\n            preserveAspectRatio: 'xMidYMax meet',\r\n        });\r\n\r\n        const place = ( el, x, y, w, h ) => {\r\n            el.setAttribute( 'x', x );\r\n            el.setAttribute( 'y', y );\r\n            el.setAttribute( 'width', w );\r\n            el.setAttribute( 'height', h );\r\n        };\r\n\r\n        const pot = this.potSvgElement;\r\n        const body = this.bodySvgElement;\r\n\r\n        if (this._cfg.potSize >= 1) {\r\n            svg.appendChild( pot );\r\n            place( pot, 0, 0, 1, 1 );\r\n        }\r\n        else if (this._cfg.potSize <= 0) {\r\n            svg.appendChild( body );\r\n            place( body, 0, 0, 1, 1 );\r\n        }\r\n        else {\r\n            svg.appendChild( pot );\r\n            place( pot, 0, 1 - this._cfg.potSize, 1, this._cfg.potSize );\r\n            svg.appendChild( body );\r\n\r\n            // with high contrast there is a slight gap visible, between pot and plant.\r\n            // without color this is way more noticable, and the slight overlap is invisible.\r\n            const overlap = this._cfg.color ? 0 : .001;\r\n\r\n            let height;\r\n            const bodyHeight = 1 - this._cfg.potSize;\r\n\r\n            if (this.body.yFactor > 1) {\r\n                // this means the plant has points \"below the fold\"\r\n                // or: points that overlap the potsize area\r\n                // so the height of \"1 - this._cfg.potSize\" needs to be expanded accordingly\r\n\r\n                const wrapperAR = 1 / bodyHeight;\r\n                const aboveFoldBodyAR = this.body.bbox.width / -this.body.bbox.y0;\r\n                if (wrapperAR < aboveFoldBodyAR) {\r\n                    // the plantbody is scaled down, to fit the viewbox's width\r\n                    // the yFactor now needs to be applied only to the plants scaled down height\r\n                    // not the full available area of \"1 - this._cfg.potSize\"\r\n\r\n                    const scaledBodyHeight = -this.body.bbox.y0 / this.body.bbox.width;\r\n                    height = bodyHeight + (scaledBodyHeight * this.body.yFactor - scaledBodyHeight);\r\n                }\r\n                else {\r\n                    height = bodyHeight * this.body.yFactor;\r\n                }\r\n            }\r\n            else {\r\n                height = bodyHeight;\r\n            }\r\n\r\n            place( body, 0, 0, 1, height + overlap );\r\n\r\n        }\r\n\r\n        return svg;\r\n    }\r\n\r\n    get potSvgElement() {\r\n        if (this._cfg.potSize == 0) return null;\r\n\r\n        if (!this._potSvgElement) {\r\n            this._potSvgElement = this.getPotSvgElement();\r\n        }\r\n        return this._potSvgElement;\r\n    }\r\n    getPotSvgElement() {\r\n        if (!this._cfg.color) return plantPotSvg();\r\n        return plantPotSvg( this._cfg.potPathAttr );\r\n    }\r\n\r\n    get bodySvgElement() {\r\n        if (this._cfg.potSize == 1) return null;\r\n\r\n        if (!this._bodySvgElement) {\r\n            this._bodySvgElement = this.getBodySvgElement();\r\n        }\r\n        return this._bodySvgElement;\r\n    }\r\n    getBodySvgElement() {\r\n        return this.body.getSvg( this._cfg.age, this._cfg.color );\r\n    }\r\n\r\n    animate( fromAge=0, toAge=1, durationMs=3000 ) {\r\n        this.cancelAnimation();\r\n\r\n        this._animation = {\r\n            fromAge,\r\n            toAge,\r\n            ageSpan: toAge - fromAge,\r\n            currentAge: fromAge,\r\n\r\n            durationMs,\r\n\r\n            nextAnimationFrame: undefined,\r\n\r\n            paused: true,\r\n        };\r\n\r\n        this.resumeAnimation();\r\n    }\r\n    pauseAnimation() {\r\n        if (this._animation) {\r\n            cancelAnimationFrame( this._animation.nextAnimationFrame );\r\n            this._animation.paused = true;\r\n        }\r\n    }\r\n    cancelAnimation() {\r\n        this.pauseAnimation();\r\n        this._animation = null;\r\n    }\r\n    resumeAnimation() {\r\n        const a = this._animation;\r\n        if (!a || !a.paused) return;\r\n        a.paused = false;\r\n\r\n        this.age = a.currentAge;\r\n\r\n        const acl = t => t<0 ? 0 : t>1 ? 1 : Math.sin( (t - .5) * Math.PI ) * .5 + .5;\r\n        const aclInv = t => t<0 ? 0 : t>1 ? 1 : Math.asin( t * 2 - 1 ) / Math.PI + .5;\r\n\r\n        let t0;\r\n        const upd = ts => {\r\n            if (!t0) {\r\n                const f = (a.currentAge - a.fromAge) / a.ageSpan;\r\n                t0 = ts - aclInv( f ) * a.durationMs;\r\n                a.nextAnimationFrame = requestAnimationFrame( upd );\r\n            }\r\n            else {\r\n                const f = acl( Math.min( 1, (ts - t0) / a.durationMs ) );\r\n\r\n                if (f < 1) {\r\n                    this._cfg.age = a.fromAge + f * a.ageSpan;\r\n                    a.currentAge = this._cfg.age;\r\n\r\n                    this._bodySvgElement = null;\r\n                    this.updateSvgElement();\r\n\r\n                    a.nextAnimationFrame = requestAnimationFrame( upd );\r\n                }\r\n                else {\r\n                    this.age = a.toAge;\r\n                    this._animation = null;\r\n                }\r\n            }\r\n        };\r\n\r\n        a.nextAnimationFrame = requestAnimationFrame( upd );\r\n    }\r\n}\r\n\r\nexport { SvgPlant };","import { rng } from \"../util/util\";\r\n\r\nclass BaseGenus {\r\n\r\n    constructor( rngSeed ) {\r\n        this.rng = rng( rngSeed );\r\n\r\n        this.width = 4;\r\n        this.height = 4;\r\n        this.maxBranchNum = 1;\r\n\r\n        this.segmentStyle = {\r\n            fill: '#161',\r\n            stroke: '#041',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 60,\r\n            bottomLength: .6,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    static get genusName() {\r\n        const cn = this.name;\r\n        return cn.substring( 0, cn.length - 5 );\r\n    }\r\n    get genusName() {\r\n        const cn = this.constructor.name;\r\n        return cn.substring( 0, cn.length - 5 );\r\n    }\r\n    get rngSeed() {\r\n        return this.rng.seed;\r\n    }\r\n    reset() {\r\n        this.rng.reset();\r\n    }\r\n\r\n    getRoots() {\r\n        return [\r\n            {\r\n                n: 3,\r\n                attr: { x: 0, segmentAngle: 0 }\r\n            },\r\n        ];\r\n    }\r\n    getOffshoots( node ) {\r\n        if (node.pos.isLast || node.pos.num==0) return [];\r\n\r\n        return [\r\n            {\r\n                n: 1,\r\n                attr: { segmentAngle: node.attr.angle - 60 }\r\n            },\r\n            {\r\n                n: 1,\r\n                attr: { segmentAngle: node.attr.angle + 60 }\r\n            },\r\n        ];\r\n    }\r\n\r\n    getNodeWidth( _pos, _prev, _attr ) {\r\n        return .1;\r\n    }\r\n    getSegmentLength( _pos, _prev, _attr ) {\r\n        return 1;\r\n    }\r\n    getSegmentAngle( pos, prev, _attr ) {\r\n        if (pos.isOffshoot) return prev.attr.angle;\r\n        return prev.attr.segmentAngle !== undefined ? prev.attr.segmentAngle : prev.attr.angle;\r\n    }\r\n\r\n    getSegmentStyle( _node0, _node1 ) {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0, n1 ) {\r\n        if (!n1.pos.isLast) return [];\r\n\r\n        return [\r\n            {\r\n                angle: n1.attr.angle,\r\n                length: 1,\r\n                handles: this.leafCurveHandles,\r\n                style: this.leafStyle,\r\n\r\n                xOffset: 0,\r\n                yOffset: .95,\r\n            }\r\n        ];\r\n    }\r\n};\r\n\r\nexport { BaseGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper } from \"../util/util\";\r\n\r\nclass BushyPlantGenus extends BaseGenus {\r\n\r\n    constructor( rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 6.1;\r\n        this.height = 6.6;\r\n        this.maxBranchNum = 3;\r\n\r\n        this.segmentStyle = {\r\n            fill: '#400',\r\n            stroke: '#931',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 60,\r\n            bottomLength: .6,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return [\r\n            {\r\n                n: this.rng.intRange( 4, 6 ),\r\n                attr: plantHelper.rootPosAngle( this.rng, .5, 6 ),\r\n            },\r\n        ];\r\n    }\r\n    getOffshoots( node ) {\r\n        if (node.pos.isLast || node.pos.num==0) return [];\r\n\r\n        const p = .5 * (.5 + .5 * node.pos.numFactor) * (.5 + .5 * node.pos.branchFactor);\r\n        const a = [];\r\n\r\n        const getNodeCount = () => 4 - node.pos.branchNum - this.rng.test( .6, 1, 0 );\r\n\r\n        if (this.rng.test( p )) a.push({\r\n            n: getNodeCount(),\r\n            attr: {\r\n                segmentAngle: node.attr.angle + this.rng.range( 25, 60 ),\r\n            }\r\n        });\r\n\r\n        if (this.rng.test( p )) a.push({\r\n            n: getNodeCount(),\r\n            attr: {\r\n                segmentAngle: node.attr.angle + this.rng.range( -60, -25 ),\r\n            }\r\n        });\r\n\r\n        return a;\r\n    }\r\n\r\n    getNodeWidth( pos, prev, _attr ) {\r\n        if (pos.isOffshoot && prev) return prev.attr.width;\r\n        return .1 * (.1 + .9 * pos.branchFactor);\r\n    }\r\n    getSegmentLength( pos, prev, _attr ) {\r\n        if (!prev) return 1;\r\n        if (!pos.isOffshoot && pos.branchNum>0) return prev.attr.length * .75;\r\n        if (!pos.isOffshoot) return prev.attr.length;\r\n\r\n        const f = .2 + .8 * (prev.branchRoot.prev ? prev.branchRoot.prev.pos.numFactor : 1);\r\n        return prev.attr.length * f;\r\n    }\r\n    getSegmentAngle( pos, prev, _attr ) {\r\n        if (pos.branchNum>0) return plantHelper.nextAngle( this.rng, pos, prev, 16, true );\r\n        return plantHelper.nextAngle( this.rng, pos, prev, 8, true );\r\n    }\r\n\r\n    getSegmentStyle( _node0, _node1 ) {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0, n1 ) {\r\n        if (n1.pos.branchNum==0 && n1.pos.num<2) return [];\r\n\r\n        const leaves = [];\r\n\r\n        const addLeaf = avf => {\r\n            leaves.push({\r\n                angle: n1.attr.angle + (avf ? (avf * this.rng.range( 20, 40 )) : this.rng.range( -10, 10 )),\r\n                length: this.rng.range( .5, .75 ),\r\n                handles: this.leafCurveHandles,\r\n                style: this.leafStyle,\r\n\r\n                xOffset: avf ? -avf * this.rng.range( 0, .5) : 0,\r\n                yOffset: avf ? this.rng.range( .3, .7 ) : .95,\r\n            });\r\n        };\r\n\r\n        if (n1.pos.isLast && this.rng.test( .5 )) addLeaf( 0 );\r\n\r\n        if (this.rng.test( .5 )) addLeaf( 1 );\r\n        if (this.rng.test( .5 )) addLeaf( -1 );\r\n\r\n        return leaves;\r\n    }\r\n};\r\n\r\nexport { BushyPlantGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper } from \"../util/util\";\r\n\r\nclass DragonTreeGenus extends BaseGenus {\r\n\r\n    constructor( rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 10.3;\r\n        this.height = 8.6;\r\n        this.maxBranchNum = 1;\r\n\r\n        this.segmentStyle = {\r\n            fill: '#400',\r\n            stroke: '#931',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 30,\r\n            bottomLength: .2,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return [\r\n            {\r\n                n: this.rng.intRange( 2, 4 ),\r\n                attr: plantHelper.rootPosAngle( this.rng, .5, 6 ),\r\n            },\r\n        ];\r\n    }\r\n    getOffshoots( node ) {\r\n        if (!node.pos.isLast) return [];\r\n\r\n        const p = .75;\r\n        const steps = { from: -60, to: 60, step: 30 };\r\n        const offshoots = plantHelper.repeat( this.rng, steps, p, angle => {\r\n            return {\r\n                n: 2,\r\n                attr: {\r\n                    segmentAngle: node.attr.angle + angle + this.rng.range( -10, 10 ),\r\n                }\r\n            };\r\n        });\r\n\r\n        if (!offshoots.length) offshoots.push({\r\n            n: 2,\r\n            attr: {\r\n                segmentAngle: this.rng.range( -60, 60 ),\r\n            }\r\n        });\r\n\r\n        return offshoots;\r\n    }\r\n\r\n    getNodeWidth( pos, prev, _attr ) {\r\n        if (pos.isOffshoot && prev) return prev.attr.width;\r\n        if (pos.branchNum == 1) return this.rng.range( .2, .3 );\r\n        return this.rng.range( .4, .6 );\r\n    }\r\n    getSegmentLength( pos, _prev, _attr ) {\r\n        if (pos.branchNum == 1) return this.rng.range( .2, .8 );\r\n        return this.rng.range( .5, 1.5 );\r\n    }\r\n    getSegmentAngle( pos, prev, _attr ) {\r\n        return plantHelper.nextAngle( this.rng, pos, prev, 8, true );\r\n    }\r\n\r\n    getSegmentStyle( _node0, _node1 ) {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0, n1 ) {\r\n        if (!n1.pos.isLast || n1.pos.branchNum != 1) return [];\r\n\r\n        return plantHelper.repeat( this.rng, { from: -75, to: 75, step: 10 }, .5, angle => {\r\n            const av = this.rng.range( -5, 5 );\r\n            const sv = this.rng.range( -.7, .7 );\r\n\r\n            return {\r\n                angle: n1.attr.angle + angle + av,\r\n                length: 3.5 + sv,\r\n                handles: this.leafCurveHandles,\r\n                style: this.leafStyle,\r\n\r\n                xOffset: this.rng.range( -.2, .2 ),\r\n                yOffset: this.rng.range( .8, .95 ),\r\n            };\r\n        });\r\n    }\r\n};\r\n\r\nexport { DragonTreeGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper } from \"../util/util\";\r\n\r\nclass ZamiaGenus extends BaseGenus {\r\n\r\n    constructor( rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 3.6;\r\n        this.height = 3.5;\r\n        this.maxBranchNum = 0;\r\n\r\n        this.segmentStyle = {\r\n            stroke: '#041',\r\n            fill: '#161',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .01,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 24,\r\n            bottomLength: .6,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return plantHelper.repeat( this.rng, 1, 3, () => {\r\n            return {\r\n                n: this.rng.intRange( 5, 7 ),\r\n                attr: {\r\n                    ... plantHelper.rootPosAngle( this.rng, .25, 15 ),\r\n                    branchArchAngle: this.rng.ranges([ -30, -5 ], [ 5, 30 ]),\r\n                }\r\n            };\r\n        });\r\n    }\r\n    getOffshoots( _node ) {\r\n        return [];\r\n    }\r\n\r\n    getNodeWidth( _pos, prev, _attr ) {\r\n        if (!prev) return .1;\r\n        return prev.attr.width * .8;\r\n    }\r\n    getSegmentLength( _pos, prev, _attr ) {\r\n        if (!prev) return this.rng.range( .4, 1 );\r\n        return prev.attr.length * this.rng.range( .6, .9 );\r\n    }\r\n    getSegmentAngle( pos, prev, _attr ) {\r\n        return plantHelper.archingBranchAngle( this.rng, pos, prev, 5, .6 );\r\n    }\r\n\r\n    getSegmentStyle( _node0, _node1 ) {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0, n1 ) {\r\n        const length = n1.treeRoot.attr.length * 1.2 * (.5 + .5 * Math.sin( Math.PI * n1.pos.numFactor ));\r\n        const angles = n1.pos.isLast ? [ -70, -30, 30, 70 ] : [ -70, 70 ];\r\n\r\n        return plantHelper.repeat( this.rng, angles, .89, angle => {\r\n            const av = this.rng.range( -6, 6 );\r\n            const lv = this.rng.range( -.1, .1 );\r\n            const lf = Math.abs( angle ) < 70 ? .9 : 1;\r\n\r\n            return {\r\n                angle: n1.attr.angle + angle + av,\r\n                length: length * lf + lv,\r\n                handles: this.leafCurveHandles,\r\n                style: this.leafStyle,\r\n\r\n                xOffset: 0,\r\n                yOffset: 1,\r\n            };\r\n        });\r\n    }\r\n};\r\n\r\nexport { ZamiaGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper } from \"../util/util\";\r\n\r\nclass PileaGenus extends BaseGenus {\r\n\r\n    constructor( rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 4.6;\r\n        this.height = 4.1;\r\n        this.maxBranchNum = 1;\r\n\r\n        this.segmentStyle = {\r\n            stem: {\r\n                stroke: '#931',\r\n                fill: '#400',\r\n                'stroke-width': .0075,\r\n            },\r\n            offshoot: {\r\n                stroke: '#931',\r\n                fill: '#400',\r\n                'stroke-width': .0075,\r\n            },\r\n            branch: {\r\n                stroke: '#041',\r\n                fill: '#161',\r\n                'stroke-width': .0075,\r\n            },\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 80,\r\n            bottomLength: 1,\r\n            topAngle: 100,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return [{\r\n            n: this.rng.intRange( 0, 3 ),\r\n            attr: plantHelper.rootPosAngle( this.rng, .25, 8 ),\r\n        }];\r\n    }\r\n    getOffshoots( node ) {\r\n        if (node.pos.isLast) return plantHelper.repeat( this.rng, 1, 12, () => {\r\n            return {\r\n                n: this.rng.intRange( 3, 6 ),\r\n                attr: {\r\n                    segmentAngle: node.attr.angle + this.rng.range( -40, 40 ),\r\n                    branchArchAngle: this.rng.ranges([ -40, -5 ], [ 5, 40 ]),\r\n                }\r\n            };\r\n        });\r\n\r\n        if (node.pos.num) return plantHelper.repeat( this.rng, 0, 4, () => {\r\n            return {\r\n                n: this.rng.intRange( 2, 3 ),\r\n                attr: {\r\n                    segmentAngle: node.attr.angle + this.rng.ranges([ -80, -40 ], [ 40, 80 ]),\r\n                    branchArchAngle: this.rng.ranges([ -40, -5 ], [ 5, 40 ]),\r\n                }\r\n            };\r\n        });\r\n\r\n        return [];\r\n    }\r\n\r\n    getNodeWidth( pos, prev, _attr ) {\r\n        if (pos.branchNum == 0) return this.rng.range( .1, .3 );\r\n        if (pos.isOffshoot) return prev.attr.width;\r\n        return this.rng.range( .05, .1 );\r\n    }\r\n    getSegmentLength( pos, prev, _attr ) {\r\n        if (!prev) return this.rng.range( .6, 1.2 );\r\n        if (pos.branchNum == 0) return prev.attr.length * .9;\r\n        if (pos.isOffshoot) return this.rng.range( .1, .2 );\r\n        if (pos.num == 1) {\r\n            if (prev.branchRoot.pos.isLast) return this.rng.range( .6, 1.2 );\r\n            return this.rng.range( .3, .6 );\r\n        }\r\n        return prev.attr.length * .75;\r\n    }\r\n    getSegmentAngle( pos, prev, _attr ) {\r\n        if (pos.branchNum == 0) return this.rng.range( -8, 8 );\r\n        return plantHelper.archingBranchAngle( this.rng, pos, prev, 5, .1 );\r\n    }\r\n\r\n    getSegmentStyle( node0, _node1 ) {\r\n        if (node0.pos.branchNum == 0) return this.segmentStyle.stem;\r\n        if (node0.pos.isOffshoot) return this.segmentStyle.offshoot;\r\n        return this.segmentStyle.branch;\r\n    }\r\n\r\n    getLeaves( n0, n1 ) {\r\n        if (!n1.pos.isLast || n1.pos.branchNum != 1) return [];\r\n\r\n        const length = (n1.treeRoot.attr.length || 1) * this.rng.range( .4, 1.5 );\r\n        const angle = plantHelper.segmentAngle( n0 ) + this.rng.range( -8, 8 );\r\n\r\n        return [{\r\n            angle,\r\n            length,\r\n            handles: this.leafCurveHandles,\r\n            style: this.leafStyle,\r\n\r\n            xOffset: 0,\r\n            yOffset: .96,\r\n        }];\r\n    }\r\n};\r\n\r\nexport { PileaGenus };","import { SvgPlant } from \"../Plant/SvgPlant\";\r\n\r\nconst testPlantBodySize = (genus, n=1000) => {\r\n    const avg = { width: 0, height: 0 };\r\n    const widths = [];\r\n    const heights = [];\r\n\r\n    for (let i=0; i<n; i++) {\r\n        const p = (new SvgPlant( new genus )).body;\r\n        p.genus.width = 0;\r\n        p.genus.height = 0;\r\n        p.init();\r\n\r\n        avg.width += p.bbox.width;\r\n        avg.height += p.bbox.height;\r\n\r\n        widths.push( p.bbox.width );\r\n        heights.push( p.bbox.height );\r\n    }\r\n\r\n    widths.sort( (a,b) => a - b );\r\n    heights.sort( (a,b) => a - b );\r\n\r\n    return {\r\n        avg: {\r\n            width: avg.width / n,\r\n            height: avg.height / n,\r\n        },\r\n        q( q ) {\r\n            const i = Math.max( 0, Math.min( n-1, Math.round( q / 100 * (n-1) ) ) );\r\n            console.log( i );\r\n            return {\r\n                width: widths[ i ],\r\n                height: heights[ i ],\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nconst findSeed = (genus, test, timeoutMs=10*1000) => {\r\n    let cancel = false, n = 0, seed;\r\n    const t0 = Date.now();\r\n\r\n    const to = setTimeout(() => {\r\n        cancel = true;\r\n    }, timeoutMs );\r\n\r\n    while (true) {\r\n        const p = (new SvgPlant( new genus )).body;\r\n        p.genus.width = 0;\r\n        p.genus.height = 0;\r\n        p.init();\r\n        n++;\r\n\r\n        if (test( p )) {\r\n            clearTimeout( to );\r\n            seed = p.genus.rngSeed;\r\n            console.log( 'Seed found!', seed );\r\n            break;\r\n        }\r\n\r\n        if (cancel) {\r\n            const t = Math.round( (Date.now() - t0) / 1000 );\r\n            console.log( 'No seed was found' );\r\n            break;\r\n        }\r\n    }\r\n\r\n    const t = ((Date.now() - t0) / 1000 ).toFixed( 2 );\r\n    console.log( 'findSeed finished after ' + t + ' seconds and ' + n + ' tries.' );\r\n\r\n    return seed;\r\n};\r\n\r\nconst testPerformance = (genus, durationMs=10*1000) => {\r\n    const t0 = Date.now();\r\n    let n = 0;\r\n\r\n    while (true) {\r\n        const p = (new SvgPlant( new genus )).body;\r\n        p.genus.width = 0;\r\n        p.genus.height = 0;\r\n        p.init();\r\n        n++;\r\n\r\n        if (Date.now() - t0 > durationMs) break;\r\n    }\r\n\r\n    const ms = Date.now() - t0;\r\n    const s = ms / 1000;\r\n\r\n    console.group( genus.genusName + ' Performance Test' );\r\n    console.log( 'created ' + n + ' plants in ' + s.toFixed( 2 ) + ' seconds' );\r\n    console.log( (n/s).toFixed(2) + ' plants/sec' );\r\n    console.log( (ms/n).toFixed(2) + ' ms/plant' );\r\n    console.groupEnd();\r\n\r\n    return;\r\n}\r\n\r\nexport {\r\n    testPlantBodySize,\r\n    findSeed,\r\n    testPerformance,\r\n}","\r\nimport { SvgPlant } from './Plant/SvgPlant';\r\nimport { BaseGenus } from './Genera/BaseGenus';\r\nimport { BushyPlantGenus } from './Genera/BushyPlantGenus';\r\nimport { DragonTreeGenus } from './Genera/DragonTreeGenus';\r\nimport { ZamiaGenus } from './Genera/ZamiaGenus';\r\nimport { PileaGenus } from './Genera/PileaGenus';\r\nimport * as DevTools from './util/DevTools';\r\nimport { plantHelper } from './util/util';\r\n\r\nconst Genera = {\r\n    'BushyPlant': BushyPlantGenus,\r\n    'DragonTree': DragonTreeGenus,\r\n    'Zamia': ZamiaGenus,\r\n    'Pilea': PileaGenus,\r\n};\r\n\r\nexport {\r\n    SvgPlant,\r\n    Genera,\r\n    BaseGenus, BushyPlantGenus, DragonTreeGenus, ZamiaGenus, PileaGenus,\r\n\r\n    plantHelper,\r\n    DevTools,\r\n};"],"names":["stringify","const","let","i","RNG","offshoots","this","p","prototypeAccessors","f","super","q"],"mappings":"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"}