{"version":3,"file":"svg-plant.cjs.js","sources":["../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../src/util/util.ts","../src/Plant/plantPotSvg.ts","../src/util/bezierCurveBoundingBox.ts","../src/Plant/PlantBody.ts","../src/Plant/SvgPlant.ts","../src/Genera/BaseGenus.ts","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../src/Genera/BushyPlantGenus.ts","../src/Genera/DragonTreeGenus.ts","../src/Genera/ZamiaGenus.ts","../src/Genera/PileaGenus.ts","../src/util/DevTools.ts","../src/main.ts"],"sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import seedrandom from 'seedrandom';\r\nimport { attributeSet, pathDescriptionSegment, point, rngSeed } from '../types';\r\n\r\nconst html = {\r\n    node( tag: string, set?: attributeSet ): Element {\r\n        const node = document.createElement( tag );\r\n        html.attr( node, set );\r\n        return node;\r\n    },\r\n    nodeNS( tag: string, set: attributeSet, ns: string ): Element {\r\n        const node = document.createElementNS( ns, tag );\r\n        html.attr( node, set );\r\n        return node;\r\n    },\r\n    attr( node: Element, set: attributeSet = {} ): void {\r\n        for (let name in set) node.setAttribute( name, String( set[ name ] ) );\r\n    },\r\n\r\n    svg: {\r\n        root( set?: attributeSet ): SVGElement {\r\n            const svg = <SVGElement>html.svg.node( 'svg', set );\r\n            svg.setAttribute( 'xmlns', \"http://www.w3.org/2000/svg\" );\r\n            svg.setAttributeNS( \"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\" );\r\n            return svg;\r\n        },\r\n        node( tag: string, set?: attributeSet ): SVGElement {\r\n            const el = <SVGElement>html.nodeNS( tag, {}, \"http://www.w3.org/2000/svg\" );\r\n            html.attr( el, set );\r\n            return el;\r\n        },\r\n\r\n        compilePathDescription( points: pathDescriptionSegment[] ): string {\r\n            const d = [];\r\n\r\n            for (const p of points) {\r\n                if (p.length == 1) d.push( p );\r\n                else if (p.length == 2) d.push( p[0], p[1] );\r\n                else if (p.length == 3) d.push( p[0], p[1], p[2] );\r\n            }\r\n\r\n            return d.join( ' ' );\r\n        }\r\n    },\r\n};\r\n\r\nconst math = {\r\n    toRadians( degrees: number ): number {\r\n        return degrees * (Math.PI / 180);\r\n    },\r\n\r\n    fromAngle( point: point, angle: number, length: number, precision?:number ): point {\r\n        const a: point = [\r\n            Math.sin( math.toRadians( angle ) ) * length + point[0],\r\n            - Math.cos( math.toRadians( angle ) ) * length + point[1],\r\n        ];\r\n\r\n        if (precision) {\r\n            a[ 0 ] = Math.round( a[ 0 ] * precision );\r\n            a[ 1 ] = Math.round( a[ 1 ] * precision );\r\n        }\r\n\r\n        return a;\r\n    },\r\n\r\n    rectFromLine(\r\n        pointBottom: point, pointTop: point,\r\n        angleBottom: number, angleTop: number,\r\n        widthBottom: number, widthTop: number,\r\n        precision?: number\r\n    ): [ point, point, point, point ] {\r\n        widthBottom /= 2;\r\n        widthTop /= 2;\r\n        return [\r\n            math.fromAngle( pointBottom, angleBottom - 90, widthBottom, precision ),\r\n            math.fromAngle( pointTop, angleTop - 90, widthTop, precision ),\r\n            math.fromAngle( pointTop, angleTop + 90, widthTop, precision ),\r\n            math.fromAngle( pointBottom, angleBottom + 90, widthBottom, precision )\r\n        ];\r\n    },\r\n\r\n    pointOnLine( p1: point, p2: point, d: number ): point {\r\n        return [\r\n            p1[0] + d * (p2[0] - p1[0]),\r\n            p1[1] + d * (p2[1] - p1[1]),\r\n        ];\r\n    },\r\n\r\n    distance( p1: point, p2: point ): number {\r\n        const dx = p1[0] - p2[0];\r\n        const dy = p1[1] - p2[1];\r\n        return Math.sqrt( dx*dx + dy*dy );\r\n    }\r\n};\r\n\r\nconst plantHelper = {\r\n    rootPosAngle( rng: rng, xMax: number, maxAngle: number ) {\r\n        const x = rng.range( -xMax, xMax );\r\n        const f = Math.abs( x ) / xMax;\r\n        return {\r\n            x,\r\n            segmentAngle: maxAngle * f * (x < 0 ? -1 : 1),\r\n        };\r\n    },\r\n\r\n    segmentAngle( baseNode: node ): number {\r\n        if (baseNode.attr.segmentAngle !== undefined) return baseNode.attr.segmentAngle;\r\n        return baseNode.attr.angle;\r\n    },\r\n\r\n    nextAngle( rng: rng, pos: nodePos, prevNode: node, variance: number, alternate: boolean ): number {\r\n        if (pos.isOffshoot) return prevNode.attr.angle;\r\n\r\n        const pa = this.segmentAngle( prevNode );\r\n\r\n        if (alternate) {\r\n            const dir = pos.branchNum>0 ? 1 : prevNode.treeRoot.attr.x>=0 ? 1 : -1;\r\n            return pa + (prevNode.pos.num % 2 ? 1 : -1) * rng.range( 0, variance ) * dir;\r\n        }\r\n        else {\r\n            return pa + rng.range( -variance, variance );\r\n        }\r\n    },\r\n\r\n    archingBranchAngle( rng: rng, pos: nodePos, prevNode: node, variance: number, numAdjust: number ): number {\r\n        if (pos.isOffshoot) return prevNode.attr.angle;\r\n\r\n        const pa = plantHelper.segmentAngle( prevNode );\r\n        const base = prevNode.branchRoot.attr.branchArchAngle;\r\n        const f = numAdjust ? (1 - numAdjust) + numAdjust * (1 - pos.numFactor) : 1;\r\n\r\n        return pa + f * base + rng.range( -variance, variance );\r\n    },\r\n\r\n    repeat<T,U=number>(\r\n        { rng, cb, p=1, shuffle=true, steps, values, n }:\r\n        {\r\n            rng: rng,\r\n            cb: ( i: number | U ) => T,\r\n            steps?: { from: number, to: number, step: number },\r\n            values?: U[],\r\n            n?: number | [ number, number ],\r\n            p?: number, shuffle?: boolean\r\n        }\r\n    ): T[] {\r\n        const a: T[] = [];\r\n\r\n        if (p <= 0) return a;\r\n        const test = p < 1;\r\n\r\n        if (values !== undefined) {\r\n            for (let v of values) if (!test || rng.test( p )) {\r\n                a.push( cb( v ) );\r\n            }\r\n        }\r\n        else if (steps !== undefined) {\r\n            for (let i=steps.from; i<=steps.to; i+=steps.step) if (!test || rng.test( p )) {\r\n                a.push( cb( i ) );\r\n            }\r\n        }\r\n        else if (n !== undefined) {\r\n            if (Array.isArray( n )) n = rng.intRange( n[0], n[1] );\r\n\r\n            for (let i=0; i<n; i++) if (!test || rng.test( p )) {\r\n                a.push( cb( i ) );\r\n            }\r\n        }\r\n\r\n        if (shuffle) rng.shuffle( a );\r\n\r\n        return a;\r\n    }\r\n};\r\n\r\ninterface rng {\r\n    seed: string;\r\n    reset(): void;\r\n    random( v: number ): number;\r\n    test( p: number ): boolean;\r\n    test<T,U>( p: number, pass: T, fail: U ): T | U;\r\n    test<T,U>( p: number, pass?: T, fail?: U ): T | U | boolean;\r\n    range( v0: number, v1: number ): number;\r\n    intRange( v0: number, v1: number ): number;\r\n    ranges( ... ranges: Array<[ number, number, number? ]> ): number;\r\n    shuffle( a: Array<any> ): Array<any>;\r\n};\r\nconst rng = (seed: rngSeed): rng => {\r\n    const seedStr = (seed === undefined) ? (Math.random() + '').substring( 2 ) : String( seed );\r\n    let fn: seedrandom.prng;\r\n\r\n    const rng = {\r\n        get seed(): string {\r\n            return seedStr;\r\n        },\r\n        reset(): void {\r\n            fn = seedrandom( seedStr );\r\n        },\r\n\r\n        random( v=1 ): number {\r\n            return fn() * v;\r\n        },\r\n        test<T,U>( p=.5, pass?: T, fail?: U ): T | U | boolean {\r\n            const r = p >= 1 ? true : p <= 0 ? false : fn() < p;\r\n            if (r) return pass === undefined ? true : pass;\r\n            return fail === undefined ? false : fail;\r\n        },\r\n        range( v0: number, v1: number ): number {\r\n            if (v0==v1) return v0;\r\n            return v0 + fn() * ( v1 - v0 );\r\n        },\r\n        intRange( v0: number, v1: number ): number {\r\n            if (v0==v1) return v0;\r\n            return v0 + Math.floor( fn() * ( v1 - v0 + 1 ) );\r\n        },\r\n        ranges( ... ranges: Array<[ number, number, number? ]> ): number {\r\n            if (!ranges.length) return 0;\r\n\r\n            const ep = 1 / ranges.length;\r\n\r\n            ranges = [ ... ranges ];\r\n            const last = ranges.pop();\r\n\r\n            for (let r of ranges) {\r\n                const p = r[2] || ep;\r\n                if (rng.test( p )) return rng.range( r[0], r[1] );\r\n            }\r\n\r\n            return last ? rng.range( last[0], last[1] ) : 0;\r\n        },\r\n\r\n        shuffle( a: Array<any> ): Array<any> {\r\n            for (let i = a.length - 1; i > 0; i--) {\r\n                const j = Math.floor( fn() * (i + 1) );\r\n                const tmp = a[i];\r\n                a[i] = a[j];\r\n                a[j] = tmp;\r\n            }\r\n            return a;\r\n        }\r\n    };\r\n\r\n    rng.reset();\r\n\r\n    return rng;\r\n}\r\n\r\ninterface bboxData {\r\n    x0: number;\r\n    x1: number;\r\n    y0: number;\r\n    y1: number;\r\n    [propName: string]: any;\r\n};\r\nclass BBox {\r\n    x0: number;\r\n    x1: number;\r\n    y0: number;\r\n    y1: number;\r\n\r\n    constructor(data?: bboxData) {\r\n        if (data) {\r\n            this.x0 = data.x0;\r\n            this.x1 = data.x1;\r\n            this.y0 = data.y0;\r\n            this.y1 = data.y1;\r\n        }\r\n        else {\r\n            this.x0 = Infinity;\r\n            this.x1 = -Infinity;\r\n            this.y0 = Infinity;\r\n            this.y1 = -Infinity;\r\n        }\r\n    }\r\n\r\n    addX( v: number ): this {\r\n        if (v < this.x0) this.x0 = v;\r\n        if (v > this.x1) this.x1 = v;\r\n        return this;\r\n    }\r\n    addY( v: number ): this {\r\n        if (v < this.y0) this.y0 = v;\r\n        if (v > this.y1) this.y1 = v;\r\n        return this;\r\n    }\r\n    addPoint( x: number, y: number ): this {\r\n        this.addX( x );\r\n        this.addY( y );\r\n        return this;\r\n    }\r\n    addBBox( bbox: bboxData ): this {\r\n        this.addX( bbox.x0 );\r\n        this.addX( bbox.x1 );\r\n        this.addY( bbox.y0 );\r\n        this.addY( bbox.y1 );\r\n        return this;\r\n    }\r\n\r\n    expand( v: number ): this {\r\n        this.x0 -= v;\r\n        this.x1 += v;\r\n\r\n        this.y0 -= v;\r\n        this.y1 += v;\r\n\r\n        return this;\r\n    }\r\n\r\n    contains( bbox: bboxData, strict: boolean ): boolean {\r\n        if (strict) return this.x0 < bbox.x0 && this.x1 > bbox.x1 && this.y0 < bbox.y0 && this.y1 > bbox.y1;\r\n        return this.x0 <= bbox.x0 && this.x1 >= bbox.x1 && this.y0 <= bbox.y0 && this.y1 >= bbox.y1;\r\n    }\r\n    containedBy( bbox: bboxData, strict: boolean ): boolean {\r\n        if (strict) return this.x0 > bbox.x0 && this.x1 < bbox.x1 && this.y0 > bbox.y0 && this.y1 < bbox.y1;\r\n        return this.x0 >= bbox.x0 && this.x1 <= bbox.x1 && this.y0 >= bbox.y0 && this.y1 <= bbox.y1;\r\n    }\r\n    containsPoint( x: number, y: number, strict: boolean ): boolean {\r\n        if (strict) return !( x <= this.x0 || x >= this.x1 || y <= this.y0 || y >= this.y1 );\r\n        return !( x < this.x0 || x > this.x1 || y < this.y0 || y > this.y1 );\r\n    }\r\n\r\n    clone(): BBox {\r\n        return new BBox( this.data );\r\n    }\r\n\r\n    withPrecision( p: number ): BBox {\r\n        return new BBox({\r\n            x0: Math.round( this.x0 * p ),\r\n            x1: Math.round( this.x1 * p ),\r\n            y0: Math.round( this.y0 * p ),\r\n            y1: Math.round( this.y1 * p ),\r\n        });\r\n    }\r\n\r\n    get width(): number {\r\n        return this.x1 - this.x0;\r\n    }\r\n    get height(): number {\r\n        return this.y1 - this.y0;\r\n    }\r\n\r\n    get aspectRatio(): number {\r\n        if (!this.height) return 0;\r\n        return this.width / this.height;\r\n    }\r\n\r\n    get data(): bboxData {\r\n        return {\r\n            x0: this.x0,\r\n            x1: this.x1,\r\n            y0: this.y0,\r\n            y1: this.y1\r\n        };\r\n    }\r\n\r\n    get pointsArray(): [ point, point ] {\r\n        return [\r\n            [ this.x0, this.y0 ],\r\n            [ this.x1, this.y1 ],\r\n        ];\r\n    }\r\n\r\n    get viewBox(): string {\r\n        return `${this.x0} ${this.y0} ${this.width} ${this.height}`;\r\n    }\r\n}\r\n\r\ninterface nodePos {\r\n    num: number,\r\n    branchNum: number,\r\n\r\n    height: number,\r\n    offshootHeight: number,\r\n\r\n    isRoot: boolean,\r\n\r\n    isLast: boolean,\r\n    isLastBranch: boolean,\r\n\r\n    isOffshoot: boolean,\r\n\r\n    numFactor: number,\r\n    branchFactor: number,\r\n};\r\ninterface nodeAttr {\r\n    [key: string]: any,\r\n};\r\ninterface offshoot {\r\n    n: number,\r\n    attr?: nodeAttr,\r\n};\r\ninterface node {\r\n    pos: nodePos,\r\n    attr: nodeAttr,\r\n    offshoots: node[],\r\n\r\n    prev: node | null,\r\n    next: node | null,\r\n\r\n    branchRoot: node,\r\n    treeRoot: node,\r\n\r\n    offshootNum: number,\r\n};\r\ntype getNode = (pos: nodePos, prev: node | null, rootAttr: nodeAttr) => nodeAttr;\r\ntype getOffshoots = (node: node | null) => offshoot[];\r\nclass ProcTree {\r\n\r\n    maxBranchNum: number;\r\n    getNode: getNode;\r\n    getOffshoots: getOffshoots;\r\n\r\n    private roots: node[];\r\n\r\n    constructor( maxBranchNum: number, getNode: getNode, getOffshoots: getOffshoots ) {\r\n        this.maxBranchNum = maxBranchNum;\r\n        this.getNode = getNode;\r\n        this.getOffshoots = getOffshoots;\r\n\r\n        this.roots = [];\r\n    }\r\n\r\n    grow(): void {\r\n        const roots = this.getOffshoots( null );\r\n        for (let i in roots) this.growBranch( null, Number( i ), roots[ i ].n, roots[ i ].attr || {} );\r\n    }\r\n\r\n    growBranch( rootNode: node | null, offshootNum: number, segmentCount: number, attr: nodeAttr ): void {\r\n        const isTreeRoot = !rootNode;\r\n\r\n        let node = this.addNode( rootNode, true, offshootNum, segmentCount, attr );\r\n\r\n        if (isTreeRoot) this.roots.push( node );\r\n        const isLastBranch = this.maxBranchNum == node.pos.branchNum;\r\n\r\n        if (!isLastBranch && isTreeRoot) {\r\n            const offshoots = this.getOffshoots( node );\r\n            for (let i in offshoots) this.growBranch( node, Number( i ), offshoots[ i ].n, offshoots[ i ].attr || {} );\r\n        }\r\n\r\n        for (let i=0; i<segmentCount; i++) {\r\n            node = this.addNode( node, false, offshootNum, segmentCount, {} );\r\n            if (!isLastBranch) {\r\n                const offshoots = this.getOffshoots( node );\r\n                for (let i in offshoots) this.growBranch( node, Number( i ), offshoots[ i ].n, offshoots[ i ].attr || {} );\r\n            }\r\n        }\r\n    }\r\n\r\n    addNode( prev: node | null, isOffshoot: boolean, offshootNum: number, maxNum: number, rootAttr: nodeAttr ): node {\r\n        const pos = this.getPos( prev ? prev.pos : null, isOffshoot, maxNum );\r\n        const node: node = {\r\n            pos,\r\n            attr: { ... rootAttr, ... this.getNode( pos, prev, rootAttr ) },\r\n            offshoots: [],\r\n\r\n            prev: null,\r\n            next: null,\r\n\r\n            branchRoot: <node>{},\r\n            treeRoot: <node>{},\r\n\r\n            offshootNum: 0,\r\n        };\r\n\r\n        if (prev) {\r\n            node.prev = prev;\r\n            node.branchRoot = isOffshoot ? node : prev.pos.isOffshoot ? prev : prev.branchRoot;\r\n            node.treeRoot = prev.treeRoot ? prev.treeRoot : prev;\r\n\r\n            if (isOffshoot) {\r\n                prev.offshoots.push( node );\r\n                node.offshootNum = offshootNum;\r\n            }\r\n            else {\r\n                prev.next = node;\r\n            }\r\n\r\n        }\r\n        else {\r\n            node.branchRoot = node;\r\n            node.treeRoot = node;\r\n            node.offshootNum = offshootNum;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    getPos( prev: nodePos | null, isOffshoot: boolean, maxNum: number ): nodePos {\r\n        if (prev === null) return {\r\n            num: 0,\r\n            branchNum: 0,\r\n\r\n            height: 0,\r\n            offshootHeight: 0,\r\n\r\n            isRoot: true,\r\n\r\n            isLast: maxNum == 0,\r\n            isLastBranch: this.maxBranchNum == 0,\r\n\r\n            isOffshoot,\r\n\r\n            numFactor: 1,\r\n            branchFactor: 1,\r\n        };\r\n\r\n        const pos: nodePos = {\r\n            num: isOffshoot ? 0 : prev.num + 1,\r\n            branchNum: isOffshoot ? prev.branchNum + 1 : prev.branchNum,\r\n\r\n            height: isOffshoot ? prev.height : prev.height + 1,\r\n            offshootHeight: isOffshoot ? prev.num : prev.offshootHeight,\r\n\r\n            isRoot: false,\r\n\r\n            isLast: false,\r\n            isLastBranch: false,\r\n\r\n            isOffshoot,\r\n\r\n            numFactor: 0,\r\n            branchFactor: 0,\r\n        };\r\n\r\n        if (pos.num == maxNum) pos.isLast = true;\r\n        if (pos.branchNum == this.maxBranchNum) pos.isLastBranch = true;\r\n\r\n        pos.numFactor = maxNum ? (1 - pos.num / maxNum) : 1;\r\n        pos.branchFactor = this.maxBranchNum ? (1 - pos.branchNum / this.maxBranchNum) : 1;\r\n\r\n        return pos;\r\n    }\r\n\r\n    eachSegment( cb: (n0: node, n1: node) => void ): void {\r\n        for (let node of this.roots) this._each( node, cb );\r\n    }\r\n    _each( node: node | null, cb: (n0: node, n1: node) => void ): void {\r\n        // note: the treeRoot node can have offshoots\r\n        // other nodes that are branchRoots cannot have offshoots\r\n        while ( node ) {\r\n            if (node.pos.num > 0 && node.prev) cb( node.prev, node );\r\n            for (let offshootNode of node.offshoots) this._each( offshootNode.next, cb );\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    html,\r\n    math,\r\n    plantHelper,\r\n    rng, rng as rngInterface,\r\n    BBox,\r\n    ProcTree, nodePos, nodeAttr, offshoot, node\r\n};","import { html } from \"../util/util\";\r\nimport { attributeSet, pathDescriptionSegment } from '../types';\r\n\r\ninterface PlantPotCfg {\r\n    rimHeight: number,\r\n    rimLipOuter: number,\r\n    rimLipInner: number,\r\n    bottom: number,\r\n};\r\n\r\nfunction plantPotSvg( pathAttr: attributeSet ): SVGElement {\r\n    const baseCfg: PlantPotCfg = {\r\n        rimHeight: 20,\r\n        rimLipOuter: 2,\r\n        rimLipInner: 4,\r\n        bottom: 15,\r\n    };\r\n\r\n    const sw = pathAttr ? ('stroke-width' in pathAttr ? pathAttr[ 'stroke-width' ] : 2) : false;\r\n    if (sw) pathAttr[ 'stroke-width' ] = sw;\r\n\r\n    const pad = sw && typeof sw == 'number' ? sw / 2 : 0;\r\n\r\n    const getPoints = (cfg: PlantPotCfg): pathDescriptionSegment[] => {\r\n        return [\r\n            [ 'M', pad, pad ],\r\n            [ 'L', 100-pad, pad ],\r\n            [ 'L', 100-pad - cfg.rimLipOuter, cfg.rimHeight ],\r\n            [ 'L', 100-pad - cfg.rimLipInner, cfg.rimHeight ],\r\n            [ 'L', 100-pad - cfg.bottom, 100-pad ],\r\n            [ 'L', pad+cfg.bottom, 100-pad ],\r\n            [ 'L', pad+cfg.rimLipInner, cfg.rimHeight ],\r\n            [ 'L', pad+cfg.rimLipOuter, cfg.rimHeight ],\r\n            'Z',\r\n        ];\r\n    };\r\n\r\n    if (!pathAttr) pathAttr = {};\r\n    pathAttr.d = html.svg.compilePathDescription( getPoints( baseCfg ) );\r\n    const path = html.svg.node( 'path', pathAttr );\r\n\r\n    const svg = html.svg.root({\r\n        class: 'svg-plant-pot',\r\n        viewBox: '0 0 100 100',\r\n        preserveAspectRatio: 'xMidYMax meet',\r\n    });\r\n\r\n    svg.appendChild( path );\r\n\r\n    return svg;\r\n};\r\n\r\nexport { plantPotSvg };","// ripped from https://github.com/kfitfk/svg-boundings\r\n\r\ninterface bounds {\r\n  minX: number;\r\n  maxX: number;\r\n  minY: number;\r\n  maxY: number;\r\n};\r\n\r\n/**\r\n * expand the x-bounds, if the value lies outside the bounding box\r\n */\r\nfunction expandXBounds(bounds: bounds, value: number) {\r\n  if (bounds.minX > value) bounds.minX = value;\r\n  else if (bounds.maxX < value) bounds.maxX = value;\r\n}\r\n\r\n/**\r\n * expand the y-bounds, if the value lies outside the bounding box\r\n */\r\nfunction expandYBounds(bounds: bounds, value: number) {\r\n  if (bounds.minY > value) bounds.minY = value;\r\n  else if (bounds.maxY < value) bounds.maxY = value;\r\n}\r\n\r\n/**\r\n * Calculate the bezier value for one dimension at distance 't'\r\n */\r\nfunction calculateBezier(t: number, p0: number, p1: number, p2: number, p3: number) {\r\n  var mt = 1-t;\r\n  return (mt*mt*mt*p0) + (3*mt*mt*t*p1) + (3*mt*t*t*p2) + (t*t*t*p3);\r\n}\r\n\r\n/**\r\n * Calculate the bounding box for this bezier curve.\r\n * http://pomax.nihongoresources.com/pages/bezier/\r\n */\r\nfunction bezierCurveBoundingBox(\r\n  x1: number, y1: number,\r\n  cx1: number, cy1: number, cx2: number, cy2: number,\r\n  x2: number, y2: number\r\n) {\r\n  var bounds = {\r\n    minX: Math.min(x1, x2),\r\n    minY: Math.min(y1, y2),\r\n    maxX: Math.max(x1, x2),\r\n    maxY: Math.max(y1, y2),\r\n  };\r\n\r\n  var dcx0 = cx1 - x1;\r\n  var dcy0 = cy1 - y1;\r\n  var dcx1 = cx2 - cx1;\r\n  var dcy1 = cy2 - cy1;\r\n  var dcx2 = x2 - cx2;\r\n  var dcy2 = y2 - cy2;\r\n\r\n  if (cx1<bounds.minX || cx1>bounds.maxX || cx2<bounds.minX || cx2>bounds.maxX) {\r\n    // Just for better reading because we are doing middle school math here\r\n    var a = dcx0;\r\n    var b = dcx1;\r\n    var c = dcx2;\r\n\r\n    if (a+c !== 2*b) b += 0.0001;\r\n\r\n    var numerator = 2*(a - b);\r\n    var denominator = 2*(a - 2*b + c);\r\n    if (denominator === 0) denominator = 0.0001;\r\n    var quadroot = (2*b-2*a)*(2*b-2*a) - 2*a*denominator;\r\n    var root = Math.sqrt(quadroot);\r\n\r\n    var t1 =  (numerator + root) / denominator;\r\n    var t2 =  (numerator - root) / denominator;\r\n\r\n    if (0<t1 && t1<1) {\r\n      expandXBounds(bounds, calculateBezier(t1, x1, cx1, cx2, x2));\r\n    }\r\n    if (0<t2 && t2<1) {\r\n      expandXBounds(bounds, calculateBezier(t2, x1, cx1, cx2, x2));\r\n    }\r\n  }\r\n\r\n  if (cy1<bounds.minY || cy1>bounds.maxY || cy2<bounds.minY || cy2>bounds.maxY) {\r\n    a = dcy0;\r\n    b = dcy1;\r\n    c = dcy2;\r\n\r\n    if (a+c !== 2*b) b += 0.0001;\r\n\r\n    numerator = 2*(a - b);\r\n    denominator = 2*(a - 2*b + c);\r\n    if (denominator === 0) denominator = 0.0001;\r\n    quadroot = (2*b-2*a)*(2*b-2*a) - 2*a*denominator;\r\n    root = Math.sqrt(quadroot);\r\n\r\n    t1 =  (numerator + root) / denominator;\r\n    t2 =  (numerator - root) / denominator;\r\n\r\n    if (0<t1 && t1<1) {\r\n      expandYBounds(bounds, calculateBezier(t1, y1, cy1, cy2, y2));\r\n    }\r\n    if (0<t2 && t2<1) {\r\n      expandYBounds(bounds, calculateBezier(t2, y1, cy1, cy2, y2));\r\n    }\r\n  }\r\n\r\n  return {\r\n    x0: bounds.minX,\r\n    x1: bounds.maxX,\r\n    y0: bounds.minY,\r\n    y1: bounds.maxY,\r\n  };\r\n}\r\n\r\nexport { bezierCurveBoundingBox };","import { ProcTree, html, math, BBox, node, nodePos, nodeAttr, offshoot } from \"../util/util\";\r\nimport { bezierCurveBoundingBox } from \"../util/bezierCurveBoundingBox\";\r\nimport { point, attributeSet, leafCurvesHandles, leafDefinition, pathDescriptionSegment, Genus } from '../types';\r\n\r\nconst precision = 10000;\r\nfunction prc(v: number): number;\r\nfunction prc(v: point): point;\r\nfunction prc(v: number | point): number | point {\r\n    if (Array.isArray( v )) return [\r\n        Math.round( v[0] * precision ),\r\n        Math.round( v[1] * precision ),\r\n    ];\r\n\r\n    return Math.round( v * precision );\r\n}\r\n\r\ninterface PlantPart {\r\n    base: point;\r\n    top: point;\r\n\r\n    angle: number;\r\n    length: number;\r\n\r\n    ageOffset: number;\r\n    style: attributeSet;\r\n\r\n    bbox: BBox;\r\n\r\n    getPoints( age: number ): pathDescriptionSegment[] | undefined;\r\n};\r\nclass BranchSegment implements PlantPart {\r\n    base: point;\r\n    top: point;\r\n\r\n    bottomWidth: number;\r\n    topWidth: number;\r\n\r\n    angle: number;\r\n    bottomAngle: number;\r\n    topAngle: number;\r\n\r\n    length: number;\r\n\r\n    ageOffset: number;\r\n    style: attributeSet;\r\n\r\n    bbox: BBox;\r\n\r\n    constructor( base: point, style: attributeSet, n0: node, n1: node ) {\r\n        this.base = base;\r\n\r\n        this.bottomWidth = n0.attr.width;\r\n        this.topWidth = n1.attr.width;\r\n\r\n        this.angle = n0.attr.segmentAngle !== undefined ? n0.attr.segmentAngle : n0.attr.angle;\r\n        this.bottomAngle = n0.attr.angle;\r\n        this.topAngle = n1.attr.angle;\r\n\r\n        this.length = n0.attr.length;\r\n\r\n        this.top = math.fromAngle( this.base, this.angle, this.length );\r\n\r\n        this.ageOffset = n0.attr.totalLength;\r\n        this.style = style;\r\n\r\n        this.bbox = this.getBoundingBox();\r\n    }\r\n\r\n    getPoints( age: number ): pathDescriptionSegment[] | undefined {\r\n        const ageFactor = this.getAgeFactor( age );\r\n        if (!ageFactor) return;\r\n\r\n        let top = this.top;\r\n        if (ageFactor < 1) {\r\n            top = math.fromAngle( this.base, this.angle, this.length * ageFactor );\r\n        }\r\n\r\n        const r = math.rectFromLine(\r\n            this.base, top,\r\n            this.bottomAngle, this.topAngle,\r\n            this.bottomWidth, this.topWidth,\r\n            precision,\r\n        );\r\n\r\n        return [\r\n            'M', r[0],\r\n            'L', r[1],\r\n            'L', r[2],\r\n            'L', r[3],\r\n            'Z'\r\n        ];\r\n    }\r\n\r\n    private getBoundingBox(): BBox {\r\n        const points = math.rectFromLine(\r\n            this.base, this.top,\r\n            this.bottomAngle, this.topAngle,\r\n            this.bottomWidth, this.topWidth,\r\n            undefined\r\n        );\r\n\r\n        const bb = new BBox();\r\n        bb.addPoint( points[0][0], points[0][1] );\r\n        bb.addPoint( points[1][0], points[1][1] );\r\n        bb.addPoint( points[2][0], points[2][1] );\r\n        bb.addPoint( points[3][0], points[3][1] );\r\n\r\n        return bb;\r\n    }\r\n\r\n    private getAgeFactor( age: number ): number {\r\n        if (age <= this.ageOffset) return 0;\r\n        if (age >= this.ageOffset + this.length) return 1;\r\n        return (age - this.ageOffset) / this.length;\r\n    }\r\n\r\n    getOffsetPoint( x: number, y: number ): point {\r\n        if (!x) {\r\n            if (!y) return this.base;\r\n            if (y==1) return this.top;\r\n            return math.fromAngle( this.base, this.angle, this.length * y );\r\n        }\r\n\r\n        const dir = this.angle < 0 ? 1 : -1;\r\n\r\n        if (!y) {\r\n            return math.fromAngle( this.base, this.bottomAngle + 90*dir, this.bottomWidth/2 * x );\r\n        }\r\n\r\n        if (y==1) {\r\n            return math.fromAngle( this.top, this.topAngle + 90*dir, this.topWidth/2 * x );\r\n        }\r\n\r\n        const l1 = [\r\n            math.fromAngle( this.base, this.bottomAngle + 90*dir, this.bottomWidth/2 ),\r\n            math.fromAngle( this.top, this.topAngle + 90*dir, this.topWidth/2 )\r\n        ];\r\n        const l2 = [\r\n            math.fromAngle( this.base, this.bottomAngle + 90*dir, -this.bottomWidth/2 ),\r\n            math.fromAngle( this.top, this.topAngle + 90*dir, -this.topWidth/2 )\r\n        ];\r\n        const l3 = [\r\n            math.pointOnLine( l1[0], l1[1], y ),\r\n            math.pointOnLine( l2[0], l2[1], y ),\r\n        ];\r\n\r\n        x = 1 - (x/2 + .5);\r\n\r\n        return math.pointOnLine( l3[0], l3[1], x );\r\n    }\r\n}\r\nclass Leaf implements PlantPart {\r\n    base: point;\r\n    pBase: point;\r\n    top: point;\r\n\r\n    angle: number;\r\n    length: number;\r\n    handles: leafCurvesHandles;\r\n\r\n    ageOffset: number;\r\n    style: attributeSet;\r\n\r\n    bbox: BBox;\r\n\r\n    constructor( segment: BranchSegment, { angle, length, handles, style, xOffset, yOffset }: leafDefinition ) {\r\n        const base = segment.getOffsetPoint( xOffset, yOffset );\r\n        this.base = base;\r\n        this.pBase = prc( base );\r\n\r\n        this.angle = angle;\r\n        this.length = length;\r\n        this.handles = handles;\r\n\r\n        this.top = math.fromAngle( base, angle, length );\r\n\r\n        this.ageOffset = segment.ageOffset + segment.length * yOffset;\r\n\r\n        this.style = style;\r\n\r\n        this.bbox = this.getBoundingBox();\r\n    }\r\n\r\n    getPoints( age: number ): pathDescriptionSegment[] | undefined {\r\n        const ageFactor = this.getAgeFactor( age );\r\n        if (!ageFactor) return;\r\n\r\n        let top = this.top;\r\n        if (ageFactor < 1) {\r\n            top = math.fromAngle( this.base, this.angle, this.length * ageFactor );\r\n        }\r\n\r\n        const curves = this.getCurves({ top, ageFactor, precision });\r\n\r\n        top = prc( top );\r\n\r\n        return [\r\n            'M', this.pBase,\r\n            'C', curves.up[0], curves.up[1], top,\r\n            'C', curves.down[0], curves.down[1], this.pBase\r\n        ];\r\n    }\r\n\r\n    private getBoundingBox(): BBox {\r\n        const c = this.getCurves({ top: this.top, ageFactor: 1 });\r\n        const bb = new BBox(bezierCurveBoundingBox(\r\n            this.base[0], this.base[1],\r\n            c.up[0][0], c.up[0][1],\r\n            c.up[1][0], c.up[1][1],\r\n            this.top[0], this.top[1],\r\n        ));\r\n\r\n        bb.addBBox(bezierCurveBoundingBox(\r\n            this.top[0], this.top[1],\r\n            c.down[0][0], c.down[0][1],\r\n            c.down[1][0], c.down[1][1],\r\n            this.base[0], this.base[1],\r\n        ));\r\n\r\n        if (typeof this.style['stroke-width'] == 'number') bb.expand( this.style['stroke-width'] / 2 );\r\n\r\n        return bb;\r\n    }\r\n\r\n    private getCurves(\r\n        { top, ageFactor, precision }: { top: point; ageFactor: number; precision?: number; }\r\n    ): { up: [ point, point ], down: [ point, point ] } {\r\n        const bha = this.handles.bottomAngle;\r\n        const bhl = this.handles.bottomLength * ageFactor;\r\n        const tha = this.handles.topAngle;\r\n        const thl = this.handles.topLength * ageFactor;\r\n\r\n        return {\r\n            up: [\r\n                math.fromAngle( this.base, this.angle + bha, this.length * bhl, precision ),\r\n                math.fromAngle( top, this.angle + tha, this.length * thl, precision ),\r\n            ],\r\n            down: [\r\n                math.fromAngle( top, this.angle - tha, this.length * thl, precision ),\r\n                math.fromAngle( this.base, this.angle - bha, this.length * bhl, precision ),\r\n            ],\r\n        };\r\n    }\r\n\r\n    private getAgeFactor( age: number ): number {\r\n        if (age <= this.ageOffset) return 0;\r\n        if (age >= this.ageOffset + this.length) return 1;\r\n        return (age - this.ageOffset) / this.length;\r\n    }\r\n}\r\n\r\nclass Branches {\r\n    segments: BranchSegment[][];\r\n    leaves: Leaf[][];\r\n\r\n    constructor() {\r\n        this.segments = [];\r\n        this.leaves = [];\r\n    }\r\n\r\n    addSegment( branchNum: number, segment: BranchSegment ) {\r\n        let branch = this.segments[ branchNum ];\r\n        if (!branch) {\r\n            branch = [];\r\n            this.segments[ branchNum ] = branch;\r\n        }\r\n        branch.push( segment );\r\n    }\r\n    addLeaf( branchNum: number, leaf: Leaf ) {\r\n        let branch = this.leaves[ branchNum ];\r\n        if (!branch) {\r\n            branch = [];\r\n            this.leaves[ branchNum ] = branch;\r\n        }\r\n        branch.push( leaf );\r\n    }\r\n\r\n    getArray(): PlantPart[] {\r\n        let ret: PlantPart[] = [];\r\n        for (let i=0; i<this.segments.length; i++) {\r\n            ret = ret.concat( this.segments[ i ] || [] );\r\n            ret = ret.concat( this.sortLeaves( this.leaves[ i ] ) );\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    sortLeaves( a: Leaf[] ): Leaf[] {\r\n        if (!a) return [];\r\n\r\n        return a.sort((l0,l1) => {\r\n            if (l1.bbox.containsPoint( l0.base[0], l0.base[1], true )) {\r\n                return -1;\r\n            }\r\n\r\n            if (l0.bbox.containsPoint( l1.base[0], l1.base[1], true )) {\r\n                return 1;\r\n            }\r\n\r\n            const d0 = math.distance( l0.base, [0,0] );\r\n            const d1 = math.distance( l1.base, [0,0] );\r\n            return d1 - d0;\r\n        });\r\n    }\r\n}\r\n\r\nclass PlantBody {\r\n    genus: Genus;\r\n\r\n    bbox: BBox;\r\n    yFactor: number;\r\n\r\n    private parts: PlantPart[] | undefined;\r\n    private maxAge: number;\r\n\r\n    constructor( genus: Genus ) {\r\n        this.genus = genus;\r\n        this.bbox = new BBox;\r\n\r\n        this.maxAge = 0;\r\n        this.yFactor = 1;\r\n    }\r\n\r\n    private getTree() {\r\n        const getNodeAttr = ( pos: nodePos, prev: node | null, attr: nodeAttr ): nodeAttr => {\r\n            return {\r\n                width: this.genus.getNodeWidth( pos, prev, attr ),\r\n                angle: prev ? this.genus.getSegmentAngle( pos, prev, attr ) : 0,\r\n                length: pos.isLast ? (prev ? prev.attr.length : 0) : this.genus.getSegmentLength( pos, prev, attr ),\r\n                totalLength: prev ? ((pos.isOffshoot ? 0 : prev.attr.length) + prev.attr.totalLength) : 0,\r\n            };\r\n        };\r\n        const getOffshoots = (node: node | null): offshoot[] => {\r\n            if (node === null) return this.genus.getRoots();\r\n            return this.genus.getOffshoots( node );\r\n        };\r\n\r\n        return new ProcTree( this.genus.maxBranchNum, getNodeAttr, getOffshoots );\r\n    }\r\n\r\n    init(): void {\r\n        this.genus.reset();\r\n\r\n        const tree = this.getTree();\r\n        tree.grow();\r\n\r\n        this.bbox = new BBox({\r\n            x0: -this.genus.width/2,\r\n            x1: this.genus.width/2,\r\n            y0: -this.genus.height,\r\n            y1: 0,\r\n        });\r\n\r\n        const branches = new Branches;\r\n        const points = new Map;\r\n        let maxAge = 0;\r\n\r\n        const getBasePoint = (node: node): point => {\r\n            if (!node.prev) {\r\n                const p: point = [ node.attr.x || 0, 0 ];\r\n                this.bbox.addPoint( p[0], p[1] );\r\n                return p;\r\n            }\r\n            else if (node.pos.isOffshoot) {\r\n                const p = points.get( node.prev );\r\n                if (p) return p;\r\n\r\n                const rp: point = [ node.prev.attr.x || 0, 0 ];\r\n                points.set( node.prev, rp );\r\n                this.bbox.addPoint( rp[0], rp[1] );\r\n                return rp;\r\n            }\r\n\r\n            return points.get( node );\r\n        }\r\n\r\n        tree.eachSegment( (n0: node, n1: node): void => {\r\n\r\n            const base = getBasePoint( n0 );\r\n            const style = this.genus.getSegmentStyle( n0, n1 );\r\n            const s = new BranchSegment( base, style, n0, n1 );\r\n\r\n            points.set( n1, s.top );\r\n            this.bbox.addBBox( s.bbox );\r\n            branches.addSegment( n0.pos.branchNum, s );\r\n\r\n            this.genus.getLeaves( n0, n1 ).map( (cfg: leafDefinition): void => {\r\n                const leaf = new Leaf( s, cfg );\r\n\r\n                this.bbox.addBBox( leaf.bbox );\r\n                branches.addLeaf( n0.pos.branchNum, leaf );\r\n\r\n                if (leaf.ageOffset + leaf.length > maxAge) maxAge = leaf.ageOffset + leaf.length;\r\n            });\r\n\r\n            if (n1.attr.totalLength > maxAge) maxAge = n1.attr.totalLength;\r\n\r\n        });\r\n\r\n        this.parts = branches.getArray();\r\n        this.maxAge = maxAge;\r\n\r\n        // make sure the plant is centered\r\n        const bboxX = Math.max( Math.abs( this.bbox.x0 ), Math.abs( this.bbox.x1 ) );\r\n        this.bbox.x0 = -bboxX;\r\n        this.bbox.x1 = bboxX;\r\n\r\n        this.yFactor = (this.bbox.height / -this.bbox.y0) || 1;\r\n    }\r\n\r\n    private render( age: number, colors=true, svg: SVGElement ): void {\r\n        age *= this.maxAge;\r\n\r\n        if (this.parts) for (const p of this.parts) {\r\n            const points = p.getPoints( age );\r\n            if (!points) continue;\r\n\r\n            let style = {} as attributeSet, add = {} as attributeSet;\r\n\r\n            if (colors) {\r\n                style = p.style;\r\n                add = {};\r\n                if (typeof style['stroke-width'] == 'number') add['stroke-width'] = prc( style['stroke-width'] );\r\n            }\r\n\r\n            const set = Object.assign( {}, style, add, {\r\n                d: html.svg.compilePathDescription( points ),\r\n            });\r\n            svg.appendChild( html.svg.node( 'path', set ) );\r\n        }\r\n    }\r\n\r\n    getSvg( age: number, colors: boolean ): SVGElement {\r\n        if (this.parts === undefined) this.init();\r\n\r\n        const svg = html.svg.root({\r\n            class: 'svg-plant-body',\r\n            viewBox: this.bbox.withPrecision( precision ).viewBox,\r\n            preserveAspectRatio: 'xMidYMax meet',\r\n        });\r\n\r\n        this.render( age, colors, svg );\r\n\r\n        return svg;\r\n    }\r\n}\r\n\r\nexport { PlantBody };","import { plantPotSvg } from \"./plantPotSvg\";\r\nimport { PlantBody } from \"./PlantBody\";\r\nimport { html } from \"../util/util\";\r\nimport { attributeSet, Genus } from '../types';\r\n\r\ninterface SvgPlantCfg {\r\n    color: boolean,\r\n    age: number,\r\n    potSize: number,\r\n    potPathAttr: attributeSet,\r\n};\r\ninterface SvgPlantCfgArg {\r\n    color?: boolean,\r\n    age?: number,\r\n    potSize?: number,\r\n    potPathAttr?: attributeSet,\r\n};\r\n\r\ninterface PlantAnimation {\r\n    fromAge: number,\r\n    toAge: number,\r\n    ageSpan: number,\r\n    currentAge: number,\r\n\r\n    durationMs: number,\r\n\r\n    nextAnimationFrame: undefined | number,\r\n\r\n    paused: boolean,\r\n};\r\n\r\nclass SvgPlant {\r\n    body: PlantBody;\r\n    private cfg: SvgPlantCfg;\r\n\r\n    private _svgElement: SVGElement | null;\r\n    private _potSvgElement: SVGElement | null;\r\n    private _bodySvgElement: SVGElement | null;\r\n\r\n    private animation: PlantAnimation | null;\r\n\r\n    constructor( genus: Genus, cfg?: SvgPlantCfgArg ) {\r\n        this.cfg = {\r\n            color: true,\r\n            age: 1,\r\n            potSize: .3,\r\n            potPathAttr: { fill: '#fc7', stroke: '#da5' },\r\n        };\r\n\r\n        if (typeof cfg == 'object') {\r\n            if (cfg.color !== undefined) this.color = cfg.color;\r\n            if (cfg.age !== undefined) this.age = cfg.age;\r\n            if (cfg.potSize !== undefined) this.potSize = cfg.potSize;\r\n            if (cfg.potPathAttr !== undefined) this.potPathAttr = cfg.potPathAttr;\r\n        }\r\n\r\n        this.body = new PlantBody( genus );\r\n\r\n        this._svgElement = null;\r\n        this._potSvgElement = null;\r\n        this._bodySvgElement = null;\r\n\r\n        this.animation = null;\r\n    }\r\n\r\n    get seed(): string {\r\n        return this.body.genus.rngSeed;\r\n    }\r\n\r\n    get color(): boolean { return this.cfg.color; }\r\n    set color( v: boolean ) {\r\n        v = !!v;\r\n        if (v != this.cfg.color) {\r\n            this.cfg.color = v;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    get age(): number { return this.cfg.age; }\r\n    set age( v: number ) {\r\n        v = Math.max( 0, Math.min( v, 1 ));\r\n        if (v != this.cfg.age) {\r\n            this.cfg.age = v;\r\n            this.update( true, false );\r\n        }\r\n    }\r\n\r\n    get potSize(): number { return this.cfg.potSize; }\r\n    set potSize( v: number ) {\r\n        v = Math.max( 0, Math.min( v, 1 ));\r\n        if (v != this.cfg.potSize) {\r\n            this.cfg.potSize = v;\r\n            this.update( false, true );\r\n        }\r\n    }\r\n\r\n    get potPathAttr(): attributeSet { return this.cfg.potPathAttr; }\r\n    set potPathAttr( v: attributeSet ) {\r\n        if (v !== this.cfg.potPathAttr) {\r\n            this.cfg.potPathAttr = v;\r\n            this.update( false, true );\r\n        }\r\n    }\r\n\r\n    update( body=true, pot=true ) {\r\n        if (body) this._bodySvgElement = null;\r\n        if (pot) this._potSvgElement = null;\r\n        this.updateSvgElement();\r\n    }\r\n\r\n    get svgElement(): SVGElement {\r\n        if (!this._svgElement) {\r\n            this._svgElement = this.getSvgElement();\r\n        }\r\n        return this._svgElement;\r\n    }\r\n    updateSvgElement(): void {\r\n        const svg = this._svgElement;\r\n        if (!svg) return;\r\n\r\n        svg.innerHTML = this.getSvgElement().innerHTML;\r\n    }\r\n    getSvgElement(): SVGElement {\r\n        const svg = html.svg.root({\r\n            class: 'svg-plant',\r\n            viewBox: '0 0 1 1',\r\n            preserveAspectRatio: 'xMidYMax meet',\r\n        });\r\n\r\n        const place = ( el: Element, x: number, y: number, w: number, h: number ) => {\r\n            el.setAttribute( 'x', String( x ) );\r\n            el.setAttribute( 'y', String( y ) );\r\n            el.setAttribute( 'width', String( w ) );\r\n            el.setAttribute( 'height', String( h ) );\r\n        };\r\n\r\n        const pot = this.potSvgElement;\r\n        const body = this.bodySvgElement;\r\n\r\n        if (this.cfg.potSize >= 1 && pot !== null) {\r\n            svg.appendChild( pot );\r\n            place( pot, 0, 0, 1, 1 );\r\n        }\r\n        else if (this.cfg.potSize <= 0 && body !== null) {\r\n            svg.appendChild( body );\r\n            place( body, 0, 0, 1, 1 );\r\n        }\r\n        else if (pot && body) {\r\n            svg.appendChild( pot );\r\n            place( pot, 0, 1 - this.cfg.potSize, 1, this.cfg.potSize );\r\n            svg.appendChild( body );\r\n\r\n            // with high contrast there is a slight gap visible, between pot and plant.\r\n            // without color this is way more noticable, and the slight overlap is invisible.\r\n            const overlap = this.cfg.color ? 0 : .001;\r\n\r\n            let height;\r\n            const bodyHeight = 1 - this.cfg.potSize;\r\n\r\n            if (this.body.yFactor > 1) {\r\n                // this means the plant has points \"below the fold\"\r\n                // or: points that overlap the potsize area\r\n                // so the height of \"1 - this._cfg.potSize\" needs to be expanded accordingly\r\n\r\n                const wrapperAR = 1 / bodyHeight;\r\n                const aboveFoldBodyAR = this.body.bbox.width / -this.body.bbox.y0;\r\n                if (wrapperAR < aboveFoldBodyAR) {\r\n                    // the plantbody is scaled down, to fit the viewbox's width\r\n                    // the yFactor now needs to be applied only to the plants scaled down height\r\n                    // not the full available area of \"1 - this._cfg.potSize\"\r\n\r\n                    const scaledBodyHeight = -this.body.bbox.y0 / this.body.bbox.width;\r\n                    height = bodyHeight + (scaledBodyHeight * this.body.yFactor - scaledBodyHeight);\r\n                }\r\n                else {\r\n                    height = bodyHeight * this.body.yFactor;\r\n                }\r\n            }\r\n            else {\r\n                height = bodyHeight;\r\n            }\r\n\r\n            place( body, 0, 0, 1, height + overlap );\r\n\r\n        }\r\n\r\n        return svg;\r\n    }\r\n\r\n    get potSvgElement(): SVGElement | null {\r\n        if (this.cfg.potSize == 0) return null;\r\n\r\n        if (!this._potSvgElement) {\r\n            this._potSvgElement = this.getPotSvgElement();\r\n        }\r\n        return this._potSvgElement;\r\n    }\r\n    getPotSvgElement(): SVGElement {\r\n        if (!this.cfg.color) return plantPotSvg({});\r\n        return plantPotSvg( this.cfg.potPathAttr );\r\n    }\r\n\r\n    get bodySvgElement(): SVGElement | null {\r\n        if (this.cfg.potSize == 1) return null;\r\n\r\n        if (!this._bodySvgElement) {\r\n            this._bodySvgElement = this.getBodySvgElement();\r\n        }\r\n        return this._bodySvgElement;\r\n    }\r\n    getBodySvgElement(): SVGElement {\r\n        return this.body.getSvg( this.cfg.age, this.cfg.color );\r\n    }\r\n\r\n    animate( fromAge=0, toAge=1, durationMs=3000 ) {\r\n        this.cancelAnimation();\r\n\r\n        this.animation = {\r\n            fromAge,\r\n            toAge,\r\n            ageSpan: toAge - fromAge,\r\n            currentAge: fromAge,\r\n\r\n            durationMs,\r\n\r\n            nextAnimationFrame: undefined,\r\n\r\n            paused: true,\r\n        };\r\n\r\n        this.resumeAnimation();\r\n    }\r\n    pauseAnimation() {\r\n        if (this.animation) {\r\n            if (this.animation.nextAnimationFrame !== undefined) {\r\n                cancelAnimationFrame( this.animation.nextAnimationFrame );\r\n            }\r\n            this.animation.paused = true;\r\n        }\r\n    }\r\n    cancelAnimation() {\r\n        this.pauseAnimation();\r\n        this.animation = null;\r\n    }\r\n    resumeAnimation() {\r\n        const a = this.animation;\r\n        if (!a || !a.paused) return;\r\n        a.paused = false;\r\n\r\n        this.age = a.currentAge;\r\n\r\n        const acl = (t: number): number => t<0 ? 0 : t>1 ? 1 : Math.sin( (t - .5) * Math.PI ) * .5 + .5;\r\n        const aclInv = (t: number): number => t<0 ? 0 : t>1 ? 1 : Math.asin( t * 2 - 1 ) / Math.PI + .5;\r\n\r\n        let t0: number;\r\n        const upd = (ts: number) => {\r\n            if (!t0) {\r\n                const f = (a.currentAge - a.fromAge) / a.ageSpan;\r\n                t0 = ts - aclInv( f ) * a.durationMs;\r\n                a.nextAnimationFrame = requestAnimationFrame( upd );\r\n            }\r\n            else {\r\n                const f = acl( Math.min( 1, (ts - t0) / a.durationMs ) );\r\n\r\n                if (f < 1) {\r\n                    this.cfg.age = a.fromAge + f * a.ageSpan;\r\n                    a.currentAge = this.cfg.age;\r\n\r\n                    this._bodySvgElement = null;\r\n                    this.updateSvgElement();\r\n\r\n                    a.nextAnimationFrame = requestAnimationFrame( upd );\r\n                }\r\n                else {\r\n                    this.age = a.toAge;\r\n                    this.animation = null;\r\n                }\r\n            }\r\n        };\r\n\r\n        a.nextAnimationFrame = requestAnimationFrame( upd );\r\n    }\r\n}\r\n\r\nexport { SvgPlant };","import { rng, nodePos, nodeAttr, offshoot, node } from \"../util/util\";\r\nimport { rngSeed, attributeSet, leafCurvesHandles, leafDefinition, Genus } from '../types';\r\n\r\nclass BaseGenus implements Genus {\r\n\r\n    rng: rng;\r\n    width: number;\r\n    height: number;\r\n    maxBranchNum: number;\r\n\r\n    segmentStyle: attributeSet;\r\n    leafStyle: attributeSet;\r\n    leafCurveHandles: leafCurvesHandles;\r\n\r\n    constructor( rngSeed?: rngSeed ) {\r\n        this.rng = rng( rngSeed );\r\n\r\n        this.width = 4;\r\n        this.height = 4;\r\n        this.maxBranchNum = 1;\r\n\r\n        this.segmentStyle = {\r\n            fill: '#161',\r\n            stroke: '#041',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 60,\r\n            bottomLength: .6,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    static get genusName(): string {\r\n        const cn = this.name;\r\n        return cn.substring( 0, cn.length - 5 );\r\n    }\r\n    get genusName(): string {\r\n        const cn = this.constructor.name;\r\n        return cn.substring( 0, cn.length - 5 );\r\n    }\r\n    get rngSeed(): string {\r\n        return this.rng.seed;\r\n    }\r\n    reset(): void {\r\n        this.rng.reset();\r\n    }\r\n\r\n    getRoots(): offshoot[] {\r\n        return [\r\n            {\r\n                n: 3,\r\n                attr: { x: 0, segmentAngle: 0 }\r\n            },\r\n        ];\r\n    }\r\n    getOffshoots( node: node ): offshoot[] {\r\n        if (node.pos.isLast || node.pos.num==0) return [];\r\n\r\n        return [\r\n            {\r\n                n: 1,\r\n                attr: { segmentAngle: node.attr.angle - 60 }\r\n            },\r\n            {\r\n                n: 1,\r\n                attr: { segmentAngle: node.attr.angle + 60 }\r\n            },\r\n        ];\r\n    }\r\n\r\n    getNodeWidth( _pos: nodePos, _prev: node | null, _attr: nodeAttr ): number {\r\n        return .1;\r\n    }\r\n    getSegmentLength( _pos: nodePos, _prev: node | null, _attr: nodeAttr ) {\r\n        return 1;\r\n    }\r\n    getSegmentAngle( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        if (pos.isOffshoot) return prev.attr.angle;\r\n        return prev.attr.segmentAngle !== undefined ? prev.attr.segmentAngle : prev.attr.angle;\r\n    }\r\n\r\n    getSegmentStyle( _n0: node, _n1: node ): attributeSet {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0: node, n1: node ): leafDefinition[] {\r\n        if (!n1.pos.isLast) return [];\r\n\r\n        return [\r\n            {\r\n                angle: n1.attr.angle,\r\n                length: 1,\r\n                handles: this.leafCurveHandles,\r\n                style: this.leafStyle,\r\n\r\n                xOffset: 0,\r\n                yOffset: .95,\r\n            }\r\n        ];\r\n    }\r\n};\r\n\r\nexport { BaseGenus };","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper, node, nodePos, nodeAttr } from \"../util/util\";\r\nimport { rngSeed, Genus, leafDefinition } from '../types';\r\n\r\nclass BushyPlantGenus extends BaseGenus implements Genus {\r\n\r\n    constructor( rngSeed?: rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 6.1;\r\n        this.height = 6.6;\r\n        this.maxBranchNum = 3;\r\n\r\n        this.segmentStyle = {\r\n            fill: '#400',\r\n            stroke: '#931',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 60,\r\n            bottomLength: .6,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return [\r\n            {\r\n                n: this.rng.intRange( 4, 6 ),\r\n                attr: plantHelper.rootPosAngle( this.rng, .5, 6 ),\r\n            },\r\n        ];\r\n    }\r\n    getOffshoots( node: node ) {\r\n        if (node.pos.isLast || node.pos.num==0) return [];\r\n\r\n        const p = .5 * (.5 + .5 * node.pos.numFactor) * (.5 + .5 * node.pos.branchFactor);\r\n        const a = [];\r\n\r\n        const getNodeCount = () => 4 - node.pos.branchNum - this.rng.test( .6, 1, 0 );\r\n\r\n        if (this.rng.test( p )) a.push({\r\n            n: getNodeCount(),\r\n            attr: {\r\n                segmentAngle: node.attr.angle + this.rng.range( 25, 60 ),\r\n            }\r\n        });\r\n\r\n        if (this.rng.test( p )) a.push({\r\n            n: getNodeCount(),\r\n            attr: {\r\n                segmentAngle: node.attr.angle + this.rng.range( -60, -25 ),\r\n            }\r\n        });\r\n\r\n        return a;\r\n    }\r\n\r\n    getNodeWidth( pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (pos.isOffshoot && prev) return prev.attr.width;\r\n        return .1 * (.1 + .9 * pos.branchFactor);\r\n    }\r\n    getSegmentLength( pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (!prev) return 1;\r\n        if (!pos.isOffshoot && pos.branchNum>0) return prev.attr.length * .75;\r\n        if (!pos.isOffshoot) return prev.attr.length;\r\n\r\n        const f = .2 + .8 * (prev.branchRoot.prev ? prev.branchRoot.prev.pos.numFactor : 1);\r\n        return prev.attr.length * f;\r\n    }\r\n    getSegmentAngle( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        if (pos.branchNum>0) return plantHelper.nextAngle( this.rng, pos, prev, 16, true );\r\n        return plantHelper.nextAngle( this.rng, pos, prev, 8, true );\r\n    }\r\n\r\n    getSegmentStyle( _n0: node, _n1: node ) {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0: node, n1: node ) {\r\n        if (n1.pos.branchNum==0 && n1.pos.num<2) return [];\r\n\r\n        const leaves: leafDefinition[] = [];\r\n\r\n        const addLeaf = (avf: number) => {\r\n            leaves.push({\r\n                angle: n1.attr.angle + (avf ? (avf * this.rng.range( 20, 40 )) : this.rng.range( -10, 10 )),\r\n                length: this.rng.range( .5, .75 ),\r\n                handles: this.leafCurveHandles,\r\n                style: this.leafStyle,\r\n\r\n                xOffset: avf ? -avf * this.rng.range( 0, .5) : 0,\r\n                yOffset: avf ? this.rng.range( .3, .7 ) : .95,\r\n            });\r\n        };\r\n\r\n        if (n1.pos.isLast && this.rng.test( .5 )) addLeaf( 0 );\r\n\r\n        if (this.rng.test( .5 )) addLeaf( 1 );\r\n        if (this.rng.test( .5 )) addLeaf( -1 );\r\n\r\n        return leaves;\r\n    }\r\n};\r\n\r\nexport { BushyPlantGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper, node, offshoot, nodePos, nodeAttr } from \"../util/util\";\r\nimport { Genus, rngSeed, leafDefinition } from '../types';\r\n\r\nclass DragonTreeGenus extends BaseGenus implements Genus {\r\n\r\n    constructor( rngSeed?: rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 10.3;\r\n        this.height = 8.6;\r\n        this.maxBranchNum = 1;\r\n\r\n        this.segmentStyle = {\r\n            fill: '#400',\r\n            stroke: '#931',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 30,\r\n            bottomLength: .2,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return [\r\n            {\r\n                n: this.rng.intRange( 2, 4 ),\r\n                attr: plantHelper.rootPosAngle( this.rng, .5, 6 ),\r\n            },\r\n        ];\r\n    }\r\n    getOffshoots( node: node ) {\r\n        if (!node.pos.isLast) return [];\r\n\r\n        const p = .75;\r\n        const steps = { from: -60, to: 60, step: 30 };\r\n        const makeOffshoot = (angle: number): offshoot => {\r\n            return {\r\n                n: 2,\r\n                attr: {\r\n                    segmentAngle: node.attr.angle + angle + this.rng.range( -10, 10 ),\r\n                }\r\n            };\r\n        };\r\n        const offshoots = plantHelper.repeat({ rng: this.rng, steps, p, cb: makeOffshoot });\r\n\r\n        if (!offshoots.length) offshoots.push({\r\n            n: 2,\r\n            attr: {\r\n                segmentAngle: this.rng.range( -60, 60 ),\r\n            }\r\n        });\r\n\r\n        return offshoots;\r\n    }\r\n\r\n    getNodeWidth( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        if (pos.isOffshoot && prev) return prev.attr.width;\r\n        if (pos.branchNum == 1) return this.rng.range( .2, .3 );\r\n        return this.rng.range( .4, .6 );\r\n    }\r\n    getSegmentLength( pos: nodePos, _prev: node, _attr: nodeAttr ) {\r\n        if (pos.branchNum == 1) return this.rng.range( .2, .8 );\r\n        return this.rng.range( .5, 1.5 );\r\n    }\r\n    getSegmentAngle( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        return plantHelper.nextAngle( this.rng, pos, prev, 8, true );\r\n    }\r\n\r\n    getSegmentStyle( _n0: node, _n1: node ) {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0: node, n1: node ) {\r\n        if (!n1.pos.isLast || n1.pos.branchNum != 1) return [];\r\n\r\n        const steps = { from: -75, to: 75, step: 10 };\r\n        const p = .5;\r\n        const makeLeaf = (angle: number): leafDefinition => {\r\n            const av = this.rng.range( -5, 5 );\r\n            const sv = this.rng.range( -.7, .7 );\r\n\r\n            return {\r\n                angle: n1.attr.angle + angle + av,\r\n                length: 3.5 + sv,\r\n                handles: this.leafCurveHandles,\r\n                style: this.leafStyle,\r\n\r\n                xOffset: this.rng.range( -.2, .2 ),\r\n                yOffset: this.rng.range( .8, .95 ),\r\n            };\r\n        };\r\n        return plantHelper.repeat({ rng: this.rng, steps, p, cb: makeLeaf });\r\n    }\r\n};\r\n\r\nexport { DragonTreeGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper, node, nodePos, nodeAttr } from \"../util/util\";\r\nimport { Genus, rngSeed } from '../types';\r\n\r\nclass ZamiaGenus extends BaseGenus implements Genus {\r\n\r\n    constructor( rngSeed?: rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 3.6;\r\n        this.height = 3.5;\r\n        this.maxBranchNum = 0;\r\n\r\n        this.segmentStyle = {\r\n            stroke: '#041',\r\n            fill: '#161',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .01,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 24,\r\n            bottomLength: .6,\r\n            topAngle: 179,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return plantHelper.repeat({\r\n            rng: this.rng,\r\n            n: [ 1, 3 ],\r\n            cb: () => {\r\n                return {\r\n                    n: this.rng.intRange( 5, 7 ),\r\n                    attr: {\r\n                        ... plantHelper.rootPosAngle( this.rng, .25, 15 ),\r\n                        branchArchAngle: this.rng.ranges([ -30, -5 ], [ 5, 30 ]),\r\n                    }\r\n                };\r\n            }\r\n        });\r\n    }\r\n    getOffshoots( _node: node ) {\r\n        return [];\r\n    }\r\n\r\n    getNodeWidth( _pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (!prev) return .1;\r\n        return prev.attr.width * .8;\r\n    }\r\n    getSegmentLength( _pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (!prev) return this.rng.range( .4, 1 );\r\n        return prev.attr.length * this.rng.range( .6, .9 );\r\n    }\r\n    getSegmentAngle( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        return plantHelper.archingBranchAngle( this.rng, pos, prev, 5, .6 );\r\n    }\r\n\r\n    getSegmentStyle() {\r\n        return this.segmentStyle;\r\n    }\r\n\r\n    getLeaves( _n0: node, n1: node ) {\r\n        const length = n1.treeRoot.attr.length * 1.2 * (.5 + .5 * Math.sin( Math.PI * n1.pos.numFactor ));\r\n        const angles = n1.pos.isLast ? [ -70, -30, 30, 70 ] : [ -70, 70 ];\r\n\r\n        return plantHelper.repeat({\r\n            rng: this.rng,\r\n            values: angles,\r\n            p: .89,\r\n            cb: angle => {\r\n                const av = this.rng.range( -6, 6 );\r\n                const lv = this.rng.range( -.1, .1 );\r\n                const lf = Math.abs( angle ) < 70 ? .9 : 1;\r\n\r\n                return {\r\n                    angle: n1.attr.angle + angle + av,\r\n                    length: length * lf + lv,\r\n                    handles: this.leafCurveHandles,\r\n                    style: this.leafStyle,\r\n\r\n                    xOffset: 0,\r\n                    yOffset: 1,\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport { ZamiaGenus };","import { BaseGenus } from \"./BaseGenus\";\r\nimport { plantHelper, node, offshoot, nodePos, nodeAttr } from \"../util/util\";\r\nimport { Genus, rngSeed, attributeSet } from '../types';\r\n\r\nclass PileaGenus extends BaseGenus implements Genus {\r\n\r\n    offshootSegmentStyle: attributeSet;\r\n    branchSegmentStyle: attributeSet;\r\n\r\n    constructor( rngSeed?: rngSeed ) {\r\n        super( rngSeed );\r\n\r\n        this.width = 4.6;\r\n        this.height = 4.1;\r\n        this.maxBranchNum = 1;\r\n\r\n        this.segmentStyle = {\r\n            stroke: '#931',\r\n            fill: '#400',\r\n            'stroke-width': .0075,\r\n        };\r\n        this.offshootSegmentStyle = {\r\n            stroke: '#931',\r\n            fill: '#400',\r\n            'stroke-width': .0075,\r\n        };\r\n        this.branchSegmentStyle = {\r\n            stroke: '#041',\r\n            fill: '#161',\r\n            'stroke-width': .0075,\r\n        };\r\n\r\n        this.leafStyle = {\r\n            stroke: '#0d5',\r\n            fill: 'rgba(0,255,110,.9)',\r\n            'stroke-width': .02,\r\n        };\r\n        this.leafCurveHandles = {\r\n            bottomAngle: 80,\r\n            bottomLength: 1,\r\n            topAngle: 100,\r\n            topLength: .2,\r\n        };\r\n    }\r\n\r\n    getRoots() {\r\n        return [{\r\n            n: this.rng.intRange( 0, 3 ),\r\n            attr: plantHelper.rootPosAngle( this.rng, .25, 8 ),\r\n        }];\r\n    }\r\n    getOffshoots( node: node ) {\r\n        if (node.pos.isLast) return plantHelper.repeat({\r\n            rng: this.rng,\r\n            n: [ 1, 12 ],\r\n            cb: (): offshoot => {\r\n                return {\r\n                    n: this.rng.intRange( 3, 6 ),\r\n                    attr: {\r\n                        segmentAngle: node.attr.angle + this.rng.range( -40, 40 ),\r\n                        branchArchAngle: this.rng.ranges([ -40, -5 ], [ 5, 40 ]),\r\n                    }\r\n                };\r\n            }\r\n        });\r\n\r\n        if (node.pos.num) return plantHelper.repeat({\r\n            rng: this.rng,\r\n            n: [ 0, 4 ],\r\n            cb: (): offshoot => {\r\n                return {\r\n                    n: this.rng.intRange( 2, 3 ),\r\n                    attr: {\r\n                        segmentAngle: node.attr.angle + this.rng.ranges([ -80, -40 ], [ 40, 80 ]),\r\n                        branchArchAngle: this.rng.ranges([ -40, -5 ], [ 5, 40 ]),\r\n                    }\r\n                };\r\n            }\r\n        });\r\n\r\n        return [];\r\n    }\r\n\r\n    getNodeWidth( pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (pos.branchNum == 0) return this.rng.range( .1, .3 );\r\n        if (pos.isOffshoot && prev !== null) return prev.attr.width;\r\n        return this.rng.range( .05, .1 );\r\n    }\r\n    getSegmentLength( pos: nodePos, prev: node | null, _attr: nodeAttr ) {\r\n        if (!prev) return this.rng.range( .6, 1.2 );\r\n        if (pos.branchNum == 0) return prev.attr.length * .9;\r\n        if (pos.isOffshoot) return this.rng.range( .1, .2 );\r\n        if (pos.num == 1) {\r\n            if (prev.branchRoot.pos.isLast) return this.rng.range( .6, 1.2 );\r\n            return this.rng.range( .3, .6 );\r\n        }\r\n        return prev.attr.length * .75;\r\n    }\r\n    getSegmentAngle( pos: nodePos, prev: node, _attr: nodeAttr ) {\r\n        if (pos.branchNum == 0) return this.rng.range( -8, 8 );\r\n        return plantHelper.archingBranchAngle( this.rng, pos, prev, 5, .1 );\r\n    }\r\n\r\n    getSegmentStyle( n0: node, _n1: node ) {\r\n        if (n0.pos.branchNum == 0) return this.segmentStyle;\r\n        if (n0.pos.isOffshoot) return this.offshootSegmentStyle;\r\n        return this.branchSegmentStyle;\r\n    }\r\n\r\n    getLeaves( n0: node, n1: node ) {\r\n        if (!n1.pos.isLast || n1.pos.branchNum != 1) return [];\r\n\r\n        const length = (n1.treeRoot.attr.length || 1) * this.rng.range( .4, 1.5 );\r\n        const angle = plantHelper.segmentAngle( n0 ) + this.rng.range( -8, 8 );\r\n\r\n        return [{\r\n            angle,\r\n            length,\r\n            handles: this.leafCurveHandles,\r\n            style: this.leafStyle,\r\n\r\n            xOffset: 0,\r\n            yOffset: .96,\r\n        }];\r\n    }\r\n};\r\n\r\nexport { PileaGenus };","import { SvgPlant } from \"../Plant/SvgPlant\";\r\nimport { PlantBody } from \"../Plant/PlantBody\";\r\nimport { GenusConstructor } from '../types';\r\n\r\nconst testPlantBodySize = (genus: GenusConstructor, n=1000) => {\r\n    const widths: number[] = [];\r\n    const heights: number[] = [];\r\n\r\n    for (let i=0; i<n; i++) {\r\n        const p = (new SvgPlant( new genus )).body;\r\n        p.genus.width = 0;\r\n        p.genus.height = 0;\r\n        p.init();\r\n\r\n        widths.push( p.bbox.width );\r\n        heights.push( p.bbox.height );\r\n    }\r\n\r\n    widths.sort( (a,b) => a - b );\r\n    heights.sort( (a,b) => a - b );\r\n\r\n    return ( q=50 ) => {\r\n        const i = Math.max( 0, Math.min( n-1, Math.round( q / 100 * (n-1) ) ) );\r\n        return {\r\n            width: widths[ i ],\r\n            height: heights[ i ],\r\n        };\r\n    };\r\n};\r\n\r\nconst findSeed = (genus: GenusConstructor, test: (p: PlantBody) => boolean, timeoutMs=10*1000) => {\r\n    let cancel = false, n = 0, seed;\r\n    const t0 = Date.now();\r\n\r\n    const to = setTimeout(() => {\r\n        cancel = true;\r\n    }, timeoutMs );\r\n\r\n    while (true) {\r\n        const p = (new SvgPlant( new genus )).body;\r\n        p.genus.width = 0;\r\n        p.genus.height = 0;\r\n        p.init();\r\n        n++;\r\n\r\n        if (test( p )) {\r\n            clearTimeout( to );\r\n            seed = p.genus.rngSeed;\r\n            console.log( 'Seed found!', seed );\r\n            break;\r\n        }\r\n\r\n        if (cancel) {\r\n            console.log( 'No seed was found' );\r\n            break;\r\n        }\r\n    }\r\n\r\n    const t = ((Date.now() - t0) / 1000 ).toFixed( 2 );\r\n    console.log( 'findSeed finished after ' + t + ' seconds and ' + n + ' tries.' );\r\n\r\n    return seed;\r\n};\r\n\r\nconst testPerformance = (genus: GenusConstructor, durationMs=10*1000) => {\r\n    const t0 = Date.now();\r\n    let n = 0;\r\n\r\n    while (true) {\r\n        const p = (new SvgPlant( new genus )).body;\r\n        p.genus.width = 0;\r\n        p.genus.height = 0;\r\n        p.init();\r\n        n++;\r\n\r\n        if (Date.now() - t0 > durationMs) break;\r\n    }\r\n\r\n    const ms = Date.now() - t0;\r\n    const s = ms / 1000;\r\n\r\n    console.group( genus.name + ' Performance Test' );\r\n    console.log( 'created ' + n + ' plants in ' + s.toFixed( 2 ) + ' seconds' );\r\n    console.log( (n/s).toFixed(2) + ' plants/sec' );\r\n    console.log( (ms/n).toFixed(2) + ' ms/plant' );\r\n    console.groupEnd();\r\n\r\n    return;\r\n}\r\n\r\nexport {\r\n    testPlantBodySize,\r\n    findSeed,\r\n    testPerformance,\r\n}","\r\nimport { SvgPlant } from './Plant/SvgPlant';\r\nimport { BaseGenus } from './Genera/BaseGenus';\r\nimport { BushyPlantGenus } from './Genera/BushyPlantGenus';\r\nimport { DragonTreeGenus } from './Genera/DragonTreeGenus';\r\nimport { ZamiaGenus } from './Genera/ZamiaGenus';\r\nimport { PileaGenus } from './Genera/PileaGenus';\r\nimport * as DevTools from './util/DevTools';\r\nimport { plantHelper } from './util/util';\r\n\r\nconst Genera = {\r\n    'BushyPlant': BushyPlantGenus,\r\n    'DragonTree': DragonTreeGenus,\r\n    'Zamia': ZamiaGenus,\r\n    'Pilea': PileaGenus,\r\n};\r\n\r\nexport {\r\n    SvgPlant,\r\n    Genera,\r\n    BaseGenus, BushyPlantGenus, DragonTreeGenus, ZamiaGenus, PileaGenus,\r\n\r\n    plantHelper,\r\n    DevTools,\r\n};"],"names":["html","node","tag","set","document","createElement","attr","nodeNS","ns","createElementNS","name","setAttribute","String","svg","root","setAttributeNS","el","compilePathDescription","points","d","p","length","push","join","math","toRadians","degrees","Math","PI","fromAngle","point","angle","precision","a","sin","cos","round","rectFromLine","pointBottom","pointTop","angleBottom","angleTop","widthBottom","widthTop","pointOnLine","p1","p2","distance","dx","dy","sqrt","plantHelper","rootPosAngle","rng","xMax","maxAngle","x","range","f","abs","segmentAngle","baseNode","undefined","nextAngle","pos","prevNode","variance","alternate","isOffshoot","pa","dir","branchNum","treeRoot","num","archingBranchAngle","numAdjust","base","branchRoot","branchArchAngle","numFactor","repeat","cb","shuffle","steps","values","n","test","v","i","from","to","step","Array","isArray","intRange","seed","seedStr","random","substring","fn","reset","seedrandom","pass","fail","r","v0","v1","floor","ranges","ep","last","pop","j","tmp","BBox","data","x0","x1","y0","y1","Infinity","y","addX","addY","bbox","strict","height","width","ProcTree","maxBranchNum","getNode","getOffshoots","roots","growBranch","Number","rootNode","offshootNum","segmentCount","isTreeRoot","addNode","isLastBranch","offshoots","prev","maxNum","rootAttr","getPos","next","offshootHeight","isRoot","isLast","branchFactor","_each","offshootNode","plantPotSvg","pathAttr","baseCfg","rimHeight","rimLipOuter","rimLipInner","bottom","sw","pad","getPoints","cfg","path","class","viewBox","preserveAspectRatio","appendChild","expandXBounds","bounds","value","minX","maxX","expandYBounds","minY","maxY","calculateBezier","t","p0","p3","mt","bezierCurveBoundingBox","cx1","cy1","cx2","cy2","x2","y2","min","max","dcx0","dcy0","dcx1","dcy1","dcx2","dcy2","b","c","numerator","denominator","quadroot","t1","t2","prc","BranchSegment","style","n0","n1","bottomWidth","topWidth","bottomAngle","topAngle","top","ageOffset","totalLength","getBoundingBox","age","ageFactor","getAgeFactor","bb","addPoint","l1","l2","l3","Leaf","segment","handles","xOffset","yOffset","getOffsetPoint","pBase","curves","getCurves","up","down","addBBox","expand","bha","bhl","bottomLength","tha","thl","topLength","Branches","segments","leaves","branch","leaf","ret","concat","sortLeaves","sort","l0","containsPoint","d0","d1","PlantBody","genus","maxAge","yFactor","getNodeAttr","getNodeWidth","getSegmentAngle","getSegmentLength","getRoots","tree","getTree","grow","branches","Map","getBasePoint","get","rp","eachSegment","getSegmentStyle","s","addSegment","getLeaves","map","addLeaf","parts","getArray","bboxX","colors","add","Object","assign","init","withPrecision","render","SvgPlant","color","potSize","potPathAttr","fill","stroke","_typeof","body","_svgElement","_potSvgElement","_bodySvgElement","animation","pot","updateSvgElement","innerHTML","getSvgElement","place","w","h","potSvgElement","bodySvgElement","overlap","bodyHeight","wrapperAR","aboveFoldBodyAR","scaledBodyHeight","getSvg","fromAge","toAge","durationMs","cancelAnimation","ageSpan","currentAge","nextAnimationFrame","paused","resumeAnimation","cancelAnimationFrame","pauseAnimation","acl","aclInv","asin","t0","upd","ts","requestAnimationFrame","rngSeed","update","getPotSvgElement","getBodySvgElement","BaseGenus","segmentStyle","leafStyle","leafCurveHandles","_pos","_prev","_attr","_n0","_n1","cn","constructor","BushyPlantGenus","getNodeCount","avf","DragonTreeGenus","makeOffshoot","makeLeaf","av","sv","ZamiaGenus","_node","angles","lv","lf","PileaGenus","offshootSegmentStyle","branchSegmentStyle","testPlantBodySize","widths","heights","q","findSeed","timeoutMs","cancel","Date","now","setTimeout","clearTimeout","console","log","toFixed","testPerformance","ms","group","groupEnd","Genera"],"mappings":"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"}